(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!*********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var objectKeys = ['qy', 'env', 'error', 'version', 'lanDebug', 'cloud', 'serviceMarket', 'router', 'worklet', '__webpack_require_UNI_MP_PLUGIN__'];
var singlePageDisableKey = ['lanDebug', 'router', 'worklet'];
var target = typeof globalThis !== 'undefined' ? globalThis : function () {
  return this;
}();
var key = ['w', 'x'].join('');
var oldWx = target[key];
var launchOption = oldWx.getLaunchOptionsSync ? oldWx.getLaunchOptionsSync() : null;
function isWxKey(key) {
  if (launchOption && launchOption.scene === 1154 && singlePageDisableKey.includes(key)) {
    return false;
  }
  return objectKeys.indexOf(key) > -1 || typeof oldWx[key] === 'function';
}
function initWx() {
  var newWx = {};
  for (var _key in oldWx) {
    if (isWxKey(_key)) {
      // TODO wrapper function
      newWx[_key] = oldWx[_key];
    }
  }
  return newWx;
}
target[key] = initWx();
if (!target[key].canIUse('getAppBaseInfo')) {
  target[key].getAppBaseInfo = target[key].getSystemInfoSync;
}
if (!target[key].canIUse('getWindowInfo')) {
  target[key].getWindowInfo = target[key].getSystemInfoSync;
}
if (!target[key].canIUse('getDeviceInfo')) {
  target[key].getDeviceInfo = target[key].getSystemInfoSync;
}
var _default = target[key];
exports.default = _default;

/***/ }),

/***/ 10:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 103:
/*!****************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/behavior/search_bh.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var SearchBiz = __webpack_require__(/*! ../biz/search_biz.js */ 104);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
module.exports = {
  data: function data() {
    return {
      type: '',
      // 来自哪个业务标识
      returnUrl: '',
      //搜索完返回哪个地址
      cacheName: '',
      //本业务搜索历史缓存
      search: '',
      //搜索关键字

      hisKeys: []
    };
  },
  methods: {
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function () {
      var _onLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {
        var type, returnUrl, cacheName, hisKeys;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                type = options.type;
                returnUrl = options.returnUrl;
                cacheName = 'SERACH_HIS_' + type;
                hisKeys = SearchBiz.getHistory(cacheName);
                if (hisKeys) {
                  this.setData({
                    hisKeys: hisKeys
                  });
                }
                this.setData({
                  hisKeys: hisKeys,
                  type: type,
                  cacheName: cacheName,
                  returnUrl: returnUrl
                });
                if (options && options.source) {
                  this.setData({
                    source: options.source
                  });
                }
              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function onLoad(_x) {
        return _onLoad.apply(this, arguments);
      }
      return onLoad;
    }(),
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    url: function url(e) {
      pageHelper.url(e, this);
    },
    /**
     *  点击确认搜索
     */
    bindSearchConfirm: function bindSearchConfirm(e) {
      if (!this.type) {
        return;
      }
      var search = this.search.trim();
      if (!search) {
        return;
      }

      // 历史记录
      var hisKeys = SearchBiz.addHistory(this.cacheName, search);
      this.setData({
        search: search,
        hisKeys: hisKeys
      });
      var prevPage = pageHelper.getPrevPage();
      // 直接调用上一个页面的setData()方法，把数据存到上一个页面中去
      prevPage.setData({
        search: search
      });
      uni.navigateBack();
    },
    // 清空搜索记录
    bindDelHisTap: function bindDelHisTap(e) {
      SearchBiz.clearHistory(this.cacheName);
      this.setData({
        hisKeys: []
      });
    },
    //清除关键字
    bindClearKeyTap: function bindClearKeyTap(e) {
      this.setData({
        search: ''
      });
    },
    // 点击历史
    bindKeyTap: function bindKeyTap(e) {
      var search = e.currentTarget.dataset.key.trim();
      if (search) {
        this.setData({
          search: search
        });
        this.bindSearchConfirm(e);
      }
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 104:
/*!************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/search_biz.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 搜索模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var cacheHelper = __webpack_require__(/*! ../../helper/cache_helper.js */ 66);

/**
 *
 */
var SearchBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(SearchBiz, _BaseBiz);
  var _super = _createSuper(SearchBiz);
  function SearchBiz() {
    _classCallCheck(this, SearchBiz);
    return _super.apply(this, arguments);
  }
  _createClass(SearchBiz, null, [{
    key: "clearHistory",
    value: function clearHistory(key) {
      cacheHelper.remove(key);
    }
  }, {
    key: "getHistory",
    value: function getHistory(key) {
      return cacheHelper.get(key, []);
    }

    /**添加关键字缓存
     *
     * @param {*} key
     * @param {*} val
     * @param {*} size 个数
     * @param {*} expire 过期时间
     */
  }, {
    key: "addHistory",
    value: function addHistory(key, val) {
      var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;
      var expire = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2592000;
      if (!val || val.length == 0) {
        return [];
      }
      var his = cacheHelper.get(key, []);

      //查询是否存在 并删除
      var pos = his.indexOf(val);
      if (pos > -1) {
        his.splice(pos, 1);
      }

      // 加到头部
      his.unshift(val);

      // 判断个数， 多的删除
      if (his.length > size) {
        his.splice(his.length - 1, 1);
      }

      // 存缓存
      cacheHelper.set(key, his, expire);
      return his;
    }
  }]);
  return SearchBiz;
}(BaseBiz);
module.exports = SearchBiz;

/***/ }),

/***/ 11:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 113:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/admin_biz.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var cacheHelper = __webpack_require__(/*! ../../helper/cache_helper.js */ 66);
var cloudHelper = __webpack_require__(/*! ../../helper/cloud_helper.js */ 68);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var constants = __webpack_require__(/*! ../constants.js */ 70);
var setting = __webpack_require__(/*! ../../setting/setting.js */ 42);
var AdminBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(AdminBiz, _BaseBiz);
  var _super = _createSuper(AdminBiz);
  function AdminBiz() {
    _classCallCheck(this, AdminBiz);
    return _super.apply(this, arguments);
  }
  _createClass(AdminBiz, null, [{
    key: "setContentDesc",
    value:
    // 文章内容
    function setContentDesc(that) {
      var contentDesc = '未填写';
      var content = that.data.formContent;
      var imgCnt = 0;
      var textCnt = 0;
      for (var k = 0; k < content.length; k++) {
        if (content[k].type == 'img') {
          imgCnt++;
        }
        if (content[k].type == 'text') {
          textCnt++;
        }
      }
      if (imgCnt || textCnt) {
        contentDesc = textCnt + '段文字，' + imgCnt + '张图片';
      }
      that.setData({
        contentDesc: contentDesc
      });
    }
  }, {
    key: "adminLogin",
    value: function () {
      var _adminLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(that, name, pwd) {
        var params, opt;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(name.length < 5 || name.length > 30)) {
                  _context.next = 3;
                  break;
                }
                uni.showToast({
                  title: '账号输入错误(5-30位)',
                  icon: 'none'
                });
                return _context.abrupt("return");
              case 3:
                if (!(pwd.length < 5 || pwd.length > 30)) {
                  _context.next = 6;
                  break;
                }
                uni.showToast({
                  title: '密码输入错误(5-30位)',
                  icon: 'none'
                });
                return _context.abrupt("return");
              case 6:
                params = {
                  name: name,
                  pwd: pwd
                };
                opt = {
                  title: '登录中'
                };
                _context.prev = 8;
                _context.next = 11;
                return cloudHelper.callCloudSumbit('admin/login', params, opt).then(function (res) {
                  if (res && res.data && res.data.name) {
                    cacheHelper.set(constants.CACHE_ADMIN, res.data, constants.ADMIN_TOKEN_EXPIRE);
                  }
                  uni.reLaunch({
                    url: pageHelper.fmtURLByPID('/pages/admin/index/home/admin_home')
                  });
                });
              case 11:
                _context.next = 18;
                break;
              case 13:
                _context.prev = 13;
                _context.t0 = _context["catch"](8);
                console.log('CatchClause', _context.t0);
                console.log('CatchClause', _context.t0);
                console.log(_context.t0);
              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[8, 13]]);
      }));
      function adminLogin(_x, _x2, _x3) {
        return _adminLogin.apply(this, arguments);
      }
      return adminLogin;
    }()
    /**
     * 清空管理员登录
     */
  }, {
    key: "clearAdminToken",
    value: function clearAdminToken() {
      cacheHelper.remove(constants.CACHE_ADMIN);
    }

    /**
     * 获取管理员信息
     */
  }, {
    key: "getAdminToken",
    value: function getAdminToken() {
      return cacheHelper.get(constants.CACHE_ADMIN);
    }

    /**
     * 获取管理员电话
     */
  }, {
    key: "getAdminName",
    value: function getAdminName() {
      var admin = cacheHelper.get(constants.CACHE_ADMIN);
      if (!admin) {
        return '';
      }
      return admin.name;
    }

    /**
     * 是否超级管理员
     */
  }, {
    key: "isSuperAdmin",
    value: function isSuperAdmin() {
      var admin = cacheHelper.get(constants.CACHE_ADMIN);
      if (!admin) {
        return false;
      }
      return admin.type == 1;
    }

    //  登录状态判定
  }, {
    key: "isAdmin",
    value: function isAdmin(that) {
      var isSuper = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      uni.setNavigationBarColor({
        //顶部
        backgroundColor: '#2499f2',
        frontColor: '#ffffff'
      });
      if (setting.IS_SUB) {
        uni.hideHomeButton();
      }
      var admin = cacheHelper.get(constants.CACHE_ADMIN);
      if (!admin) {
        return uni.showModal({
          title: '',
          content: '登录已过期，请重新登录',
          showCancel: false,
          confirmText: '确定',
          success: function success(res) {
            uni.reLaunch({
              url: pageHelper.fmtURLByPID('/pages/admin/index/login/admin_login')
            });
            return false;
          }
        });
      }
      if (isSuper && admin.type != 1) {
        return uni.showModal({
          title: '',
          content: '此功能需要超级管理员操作',
          showCancel: false,
          confirmText: '确定',
          success: function success(res) {
            uni.reLaunch({
              url: pageHelper.fmtURLByPID('/pages/admin/index/home/admin_home')
            });
            return false;
          }
        });
      }
      that.setData({
        isAdmin: true,
        isSuperAdmin: this.isSuperAdmin(),
        admin: admin
      });
      return true;
    }
  }]);
  return AdminBiz;
}(BaseBiz);
AdminBiz.CHECK_FORM_MGR_ADD = {
  type: 'formType|must|int|default=0|name=类型',
  name: 'formName|must|string|min:5|max:30|name=账号',
  desc: 'formDesc|must|string|max:30|name=姓名',
  phone: 'formPhone|string|len:11|name=手机',
  password: 'formPassword|must|string|min:6|max:30|name=密码'
};
AdminBiz.CHECK_FORM_MGR_EDIT = {
  type: 'formType|must|int|default=0|name=类型',
  name: 'formName|must|string|min:5|max:30|name=账号',
  desc: 'formDesc|must|string|max:30|name=姓名',
  phone: 'formPhone|string|len:11|name=手机',
  password: 'formPassword|string|min:6|max:30|name=新密码'
};
AdminBiz.CHECK_FORM_MGR_PWD = {
  oldPassword: 'formOldPassword|must|string|min:6|max:30|name=旧密码',
  password: 'formPassword|must|string|min:6|max:30|name=新密码',
  password2: 'formPassword2|must|string|min:6|max:30|name=新密码再次填写'
};
module.exports = AdminBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 114:
/*!************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/work_biz.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 服务者管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2022-01-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var cloudHelper = __webpack_require__(/*! ../../../helper/cloud_helper.js */ 68);
var cacheHelper = __webpack_require__(/*! ../../../helper/cache_helper.js */ 66);
var pageHelper = __webpack_require__(/*! ../../../helper/page_helper.js */ 64);
var constants = __webpack_require__(/*! ../../../comm/constants.js */ 70);
var setting = __webpack_require__(/*! ../../../setting/setting.js */ 42);
var WorkBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(WorkBiz, _BaseBiz);
  var _super = _createSuper(WorkBiz);
  function WorkBiz() {
    _classCallCheck(this, WorkBiz);
    return _super.apply(this, arguments);
  }
  _createClass(WorkBiz, null, [{
    key: "workLogin",
    value: function () {
      var _workLogin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(that, phone, pwd) {
        var params, opt;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(phone.length != 11)) {
                  _context.next = 3;
                  break;
                }
                uni.showToast({
                  title: '手机号输入错误',
                  icon: 'none'
                });
                return _context.abrupt("return");
              case 3:
                if (!(pwd.length < 5 || pwd.length > 30)) {
                  _context.next = 6;
                  break;
                }
                uni.showToast({
                  title: '密码输入错误(5-30位)',
                  icon: 'none'
                });
                return _context.abrupt("return");
              case 6:
                params = {
                  phone: phone,
                  pwd: pwd
                };
                opt = {
                  title: '登录中'
                };
                _context.prev = 8;
                _context.next = 11;
                return cloudHelper.callCloudSumbit('work/login', params, opt).then(function (res) {
                  if (res && res.data && res.data.name) {
                    cacheHelper.set(constants.CACHE_WORK, res.data, constants.WORK_TOKEN_EXPIRE);
                  }
                  uni.reLaunch({
                    url: pageHelper.fmtURLByPID('/pages/work/index/home/work_home')
                  });
                });
              case 11:
                _context.next = 18;
                break;
              case 13:
                _context.prev = 13;
                _context.t0 = _context["catch"](8);
                console.log('CatchClause', _context.t0);
                console.log('CatchClause', _context.t0);
                console.log(_context.t0);
              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[8, 13]]);
      }));
      function workLogin(_x, _x2, _x3) {
        return _workLogin.apply(this, arguments);
      }
      return workLogin;
    }()
    /**
     * 清空管理员登录
     */
  }, {
    key: "clearWorkToken",
    value: function clearWorkToken() {
      cacheHelper.remove(constants.CACHE_WORK);
    }

    /**
     * 获取管理员信息
     */
  }, {
    key: "getWorkToken",
    value: function getWorkToken() {
      return cacheHelper.get(constants.CACHE_WORK);
    }
  }, {
    key: "getWorkName",
    value: function getWorkName() {
      var work = cacheHelper.get(constants.CACHE_WORK);
      if (!work) {
        return '';
      }
      return work.name;
    }
  }, {
    key: "getWorkId",
    value: function getWorkId() {
      var token = cacheHelper.get(constants.CACHE_WORK);
      if (!token) {
        return '';
      }
      return token.id || '';
    }

    //  登录状态判定
  }, {
    key: "isWork",
    value: function isWork(that) {
      uni.setNavigationBarColor({
        //顶部
        backgroundColor: '#1C9399',
        frontColor: '#ffffff'
      });
      if (setting.IS_SUB) {
        uni.hideHomeButton();
      }
      var work = cacheHelper.get(constants.CACHE_WORK);
      if (!work) {
        return uni.showModal({
          title: '',
          content: '登录已过期，请重新登录',
          showCancel: false,
          confirmText: '确定',
          success: function success(res) {
            uni.reLaunch({
              url: pageHelper.fmtURLByPID('/pages/work/index/login/work_login')
            });
            return false;
          }
        });
      }
      that.setData({
        isWork: true
      });
      return true;
    }
  }]);
  return WorkBiz;
}(BaseBiz);
WorkBiz.CHECK_FORM_MGR_PWD = {
  oldPassword: 'formOldPassword|must|string|min:6|max:30|name=旧密码',
  password: 'formPassword|must|string|min:6|max:30|name=新密码',
  password2: 'formPassword2|must|string|min:6|max:30|name=新密码再次填写'
};
module.exports = WorkBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 12:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 14);
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 123:
/*!********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/validate.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11);
/**
 * Notes: 数据校验类库
 * Ver : CCMiniCloud Framework 2.0.15 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-01-07 07:48:00
 *
 */
var pageHelper = __webpack_require__(/*! ./page_helper.js */ 64);
var CHECK_OPEN = true;
var CHECK_SOURCE = 'client'; //client/admin

/**
 * 判断变量，参数，对象属性是否定义
 * @param {*} val
 */
function isDefined(val) {
  // ==  不能判断是否为null
  if (val === undefined) {
    return false;
  } else {
    return true;
  }
}
function isNull(value) {
  if (value === null || value === undefined) {
    return true;
  }
  if (getDataType(value) == String && value === '') {
    return true;
  }
  return false;
}
function isStrAndArrNull(value) {
  if (value === null || value === undefined) {
    return true;
  }
  var type = getDataType(value);
  if (type == String && value === '') {
    return true;
  }
  if (type == Array && value.length == 0) {
    return true;
  }
  return false;
}
function getDataType(value) {
  if (value === null || value === undefined) {
    return value;
  }
  var ret = value.constructor;
  var str = ret.toString();
  if (str.indexOf('function Object') == 0) {
    ret = Object;
  }
  if (str.indexOf('function Array') == 0) {
    ret = Array;
  }
  return ret;
}

// 是否必填
function checkRequired(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  switch (getDataType(value)) {
    case Object:
      if (JSON.stringify(value) == '{}') {
        return desc + '不能为空obj';
      }
      break;
    case Array:
      if (value.length == 0) {
        return desc + '不能为空';
      }
      break;
    case String:
      if (value.length == 0) {
        return desc + '不能为空';
      }
      break;
    case null:
    case undefined:
      return desc + '不能为空';
  }
}

// 校验字符/数组长度，校验数字大小
function checkMin(value, min) {
  var desc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  if (isStrAndArrNull(value)) {
    return;
  }
  min = Number(min);
  switch (getDataType(value)) {
    case Array:
      if (value.length < min) {
        return desc + '不能少于' + min + '项';
      }
      break;
    case String:
      if (value.length < min) {
        return desc + '不能少于' + min + '位';
      }
      break;
    case Number:
      if (value < min) {
        return desc + '不能小于' + min;
      }
      break;
  }
}
// 校验字符/数组长度，校验数字大小
function checkMax(value, max) {
  var desc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  if (isStrAndArrNull(value)) {
    return;
  }
  max = Number(max);
  switch (getDataType(value)) {
    case Array:
      if (value.length > max) {
        return desc + '不能多于' + max + '项';
      }
      break;
    case String:
      if (value.length > max) {
        return desc + '不能多于' + max + '位';
      }
      break;
    case Number:
      if (value > max) {
        return desc + '不能大于' + max;
      }
      break;
  }
}
// 校验字符/数组长度
function checkLen(value, len) {
  var desc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  if (isStrAndArrNull(value)) {
    return;
  }
  len = Number(len);
  switch (getDataType(value)) {
    case Array:
      if (value.length != len) {
        return desc + '必须为' + len + '项';
      }
      break;
    case String:
      if (value.length != len) {
        return desc + '必须为' + len + '位';
      }
      break;
  }
}
function checkMobile(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/(^1[1|2|3|4|5|6|7|8|9][0-9]{9}$)/.test(value)) {
    return desc + '格式不正确';
  }
}
function checkInt(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/^[0-9]+$/.test(value)) {
    return desc + '必须为数字';
  }
}
function checkDigit(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/^\d+(\.\d+)?$/.test(value)) {
    return desc + '必须为数字或小数';
  }
}
function checkLetter(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/^[A-Za-z]+$/.test(value)) {
    return desc + '必须为字母';
  }
}
function checkMoney(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/.test(value)) {
    return desc + '必须为金额格式，例如2.00';
  }
}
function checkLetterNum(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  if (!/^\w+$/.test(value)) {
    return desc + '必须为字母，数字和下划线';
  }
}
function checkId(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 100;
  if (isNull(value)) {
    return;
  }
  min = Number(min);
  max = Number(max);
  if (getDataType(value) != String) {
    return desc + '必须为ID字符串格式';
  }
  if (value.length < min || value.length > max) {
    return desc + '必须为ID格式';
  }
  /*if (!/^\w+$/.test(value))
  return desc + '必须为ID格式';*/
}

//  邮箱
function checkEmail(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var reg = /^[A-Za-z0-9+]+[A-Za-z0-9\.\_\-+]*@([A-Za-z0-9\-]+\.)+[A-Za-z0-9]+$/;
  if (!reg.test(value)) {
    return desc + '必须为邮箱格式';
  }
}

// 短日期，形如 (yyyy-mm-dd 2008-07-22)
function checkDate(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = '请选择' + desc;
  if (value.length != 10) {
    return hint;
  }
  var r = value.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);
  if (r == null) {
    return hint;
  }
  var d = new Date(r[1], r[3] - 1, r[4]);
  var chk = d.getFullYear() == r[1] && d.getMonth() + 1 == r[3] && d.getDate() == r[4];
  if (!chk) {
    return hint;
  }
}

// 年份，形如 (yyyy 2008)
function checkYear(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = '请选择' + desc;
  if (value.length != 4) {
    return hint;
  }
  value += '-01-01';
  return checkDate(value, desc);
}

// 年月，形如 (yyyy-mm 2008-01)
function checkYearMonth(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = '请选择' + desc;
  if (value.length != 7) {
    return hint;
  }
  value += '-01';
  return checkDate(value, desc);
}

// 短时间(时分秒)，形如 (13:04:06)
function checkTime(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = desc + '必须为时间格式';
  if (value.length != 8) {
    return hint;
  }
  var a = value.match(/^(\d{1,2})(:)?(\d{1,2})\2(\d{1,2})$/);
  if (a == null) {
    return hint;
  }
  if (a[1] > 23 || a[3] > 59 || a[4] > 59) {
    return hint;
  }
}

// 短时间(时分)，形如 (hh:mm 13:04)
function checkHourMinute(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = desc + '必须为时分时间格式';
  if (value.length != 5) {
    return hint;
  }
  value += ':01';
  return checkTime(value, desc);
}

// 长时间，形如 (2008-07-22 13:04:06)
function checkDatimeTime(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (isNull(value)) {
    return;
  }
  var hint = desc + '必须为完整时间格式';
  if (value.length != 19) {
    return hint;
  }
  var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/;
  var r = value.match(reg);
  if (r == null) {
    return hint;
  }
  var d = new Date(r[1], r[3] - 1, r[4], r[5], r[6], r[7]);
  var chk = d.getFullYear() == r[1] && d.getMonth() + 1 == r[3] && d.getDate() == r[4] && d.getHours() == r[5] && d.getMinutes() == r[6] && d.getSeconds() == r[7];
  if (!chk) {
    return hint;
  }
}
function checkArray(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (!Array.isArray(value)) {
    return desc + '填写错误arr';
  }
}
function checkObject(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (value.constructor != Object) {
    if (value.constructor.toString().indexOf('function Object') != 0) {
      return desc + '填写错误obj';
    }
  }
}
function checkBoolean(value) {
  var desc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (value.constructor != Boolean) {
    return desc + '填写错误bool';
  }
}

// 枚举 ref=1,2,3,4格式
function checkIn(value, ref) {
  var desc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  if (isNull(value)) {
    return;
  }
  var type = getDataType(value);
  if (type != String && type != Number) {
    return desc + '填写范围错误';
  }
  var arr = String(ref).split(',');
  if (!arr.includes(value) && !arr.includes(value + '')) {
    return desc + '填写范围错误';
  }
}
function checkString(value, desc) {
  if (value.constructor != String) {
    return desc + '填写错误';
  }
}
function check(data, rules, that) {
  var returnData = {};
  for (var key in rules) {
    var arr = rules[key].split('|');
    var desc = key; // 字段说明
    var defVal = undefined; // 缺省值
    var dataType = 'String'; //数据类型

    if (!CHECK_OPEN) {
      // 不校验
      // 取值
      var _val = data[formName];
      returnData[key] = _val;
      continue;
    }

    // 小循环获取规则
    for (var i = 0; i < arr.length; i++) {
      // 数据项说明
      if (arr[i].startsWith('name=')) {
        desc = '「' + arr[i].replace('name=', '') + '」';
        continue;
      }

      // 缺省值
      if (arr[i].startsWith('default=')) {
        defVal = arr[i].replace('default=', '').trim();
        continue;
      }

      // 数据类型
      switch (arr[i].toLowerCase()) {
        case 'int':
        case 'digit':
          dataType = 'Number';
          break;
        case 'array':
        case 'arr':
          dataType = 'Array';
          break;
        case 'object':
        case 'obj':
          dataType = 'Object';
          break;
        case 'bool':
        case 'boolean':
          dataType = 'Boolean';
          break;
      }
    }

    // 校验
    var formName = CHECK_SOURCE == 'admin' ? k : arr[0]; // 表单名  admin/client

    // 取值
    var val = data[formName];
    switch (dataType) {
      case 'Array':
        {
          if (defVal !== undefined) {
            try {
              defVal = JSON.parse(defVal);
              if (getDataType(defVal) != Array) {
                return _showError(desc + '默认值数组格式错误', formName, that);
              }
            } catch (ex) {
              console.log('CatchClause', ex);
              console.log('CatchClause', ex);
              return _showError(desc + '默认值数组格式错误', formName, that);
            }
          }
          if (val === null || val === undefined) {
            val = defVal;
          }
          if (val !== undefined && getDataType(val) != Array) {
            return _showError(desc + '数组格式错误', formName, that);
          }
          break;
        }
      case 'Object':
        {
          if (defVal !== undefined) {
            try {
              defVal = JSON.parse(defVal);
              if (getDataType(defVal) != Object) {
                return _showError(desc + '默认值对象格式错误', formName, that);
              }
            } catch (ex) {
              console.log('CatchClause', ex);
              console.log('CatchClause', ex);
              return _showError(desc + '默认值对象格式错误', formName, that);
            }
          }
          if (val === null || val === undefined) {
            val = defVal;
          }
          if (val !== undefined && getDataType(val) != Object) {
            return _showError(desc + '对象格式错误', formName, that);
          }
          break;
        }
      case 'Boolean':
        {
          if (defVal !== undefined) {
            try {
              defVal = JSON.parse(defVal);
              if (getDataType(defVal) != Boolean) {
                return _showError(desc + '默认值布尔格式错误', formName, that);
              }
            } catch (ex) {
              console.log('CatchClause', ex);
              console.log('CatchClause', ex);
              return _showError(desc + '默认值布尔格式错误');
            }
          }
          if (val === null || val === undefined) {
            val = defVal;
          }
          if (val !== undefined && getDataType(val) != Boolean) {
            return _showError(desc + '布尔格式错误', formName, that);
          }
          break;
        }
      case 'Number':
        {
          if (checkDigit(defVal, desc + '默认值')) {
            return _showError(desc + '默认值格式错误', formName, that);
          }
          if (val === null || val === undefined) {
            val = defVal;
          }
          if (val === undefined) {
            break;
          }
          if (val === '') {
            //数字不能为空
            return _showError(desc + '不能为空', formName, that);
          }
          var _dataType = getDataType(val);
          if (_dataType == Object || _dataType == Boolean || _dataType == Array) {
            return _showError(desc + '必须为数字格式', formName, that);
          }

          // 数字格式校验
          var result = checkDigit(val, desc);
          if (result) {
            return _showError(result, formName, that);
          }
          val = Number(val);
          break;
        }
      case 'String':
        {
          var _dataType2 = getDataType(val);
          if (_dataType2 == Object || _dataType2 == Boolean || _dataType2 == Array) {
            return _showError(desc + '必须为字符串格式', formName, that);
          }
          if (val === null || val === undefined) {
            val = defVal;
          }
          if (val === undefined) {
            break;
          }
          try {
            val = String(val).trim(); // 数字会被转为字符串
          } catch (ex) {
            console.log('CatchClause', ex);
            console.log('CatchClause', ex);
            return _showError(desc + '必须为字符串格式', formName, that);
          }
          break;
        }
    }
    returnData[key] = val;
    var fromStep = CHECK_SOURCE == 'admin' ? 0 : 1; //admin/client
    for (var _i = fromStep; _i < arr.length; _i++) {
      var _result = '';
      var _rules = arr[_i].split(':');
      var ruleName = _rules[0];

      // 空 且非必填的 不校验
      if (ruleName != 'must' && val === undefined) {
        continue;
      }
      switch (ruleName) {
        case 'must':
          _result = checkRequired(val, desc);
          break;
        case 'str':
        case 'string':
          _result = checkString(val, desc);
          break;
        case 'arr':
        case 'array':
          _result = checkArray(val, desc);
          break;
        case 'obj':
        case 'object':
          _result = checkObject(val, desc);
          break;
        case 'bool':
        case 'boolean':
          _result = checkBoolean(val, desc);
          break;
        case 'money':
          _result = checkMoney(val, desc);
          break;
        case 'year':
          _result = checkYear(val, desc);
          break;
        case 'yearmonth':
          _result = checkYearMonth(val, desc);
          break;
        case 'date':
          _result = checkDate(val, desc);
          break;
        case 'time':
          _result = checkTime(val, desc);
          break;
        case 'hourminute':
          _result = checkHourMinute(val, desc);
          break;
        case 'datetime':
          _result = checkDatimeTime(val, desc);
          break;
        case 'min':
          _result = checkMin(val, Number(_rules[1]), desc);
          break;
        case 'max':
          _result = checkMax(val, Number(_rules[1]), desc);
          break;
        case 'len':
          _result = checkLen(val, Number(_rules[1]), desc);
          break;
        case 'in':
          _result = checkIn(val, _rules[1], desc);
          break;
        case 'email':
          _result = checkEmail(val, desc);
          break;
        case 'mobile':
          _result = checkMobile(val, desc);
          break;
        case 'int':
          // 正整数
          _result = checkInt(val, desc);
          break;
        case 'digit':
          // 正小整数
          _result = checkDigit(val, desc);
          break;
        case 'id':
          _result = checkId(val, desc);
          break;
        case 'letter':
          _result = checkLetter(val, desc);
          break;
        case 'letter_num':
          _result = checkLetterNum(val, desc);
          break;
      }
      if (_result) {
        _showError(_result, formName, that);
        return false;
      } else {
        if (that) {
          if (CHECK_SOURCE == 'client') {
            // 删除原有的自动聚焦 //admin/client
            if (isDefined(that.data[formName + 'Focus'])) {
              that.setData(_defineProperty({}, formName + 'Focus', false));
            }
          }
        }
      }
    }
  }
  return returnData;
}
function _showError(result, formName, that) {
  //admin/client
  if (CHECK_SOURCE == 'client') {
    uni.showModal({
      title: '温馨提示',
      content: result,
      showCancel: false,
      success: function success(res) {
        // 自动聚焦
        if (that) {
          pageHelper.anchor(formName, that);
          that.setData(_defineProperty({}, formName + 'Focus', result));
        }
      }
    });
  } else {
    throw new AppError(result, appCode.DATA);
  }
}
module.exports = {
  check: check,
  checkString: checkString,
  checkArray: checkArray,
  checkObject: checkObject,
  checkMoney: checkMoney,
  checkYear: checkYear,
  checkYearMonth: checkYearMonth,
  checkDate: checkDate,
  checkTime: checkTime,
  checkHourMinute: checkHourMinute,
  checkDatimeTime: checkDatimeTime,
  checkMin: checkMin,
  checkMax: checkMax,
  checkLen: checkLen,
  checkIn: checkIn,
  checkEmail: checkEmail,
  checkMobile: checkMobile,
  checkInt: checkInt,
  // 正小整数
  checkDigit: checkDigit,
  checkId: checkId,
  checkLetter: checkLetter,
  checkLetterNum: checkLetterNum
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 13:
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 14:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 140:
/*!*****************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/behavior/my_foot_bh.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var FootBiz = __webpack_require__(/*! ../biz/foot_biz.js */ 141);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
module.exports = {
  data: function data() {
    return {};
  },
  methods: {
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function () {
      var _onLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this._loadList();
              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function onLoad(_x) {
        return _onLoad.apply(this, arguments);
      }
      return onLoad;
    }(),
    _loadList: function () {
      var _loadList2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {
        var footList;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                footList = FootBiz.getFootList();
                this.setData({
                  footList: footList
                });
              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function _loadList(_x2) {
        return _loadList2.apply(this, arguments);
      }
      return _loadList;
    }(),
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function () {
      var _onPullDownRefresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this._loadList();
              case 2:
                uni.stopPullDownRefresh();
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onPullDownRefresh() {
        return _onPullDownRefresh.apply(this, arguments);
      }
      return onPullDownRefresh;
    }(),
    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function onReachBottom() {},
    url: function url(e) {
      pageHelper.url(e, this);
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 141:
/*!**********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/foot_biz.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 足迹模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY www.code942.com
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var cacheHelper = __webpack_require__(/*! ../../helper/cache_helper.js */ 66);
var timeHelper = __webpack_require__(/*! ../../helper/time_helper.js */ 72);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var CACHE_FOOT = 'CACHE_FOOT';
var FootBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(FootBiz, _BaseBiz);
  var _super = _createSuper(FootBiz);
  function FootBiz() {
    _classCallCheck(this, FootBiz);
    return _super.apply(this, arguments);
  }
  _createClass(FootBiz, null, [{
    key: "getFootList",
    value: function getFootList() {
      var foot = cacheHelper.get(CACHE_FOOT);
      if (foot) {
        for (var i = 0; i < foot.length; i++) {
          foot[i].time = timeHelper.timestamp2Time(foot[i].time);
        }
      }
      return foot;
    }

    /**添加足迹缓存
     *
     * @param {*} key 键
     * @param {*} val 值
     * 格式 key:{
     *  type:类型
     *  title:标题
     *  time:加入时间
     * }
     * @param {*} size 最大个数
     * @param {*} expire 过期时间
     */
  }, {
    key: "addFoot",
    value: function addFoot(type, title) {
      var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;
      var expire = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 94608000;
      var path = pageHelper.getCurrentPageUrlWithArgs();
      if (!path || !title || !type) {
        return [];
      }
      var foot = cacheHelper.get(CACHE_FOOT, []);

      //查询是否存在 并删除
      for (var k = 0; k < foot.length; k++) {
        if (path == foot[k].path) {
          foot.splice(k, 1);
        }
      }

      // 加到头部
      var val = {
        path: path,
        type: type,
        title: title,
        time: timeHelper.time()
      };
      foot.unshift(val);

      // 判断个数， 多的删除
      if (foot.length > size) {
        foot.splice(foot.length - 1, 1);
      }

      // 存缓存
      cacheHelper.set(CACHE_FOOT, foot, expire);
      return foot;
    }
  }]);
  return FootBiz;
}(BaseBiz);
module.exports = FootBiz;

/***/ }),

/***/ 15:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 16);
var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ 17);
function _construct(t, e, r) {
  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && setPrototypeOf(p, r.prototype), p;
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 150:
/*!****************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/behavior/my_fav_bh.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var cloudHelper = __webpack_require__(/*! ../../helper/cloud_helper.js */ 68);
module.exports = {
  data: function data() {
    return {};
  },
  methods: {
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function () {
      var _onLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function onLoad(_x) {
        return _onLoad.apply(this, arguments);
      }
      return onLoad;
    }(),
    myCommListListener: function myCommListListener(e) {
      pageHelper.commListListener(this, e);
    },
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function onReachBottom() {},
    url: function url(e) {
      pageHelper.url(e, this);
    },
    bindDelTap: function () {
      var _bindDelTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {
        var oid, that, callback;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                oid = e.currentTarget.dataset.oid;
                if (oid) {
                  _context3.next = 3;
                  break;
                }
                return _context3.abrupt("return");
              case 3:
                that = this;
                callback = /*#__PURE__*/function () {
                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return cloudHelper.callCloudSumbit('fav/del', {
                              oid: oid
                            }).then(function (res) {
                              pageHelper.delListNode(oid, that.dataList.list, 'FAV_OID');
                              that.dataList.total--;
                              that.setData({
                                dataList: that.dataList
                              });
                              pageHelper.showSuccToast('删除成功');
                            }).catch(function (err) {
                              console.log(err);
                            });
                          case 2:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2);
                  }));
                  return function callback() {
                    return _ref.apply(this, arguments);
                  };
                }();
                pageHelper.showConfirm('您确认删除？', callback);
              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function bindDelTap(_x2) {
        return _bindDelTap.apply(this, arguments);
      }
      return bindDelTap;
    }()
  }
};

/***/ }),

/***/ 159:
/*!********************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/behavior/news_index_bh.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var BaseBiz = __webpack_require__(/*! ../biz/base_biz.js */ 74);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
module.exports = {
  data: function data() {
    return {
      isLoad: false,
      _params: null,
      sortMenus: [],
      sortItems: []
    };
  },
  methods: {
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: function () {
      var _onLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function onLoad(_x) {
        return _onLoad.apply(this, arguments);
      }
      return onLoad;
    }(),
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function () {
      var _onShow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      function onShow() {
        return _onShow.apply(this, arguments);
      }
      return onShow;
    }(),
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    url: function () {
      var _url = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                pageHelper.url(e, this);
              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function url(_x2) {
        return _url.apply(this, arguments);
      }
      return url;
    }(),
    bindCommListCmpt: function bindCommListCmpt(e) {
      pageHelper.commListListener(this, e);
    },
    /**
     * 用户点击右上角分享
     */
    onShareAppMessage: function onShareAppMessage() {},
    _setCate: function _setCate(cateList, options) {
      var cateId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      if (cateId) {
        if (options) {
          options.id = cateId;
        }
      }
      if (options && options.id) {
        this.setData({
          isLoad: true,
          _params: {
            cateId: options.id
          }
        });
        BaseBiz.setCateTitle(cateList, cateId);
      } else {
        this._getSearchMenu(cateList);
        this.setData({
          isLoad: true
        });
      }
    },
    _getSearchMenu: function _getSearchMenu(cateList) {
      var sortItem1 = [{
        label: '全部',
        type: 'cateId',
        value: ''
      }];
      sortItem1 = sortItem1.concat(cateList);
      if (sortItem1.length <= 2) {
        return;
      }
      var sortItems = [];
      var sortMenus = sortItem1;
      this.setData({
        sortItems: sortItems,
        sortMenus: sortMenus
      });
    }
  }
};

/***/ }),

/***/ 16:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 160:
/*!************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/news_biz.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 资讯模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var projectSetting = __webpack_require__(/*! ../public/project_setting.js */ 75);
var NewsBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(NewsBiz, _BaseBiz);
  var _super = _createSuper(NewsBiz);
  function NewsBiz() {
    _classCallCheck(this, NewsBiz);
    return _super.apply(this, arguments);
  }
  _createClass(NewsBiz, null, [{
    key: "getCateList",
    value: /** 取得分类 */
    function getCateList() {
      var cateList = projectSetting.NEWS_CATE;
      var arr = [];
      for (var k = 0; k < cateList.length; k++) {
        arr.push({
          label: cateList[k].title,
          type: 'cateId',
          id: cateList[k].id,
          title: cateList[k].title,
          style: cateList[k].style,
          val: cateList[k].id,
          //for options
          value: cateList[k].id //for list
        });
      }

      return arr;
    }
  }, {
    key: "setCateTitle",
    value: function setCateTitle() {
      var cateId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var that = arguments.length > 1 ? arguments[1] : undefined;
      // 获取当前小程序的页面栈
      var pages = getCurrentPages();
      // 数组中索引最大的页面--当前页面
      var currentPage = pages[pages.length - 1];
      // 附加参数
      if (currentPage.options && currentPage.options.id) {
        cateId = currentPage.options.id;
      }
      var cateList = dataHelper.getSelectOptions(projectSetting.NEWS_CATE);
      for (var k = 0; k < cateList.length; k++) {
        if (cateList[k].val == cateId) {
          uni.setNavigationBarTitle({
            title: cateList[k].label
          });
          if (cateList[k].ext) {
            //样式
            that.setData({
              listMode: cateList[k].ext
            });
          } else {
            that.setData({
              listMode: 'leftbig'
            });
          }
        }
      }
    }

    /** 搜索菜单设置 */
  }, {
    key: "getSearchMenu",
    value: function () {
      var _getSearchMenu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var sortMenus, sortMenusAfter, sortItems;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                sortMenus = [{
                  label: '全部',
                  type: '',
                  value: ''
                }];
                sortMenusAfter = [{
                  label: '最新',
                  type: 'sort',
                  value: 'new'
                }];
                sortItems = [];
                sortMenus = sortMenus.concat(sortMenusAfter);
                return _context.abrupt("return", {
                  sortItems: sortItems,
                  sortMenus: sortMenus
                });
              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function getSearchMenu() {
        return _getSearchMenu.apply(this, arguments);
      }
      return getSearchMenu;
    }()
  }]);
  return NewsBiz;
}(BaseBiz);
module.exports = NewsBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 17:
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 18:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ 19);
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ 20);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ 21);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 19:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(wx, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createApp = createApp;
exports.createComponent = createComponent;
exports.createPage = createPage;
exports.createPlugin = createPlugin;
exports.createSubpackageApp = createSubpackageApp;
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ 15));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 22);
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 25));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var realAtob;
var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {
      throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
    }

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;
    var result = '';
    var r1;
    var r2;
    var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 | (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));
      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}
function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}
function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0
    };
  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}
function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {
    var _getCurrentUserInfo = getCurrentUserInfo(),
      role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {
    var _getCurrentUserInfo2 = getCurrentUserInfo(),
      permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {
    var _getCurrentUserInfo3 = getCurrentUserInfo(),
      tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}
var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function isFn(fn) {
  return typeof fn === 'function';
}
function isStr(str) {
  return typeof str === 'string';
}
function isObject(obj) {
  return obj !== null && (0, _typeof2.default)(obj) === 'object';
}
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function noop() {}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
function sortObject(obj) {
  var sortObj = {};
  if (isPlainObject(obj)) {
    Object.keys(obj).sort().forEach(function (key) {
      sortObj[key] = obj[key];
    });
  }
  return !Object.keys(sortObj) ? obj : sortObj;
}
var HOOKS = ['invoke', 'success', 'fail', 'complete', 'returnValue'];
var globalInterceptors = {};
var scopedInterceptors = {};
function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}
function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}
function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}
function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}
function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}
function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}
function wrapperHook(hook, params) {
  return function (data) {
    return hook(data, params) || data;
  };
}
function isPromise(obj) {
  return !!obj && ((0, _typeof2.default)(obj) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
function queue(hooks, data, params) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook, params));
    } else {
      var res = hook(data, params);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {}
        };
      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    }
  };
}
function wrapperOptions(interceptor) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res, options).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}
function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}
function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}
function invokeApi(method, api, options) {
  for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    params[_key - 3] = arguments[_key];
  }
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        // 重新访问 getApiInterceptorHooks, 允许 invoke 中再次调用 addInterceptor,removeInterceptor
        return api.apply(void 0, [wrapperOptions(getApiInterceptorHooks(method), options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}
var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (!res) {
          resolve(res);
          return;
        }
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  }
};
var SYNC_API_RE = /^\$|__f__|Window$|WindowStyle$|sendHostEvent|sendNativeEvent|restoreGlobal|requireGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|rpx2px|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale|invokePushCallback|getWindowInfo|getDeviceInfo|getAppBaseInfo|getSystemSetting|getAppAuthorizeSetting|initUTS|requireUTS|registerUTS/;
var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection', 'createPushMessage'];
var CALLBACK_API_RE = /^on|^off/;
function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}
function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}
function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).catch(function (err) {
    return [err];
  });
}
function shouldPromise(name) {
  if (isContextApi(name) || isSyncApi(name) || isCallbackApi(name)) {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
function promisify(name, api) {
  if (!shouldPromise(name) || !isFn(api)) {
    return api;
  }
  return function promiseApi() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      params[_key2 - 1] = arguments[_key2];
    }
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject
      })].concat(params));
    })));
  };
}
var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;
function checkDeviceWidth() {
  var _Object$assign = Object.assign({}, wx.getWindowInfo(), {
      platform: wx.getDeviceInfo().platform
    }),
    windowWidth = _Object$assign.windowWidth,
    pixelRatio = _Object$assign.pixelRatio,
    platform = _Object$assign.platform; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}
function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }
  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}
var LOCALE_ZH_HANS = 'zh-Hans';
var LOCALE_ZH_HANT = 'zh-Hant';
var LOCALE_EN = 'en';
var LOCALE_FR = 'fr';
var LOCALE_ES = 'es';
var messages = {};
function getLocaleLanguage() {
  var localeLanguage = '';
  {
    var appBaseInfo = wx.getAppBaseInfo();
    var language = appBaseInfo && appBaseInfo.language ? appBaseInfo.language : LOCALE_EN;
    localeLanguage = normalizeLocale(language) || LOCALE_EN;
  }
  return localeLanguage;
}
var locale;
{
  locale = getLocaleLanguage();
}
function initI18nMessages() {
  if (!isEnableLocale()) {
    return;
  }
  var localeKeys = Object.keys(__uniConfig.locales);
  if (localeKeys.length) {
    localeKeys.forEach(function (locale) {
      var curMessages = messages[locale];
      var userMessages = __uniConfig.locales[locale];
      if (curMessages) {
        Object.assign(curMessages, userMessages);
      } else {
        messages[locale] = userMessages;
      }
    });
  }
}
initI18nMessages();
var i18n = (0, _uniI18n.initVueI18n)(locale, {});
var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {
    var _this = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    }
  }
};
var setLocale = i18n.setLocale;
var getLocale = i18n.getLocale;
function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale()
  });
  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {
        return watch(v);
      });
    }
  });
}
function isEnableLocale() {
  return typeof __uniConfig !== 'undefined' && __uniConfig.locales && !!Object.keys(__uniConfig.locales).length;
}
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
// export function initI18n() {
//   const localeKeys = Object.keys(__uniConfig.locales || {})
//   if (localeKeys.length) {
//     localeKeys.forEach((locale) =>
//       i18n.add(locale, __uniConfig.locales[locale])
//     )
//   }
// }

function getLocale$1() {
  // 优先使用 $locale
  if (isFn(getApp)) {
    var app = getApp({
      allowDefault: true
    });
    if (app && app.$vm) {
      return app.$vm.$locale;
    }
  }
  return getLocaleLanguage();
}
function setLocale$1(locale) {
  var app = isFn(getApp) ? getApp() : false;
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {
      return fn({
        locale: locale
      });
    });
    return true;
  }
  return false;
}
var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}
if (typeof global !== 'undefined') {
  global.getLocale = getLocale$1;
}
var interceptors = {
  promiseInterceptor: promiseInterceptor
};
var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  rpx2px: upx2px,
  getLocale: getLocale$1,
  setLocale: setLocale$1,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors
});
function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}
var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  }
};
var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(function (item, index) {
        return index < currentIndex ? item !== urls[currentIndex] : true;
      });
    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false
    };
  }
};
var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function useDeviceId(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId
    });
  }
  result.deviceId = deviceId;
}
function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.screenHeight - safeArea.bottom
    };
  }
}
function populateParameters(result) {
  var _result$brand = result.brand,
    brand = _result$brand === void 0 ? '' : _result$brand,
    _result$model = result.model,
    model = _result$model === void 0 ? '' : _result$model,
    _result$system = result.system,
    system = _result$system === void 0 ? '' : _result$system,
    _result$language = result.language,
    language = _result$language === void 0 ? '' : _result$language,
    theme = result.theme,
    version = result.version,
    platform = result.platform,
    fontSizeSetting = result.fontSizeSetting,
    SDKVersion = result.SDKVersion,
    pixelRatio = result.pixelRatio,
    deviceOrientation = result.deviceOrientation;
  // const isQuickApp = "mp-weixin".indexOf('quickapp-webview') !== -1

  var extraParam = {};

  // osName osVersion
  var osName = '';
  var osVersion = '';
  {
    osName = system.split(' ')[0] || '';
    osVersion = system.split(' ')[1] || '';
  }
  var hostVersion = version;

  // deviceType
  var deviceType = getGetDeviceType(result, model);

  // deviceModel
  var deviceBrand = getDeviceBrand(brand);

  // hostName
  var _hostName = getHostName(result);

  // deviceOrientation
  var _deviceOrientation = deviceOrientation; // 仅 微信 百度 支持

  // devicePixelRatio
  var _devicePixelRatio = pixelRatio;

  // SDKVersion
  var _SDKVersion = SDKVersion;

  // hostLanguage
  var hostLanguage = (language || '').replace(/_/g, '-');

  // wx.getAccountInfoSync

  var parameters = {
    appId: "__UNI__17290FF",
    appName: "yueke",
    appVersion: "1.0.0",
    appVersionCode: "100",
    appLanguage: getAppLanguage(hostLanguage),
    uniCompileVersion: "4.55",
    uniCompilerVersion: "4.55",
    uniRuntimeVersion: "4.55",
    uniPlatform: undefined || "mp-weixin",
    deviceBrand: deviceBrand,
    deviceModel: model,
    deviceType: deviceType,
    devicePixelRatio: _devicePixelRatio,
    deviceOrientation: _deviceOrientation,
    osName: osName.toLocaleLowerCase(),
    osVersion: osVersion,
    hostTheme: theme,
    hostVersion: hostVersion,
    hostLanguage: hostLanguage,
    hostName: _hostName,
    hostSDKVersion: _SDKVersion,
    hostFontSizeSetting: fontSizeSetting,
    windowTop: 0,
    windowBottom: 0,
    // TODO
    osLanguage: undefined,
    osTheme: undefined,
    ua: undefined,
    hostPackageName: undefined,
    browserName: undefined,
    browserVersion: undefined,
    isUniAppX: false
  };
  Object.assign(result, parameters, extraParam);
}
function getGetDeviceType(result, model) {
  var deviceType = result.deviceType || 'phone';
  {
    var deviceTypeMaps = {
      ipad: 'pad',
      windows: 'pc',
      mac: 'pc'
    };
    var deviceTypeMapsKeys = Object.keys(deviceTypeMaps);
    var _model = model.toLocaleLowerCase();
    for (var index = 0; index < deviceTypeMapsKeys.length; index++) {
      var _m = deviceTypeMapsKeys[index];
      if (_model.indexOf(_m) !== -1) {
        deviceType = deviceTypeMaps[_m];
        break;
      }
    }
  }
  return deviceType;
}
function getDeviceBrand(brand) {
  var deviceBrand = brand;
  if (deviceBrand) {
    deviceBrand = brand.toLocaleLowerCase();
  }
  return deviceBrand;
}
function getAppLanguage(defaultLanguage) {
  return getLocale$1 ? getLocale$1() : defaultLanguage;
}
function getHostName(result) {
  var _platform = 'WeChat';
  var _hostName = result.hostName || _platform; // mp-jd
  {
    if (result.environment) {
      _hostName = result.environment;
    } else if (result.host && result.host.env) {
      _hostName = result.host.env;
    }
  }
  return _hostName;
}
var getSystemInfo = {
  returnValue: function returnValue(result) {
    useDeviceId(result);
    addSafeAreaInsets(result);
    populateParameters(result);
  }
};
var showActionSheet = {
  args: function args(fromArgs) {
    if ((0, _typeof2.default)(fromArgs) === 'object') {
      fromArgs.alertText = fromArgs.title;
    }
  }
};
var getAppBaseInfo = {
  returnValue: function returnValue(result) {
    var _result = result,
      version = _result.version,
      language = _result.language,
      SDKVersion = _result.SDKVersion,
      theme = _result.theme;
    var _hostName = getHostName(result);
    var hostLanguage = (language || '').replace('_', '-');
    result = sortObject(Object.assign(result, {
      appId: "__UNI__17290FF",
      appName: "yueke",
      appVersion: "1.0.0",
      appVersionCode: "100",
      appLanguage: getAppLanguage(hostLanguage),
      hostVersion: version,
      hostLanguage: hostLanguage,
      hostName: _hostName,
      hostSDKVersion: SDKVersion,
      hostTheme: theme,
      isUniAppX: false,
      uniPlatform: undefined || "mp-weixin",
      uniCompileVersion: "4.55",
      uniCompilerVersion: "4.55",
      uniRuntimeVersion: "4.55"
    }));
  }
};
var getDeviceInfo = {
  returnValue: function returnValue(result) {
    var _result2 = result,
      brand = _result2.brand,
      model = _result2.model;
    var deviceType = getGetDeviceType(result, model);
    var deviceBrand = getDeviceBrand(brand);
    useDeviceId(result);
    result = sortObject(Object.assign(result, {
      deviceType: deviceType,
      deviceBrand: deviceBrand,
      deviceModel: model
    }));
  }
};
var getWindowInfo = {
  returnValue: function returnValue(result) {
    addSafeAreaInsets(result);
    result = sortObject(Object.assign(result, {
      windowTop: 0,
      windowBottom: 0
    }));
  }
};
var getAppAuthorizeSetting = {
  returnValue: function returnValue(result) {
    var locationReducedAccuracy = result.locationReducedAccuracy;
    result.locationAccuracy = 'unsupported';
    if (locationReducedAccuracy === true) {
      result.locationAccuracy = 'reduced';
    } else if (locationReducedAccuracy === false) {
      result.locationAccuracy = 'full';
    }
  }
};

// import navigateTo from 'uni-helpers/navigate-to'

var compressImage = {
  args: function args(fromArgs) {
    // https://developers.weixin.qq.com/community/develop/doc/000c08940c865011298e0a43256800?highLine=compressHeight
    if (fromArgs.compressedHeight && !fromArgs.compressHeight) {
      fromArgs.compressHeight = fromArgs.compressedHeight;
    }
    if (fromArgs.compressedWidth && !fromArgs.compressWidth) {
      fromArgs.compressWidth = fromArgs.compressedWidth;
    }
  }
};
var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo,
  showActionSheet: showActionSheet,
  getAppBaseInfo: getAppBaseInfo,
  getDeviceInfo: getDeviceInfo,
  getWindowInfo: getWindowInfo,
  getAppAuthorizeSetting: getAppAuthorizeSetting,
  compressImage: compressImage
};
var todos = ['vibrate', 'preloadPage', 'unPreloadPage', 'loadSubPackage'];
var canIUses = [];
var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];
function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}
function processArgs(methodName, fromArgs) {
  var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {
    // 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {
          // 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {
          // 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {
          // {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}
function processReturnValue(methodName, res, returnValue) {
  var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {
    // 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}
function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {
      // 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {
      // 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }
      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);
      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {
        // 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}
var todoApis = Object.create(null);
var TODOS = ['onTabBarMidButtonTap', 'subscribePush', 'unsubscribePush', 'onPush', 'offPush', 'share'];
function createTodoApi(name) {
  return function todoApi(_ref) {
    var fail = _ref.fail,
      complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported")
    };
    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}
TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});
var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin']
};
function getProvider(_ref2) {
  var service = _ref2.service,
    success = _ref2.success,
    fail = _ref2.fail,
    complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service]
    };
    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found'
    };
    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}
var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider
});
var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();
function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}
function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}
var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit
});

/**
 * 框架内 try-catch
 */
/**
 * 开发者 try-catch
 */
function tryCatch(fn) {
  return function () {
    try {
      return fn.apply(fn, arguments);
    } catch (e) {
      // TODO
      console.error(e);
    }
  };
}
function getApiCallbacks(params) {
  var apiCallbacks = {};
  for (var name in params) {
    var param = params[name];
    if (isFn(param)) {
      apiCallbacks[name] = tryCatch(param);
      delete params[name];
    }
  }
  return apiCallbacks;
}
var cid;
var cidErrMsg;
var enabled;
function normalizePushMessage(message) {
  try {
    return JSON.parse(message);
  } catch (e) {}
  return message;
}
function invokePushCallback(args) {
  if (args.type === 'enabled') {
    enabled = true;
  } else if (args.type === 'clientId') {
    cid = args.cid;
    cidErrMsg = args.errMsg;
    invokeGetPushCidCallbacks(cid, args.errMsg);
  } else if (args.type === 'pushMsg') {
    var message = {
      type: 'receive',
      data: normalizePushMessage(args.message)
    };
    for (var i = 0; i < onPushMessageCallbacks.length; i++) {
      var callback = onPushMessageCallbacks[i];
      callback(message);
      // 该消息已被阻止
      if (message.stopped) {
        break;
      }
    }
  } else if (args.type === 'click') {
    onPushMessageCallbacks.forEach(function (callback) {
      callback({
        type: 'click',
        data: normalizePushMessage(args.message)
      });
    });
  }
}
var getPushCidCallbacks = [];
function invokeGetPushCidCallbacks(cid, errMsg) {
  getPushCidCallbacks.forEach(function (callback) {
    callback(cid, errMsg);
  });
  getPushCidCallbacks.length = 0;
}
function getPushClientId(args) {
  if (!isPlainObject(args)) {
    args = {};
  }
  var _getApiCallbacks = getApiCallbacks(args),
    success = _getApiCallbacks.success,
    fail = _getApiCallbacks.fail,
    complete = _getApiCallbacks.complete;
  var hasSuccess = isFn(success);
  var hasFail = isFn(fail);
  var hasComplete = isFn(complete);
  Promise.resolve().then(function () {
    if (typeof enabled === 'undefined') {
      enabled = false;
      cid = '';
      cidErrMsg = 'uniPush is not enabled';
    }
    getPushCidCallbacks.push(function (cid, errMsg) {
      var res;
      if (cid) {
        res = {
          errMsg: 'getPushClientId:ok',
          cid: cid
        };
        hasSuccess && success(res);
      } else {
        res = {
          errMsg: 'getPushClientId:fail' + (errMsg ? ' ' + errMsg : '')
        };
        hasFail && fail(res);
      }
      hasComplete && complete(res);
    });
    if (typeof cid !== 'undefined') {
      invokeGetPushCidCallbacks(cid, cidErrMsg);
    }
  });
}
var onPushMessageCallbacks = [];
// 不使用 defineOnApi 实现，是因为 defineOnApi 依赖 UniServiceJSBridge ，该对象目前在小程序上未提供，故简单实现
var onPushMessage = function onPushMessage(fn) {
  if (onPushMessageCallbacks.indexOf(fn) === -1) {
    onPushMessageCallbacks.push(fn);
  }
};
var offPushMessage = function offPushMessage(fn) {
  if (!fn) {
    onPushMessageCallbacks.length = 0;
  } else {
    var index = onPushMessageCallbacks.indexOf(fn);
    if (index > -1) {
      onPushMessageCallbacks.splice(index, 1);
    }
  }
};
function __f__(type) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }
  console[type].apply(console, args);
}
var baseInfo = wx.getAppBaseInfo && wx.getAppBaseInfo();
if (!baseInfo) {
  baseInfo = wx.getSystemInfoSync();
}
var host = baseInfo ? baseInfo.host : null;
var shareVideoMessage = host && host.env === 'SAAASDK' ? wx.miniapp.shareVideoMessage : wx.shareVideoMessage;
var api = /*#__PURE__*/Object.freeze({
  __proto__: null,
  shareVideoMessage: shareVideoMessage,
  getPushClientId: getPushClientId,
  onPushMessage: onPushMessage,
  offPushMessage: offPushMessage,
  invokePushCallback: invokePushCallback,
  __f__: __f__
});
var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];
function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}
function initBehavior(options) {
  return Behavior(options);
}
function isPage() {
  return !!this.route;
}
function initRelation(detail) {
  this.triggerEvent('__l', detail);
}
function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector) || [];
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || toSkip(component);
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}
function syncRefs(refs, newRefs) {
  var oldKeys = (0, _construct2.default)(Set, (0, _toConsumableArray2.default)(Object.keys(refs)));
  var newKeys = Object.keys(newRefs);
  newKeys.forEach(function (key) {
    var oldValue = refs[key];
    var newValue = newRefs[key];
    if (Array.isArray(oldValue) && Array.isArray(newValue) && oldValue.length === newValue.length && newValue.every(function (value) {
      return oldValue.includes(value);
    })) {
      return;
    }
    refs[key] = newValue;
    oldKeys.delete(key);
  });
  oldKeys.forEach(function (key) {
    delete refs[key];
  });
  return refs;
}
function initRefs(vm) {
  var mpInstance = vm.$scope;
  var refs = {};
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for') || [];
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || toSkip(component));
      });
      return syncRefs(refs, $refs);
    }
  });
}
function handleLink(event) {
  var _ref3 = event.detail || event.value,
    vuePid = _ref3.vuePid,
    vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;
  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }
  if (!parentVm) {
    parentVm = this.$vm;
  }
  vueOptions.parent = parentVm;
}
function markMPComponent(component) {
  // 在 Vue 中标记为小程序组件
  var IS_MP = '__v_isMPComponent';
  Object.defineProperty(component, IS_MP, {
    configurable: true,
    enumerable: false,
    value: true
  });
  return component;
}
function toSkip(obj) {
  var OB = '__ob__';
  var SKIP = '__v_skip';
  if (isObject(obj) && Object.isExtensible(obj)) {
    // 避免被 @vue/composition-api 观测
    Object.defineProperty(obj, OB, {
      configurable: true,
      enumerable: false,
      value: (0, _defineProperty2.default)({}, SKIP, true)
    });
  }
  return obj;
}
var WORKLET_RE = /_(.*)_worklet_factory_/;
function initWorkletMethods(mpMethods, vueMethods) {
  if (vueMethods) {
    Object.keys(vueMethods).forEach(function (name) {
      var matches = name.match(WORKLET_RE);
      if (matches) {
        var workletName = matches[1];
        mpMethods[name] = vueMethods[name];
        mpMethods[workletName] = vueMethods[workletName];
      }
    });
  }
}
var MPPage = Page;
var MPComponent = Component;
var customizeRE = /:/g;
var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});
function initTriggerEvent(mpInstance) {
  var oldTriggerEvent = mpInstance.triggerEvent;
  var newTriggerEvent = function newTriggerEvent(event) {
    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
      args[_key4 - 1] = arguments[_key4];
    }
    // 事件名统一转驼峰格式，仅处理：当前组件为 vue 组件、当前组件为 vue 组件子组件
    if (this.$vm || this.dataset && this.dataset.comType) {
      event = customize(event);
    } else {
      // 针对微信/QQ小程序单独补充驼峰格式事件，以兼容历史项目
      var newEvent = customize(event);
      if (newEvent !== event) {
        oldTriggerEvent.apply(this, [newEvent].concat(args));
      }
    }
    return oldTriggerEvent.apply(this, [event].concat(args));
  };
  try {
    // 京东小程序 triggerEvent 为只读
    mpInstance.triggerEvent = newTriggerEvent;
  } catch (error) {
    mpInstance._triggerEvent = newTriggerEvent;
  }
}
function initHook(name, options, isComponent) {
  var oldHook = options[name];
  options[name] = function () {
    markMPComponent(this);
    initTriggerEvent(this);
    if (oldHook) {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return oldHook.apply(this, args);
    }
  };
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;
  Component = function Component() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}
var PAGE_EVENT_HOOKS = ['onPullDownRefresh', 'onReachBottom', 'onAddToFavorites', 'onShareTimeline', 'onShareAppMessage', 'onPageScroll', 'onResize', 'onTabItemTap'];
function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}
function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }
  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }
  vueOptions = vueOptions.default || vueOptions;
  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super && vueOptions.super.options && Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }
  if (isFn(vueOptions[hook]) || Array.isArray(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {
      return hasHook(hook, mixin);
    });
  }
}
function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}
function initUnknownHooks(mpOptions, vueOptions) {
  var excludes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  findHooks(vueOptions).forEach(function (hook) {
    return initHook$1(mpOptions, hook, excludes);
  });
}
function findHooks(vueOptions) {
  var hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (vueOptions) {
    Object.keys(vueOptions).forEach(function (name) {
      if (name.indexOf('on') === 0 && isFn(vueOptions[name])) {
        hooks.push(name);
      }
    });
  }
  return hooks;
}
function initHook$1(mpOptions, hook, excludes) {
  if (excludes.indexOf(hook) === -1 && !hasOwn(mpOptions, hook)) {
    mpOptions[hook] = function (args) {
      return this.$vm && this.$vm.__call_hook(hook, args);
    };
  }
}
function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}
function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}
function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;
  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}
function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};
  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"yueke","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }
  if (!isPlainObject(data)) {
    data = {};
  }
  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });
  return data;
}
var PROP_TYPES = [String, Number, Boolean, Object, Array, null];
function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;
  var vueProps = vueOptions.props;
  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }
  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: ''
          };
          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: ''
          };
        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(initBehavior({
      properties: initProperties(vueExtends.props, true)
    }));
  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(initBehavior({
          properties: initProperties(vueMixin.props, true)
        }));
      }
    });
  }
  return behaviors;
}
function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}
function initProperties(props) {
  var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var options = arguments.length > 3 ? arguments[3] : undefined;
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: ''
    };
    {
      if (options.virtualHost) {
        properties.virtualHostStyle = {
          type: null,
          value: ''
        };
        properties.virtualHostClass = {
          type: null,
          value: ''
        };
      }
    }
    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: ''
    };
    properties.vueSlots = {
      // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots
        });
      }
    };
  }
  if (Array.isArray(props)) {
    // ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key)
      };
    });
  } else if (isPlainObject(props)) {
    // {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {
        // title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }
        opts.type = parsePropType(key, opts.type);
        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key)
        };
      } else {
        // content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key)
        };
      }
    });
  }
  return properties;
}
function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}
  event.stopPropagation = noop;
  event.preventDefault = noop;
  event.target = event.target || {};
  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }
  if (hasOwn(event, 'markerId')) {
    event.detail = (0, _typeof2.default)(event.detail) === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }
  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }
  return event;
}
function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {
      // ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];
      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }
      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }
      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}
function processEventExtra(vm, extra, event, __args__) {
  var extraObj = {};
  if (Array.isArray(extra) && extra.length) {
    /**
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *'test'
     */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {
          // model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {
            // $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            extraObj['$' + index] = event.detail ? event.detail.__args__ || __args__ : __args__;
          } else if (dataPath.indexOf('$event.') === 0) {
            // $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }
  return extraObj;
}
function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}
function processEventArgs(vm, event) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var isCustom = arguments.length > 4 ? arguments[4] : undefined;
  var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象

  // fixed 用户直接触发 mpInstance.triggerEvent
  var __args__ = isPlainObject(event.detail) ? event.detail.__args__ || [event.detail] : [event.detail];
  if (isCustom) {
    // 自定义事件
    isCustomMPEvent = event.currentTarget && event.currentTarget.dataset && event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {
      // 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return __args__;
    }
  }
  var extraObj = processEventExtra(vm, extra, event, __args__);
  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {
        // input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(__args__[0]);
        } else {
          // wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });
  return ret;
}
var ONCE = '~';
var CUSTOM = '^';
function isMatchEventType(eventType, optType) {
  return eventType === optType || optType === 'regionchange' && (eventType === 'begin' || eventType === 'end');
}
function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}
function handleEvent(event) {
  var _this2 = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;
  var ret = [];
  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];
    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;
    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this2.$vm;
          if (handlerCtx.$options.generic) {
            // mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx, processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName));
            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            var _type = _this2.$vm.mpType === 'page' ? 'Page' : 'Component';
            var path = _this2.route || _this2.is;
            throw new Error("".concat(_type, " \"").concat(path, "\" does not have a method \"").concat(methodName, "\""));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName);
          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });
  if (eventType === 'input' && ret.length === 1 && typeof ret[0] !== 'undefined') {
    return ret[0];
  }
}
var eventChannels = {};
function getEventChannel(id) {
  var eventChannel = eventChannels[id];
  delete eventChannels[id];
  return eventChannel;
}
var hooks = ['onShow', 'onHide', 'onError', 'onPageNotFound', 'onThemeChange', 'onUnhandledRejection'];
function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}
function initScopedSlotsParams() {
  var center = {};
  var parents = {};
  function currentId(fn) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      fn(vueId);
    }
  }
  _vue.default.prototype.$hasSSP = function (vueId) {
    var slot = center[vueId];
    if (!slot) {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
    return slot;
  };
  _vue.default.prototype.$getSSP = function (vueId, name, needAll) {
    var slot = center[vueId];
    if (slot) {
      var params = slot[name] || [];
      if (needAll) {
        return params;
      }
      return params[0];
    }
  };
  _vue.default.prototype.$setSSP = function (name, value) {
    var index = 0;
    currentId.call(this, function (vueId) {
      var slot = center[vueId];
      var params = slot[name] = slot[name] || [];
      params.push(value);
      index = params.length - 1;
    });
    return index;
  };
  _vue.default.prototype.$initSSP = function () {
    currentId.call(this, function (vueId) {
      center[vueId] = {};
    });
  };
  _vue.default.prototype.$callSSP = function () {
    currentId.call(this, function (vueId) {
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    });
  };
  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    }
  });
}
function parseBaseApp(vm, _ref4) {
  var mocks = _ref4.mocks,
    initRefs = _ref4.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);
  _vue.default.prototype.mpHost = "mp-weixin";
  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }
      this.mpType = this.$options.mpType;
      this.$mp = (0, _defineProperty2.default)({
        data: {}
      }, this.mpType, this.$options.mpInstance);
      this.$scope = this.$options.mpInstance;
      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {
        // hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    }
  });
  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {
        // 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {
          // 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }
      this.$vm = vm;
      this.$vm.$mp = {
        app: this
      };
      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;
      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);
      this.$vm.__call_hook('onLaunch', args);
    }
  };

  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }
  initAppLocale(_vue.default, vm, getLocaleLanguage$1());
  initHooks(appOptions, hooks);
  initUnknownHooks(appOptions, vm.$options);
  return appOptions;
}
function getLocaleLanguage$1() {
  var localeLanguage = '';
  {
    var appBaseInfo = wx.getAppBaseInfo();
    var language = appBaseInfo && appBaseInfo.language ? appBaseInfo.language : LOCALE_EN;
    localeLanguage = normalizeLocale(language) || LOCALE_EN;
  }
  return localeLanguage;
}
function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs
  });
}
function createApp(vm) {
  App(parseApp(vm));
  return vm;
}
var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {
  return '%' + c.charCodeAt(0).toString(16);
};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {
  return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
};
function stringifyQuery(obj) {
  var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];
    if (val === undefined) {
      return '';
    }
    if (val === null) {
      return encodeStr(key);
    }
    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }
    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&') : null;
  return res ? "?".concat(res) : '';
}
function parseBaseComponent(vueComponentOptions) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    isPage = _ref5.isPage,
    initRelation = _ref5.initRelation;
  var needVueOptions = arguments.length > 2 ? arguments[2] : undefined;
  var _initVueComponent = initVueComponent(_vue.default, vueComponentOptions),
    _initVueComponent2 = (0, _slicedToArray2.default)(_initVueComponent, 2),
    VueComponent = _initVueComponent2[0],
    vueOptions = _initVueComponent2[1];
  var options = _objectSpread({
    multipleSlots: true,
    // styleIsolation: 'apply-shared',
    addGlobalClass: true
  }, vueOptions.options || {});
  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }
  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file, options),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;
        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties
        };
        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options
        });

        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      }
    },
    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      }
    },
    methods: {
      __l: handleLink,
      __e: handleEvent
    }
  };
  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }
  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }
  if (needVueOptions) {
    return [componentOptions, vueOptions, VueComponent];
  }
  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}
function parseComponent(vueComponentOptions, needVueOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation
  }, needVueOptions);
}
var hooks$1 = ['onShow', 'onHide', 'onUnload'];
hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);
function parseBasePage(vuePageOptions) {
  var _parseComponent = parseComponent(vuePageOptions, true),
    _parseComponent2 = (0, _slicedToArray2.default)(_parseComponent, 2),
    pageOptions = _parseComponent2[0],
    vueOptions = _parseComponent2[1];
  initHooks(pageOptions.methods, hooks$1, vueOptions);
  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery)
    };
    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };
  {
    initUnknownHooks(pageOptions.methods, vuePageOptions, ['onReady']);
  }
  {
    initWorkletMethods(pageOptions.methods, vueOptions.methods);
  }
  return pageOptions;
}
function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions);
}
function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}
function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}
function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true
  });
  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});
canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name : canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});
var uni = {};
if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    }
  });
} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });
  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, extraApi[name]);
    });
  }
  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });
  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });
  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}
wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;
var uni$1 = uni;
var _default = uni$1;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 20:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 201:
/*!******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/admin_news_biz.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 资讯后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var NewsBiz = __webpack_require__(/*! ./news_biz.js */ 160);
var projectSetting = __webpack_require__(/*! ../public/project_setting.js */ 75);
var AdminNewsBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(AdminNewsBiz, _BaseBiz);
  var _super = _createSuper(AdminNewsBiz);
  function AdminNewsBiz() {
    _classCallCheck(this, AdminNewsBiz);
    return _super.apply(this, arguments);
  }
  _createClass(AdminNewsBiz, null, [{
    key: "initFormData",
    value: /** 表单初始化相关数据 */
    function initFormData() {
      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var cateIdOptions = NewsBiz.getCateList();
      return {
        id: id,
        contentDesc: '',
        // 分类
        cateIdOptions: cateIdOptions,
        fields: projectSetting.NEWS_FIELDS,
        // 图片数据
        imgList: [],
        // 表单数据
        formOrder: 9999,
        formTitle: '',
        formDesc: '',
        formContent: [],
        formCateId: cateIdOptions.length == 1 ? cateIdOptions[0].val : '',
        formForms: []
      };
    }
  }, {
    key: "getCateName",
    value: function getCateName(cateId) {
      var cateList = projectSetting.NEWS_CATE;
      for (var k = 0; k < cateList.length; k++) {
        if (cateList[k].id == cateId) {
          return cateList[k].title;
        }
      }
      return '';
    }
  }]);
  return AdminNewsBiz;
}(BaseBiz);
/** 表单校验  本地 */
AdminNewsBiz.CHECK_FORM = {
  title: 'formTitle|must|string|min:4|max:50|name=标题',
  cateId: 'formCateId|must|id|name=分类',
  order: 'formOrder|must|int|min:0|max:9999|name=排序号',
  desc: 'formDesc|string|min:10|max:200|name=简介',
  forms: 'formForms|array'
};
module.exports = AdminNewsBiz;

/***/ }),

/***/ 21:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 22:
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;
exports.compileI18nJsonStr = compileI18nJsonStr;
exports.hasI18nJson = hasI18nJson;
exports.initVueI18n = initVueI18n;
exports.isI18nStr = isI18nStr;
exports.isString = void 0;
exports.normalizeLocale = normalizeLocale;
exports.parseI18nJson = parseI18nJson;
exports.resolveLocale = resolveLocale;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var isObject = function isObject(val) {
  return val !== null && (0, _typeof2.default)(val) === 'object';
};
var defaultDelimiters = ['{', '}'];
var BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {
    (0, _classCallCheck2.default)(this, BaseFormatter);
    this._caches = Object.create(null);
  }
  (0, _createClass2.default)(BaseFormatter, [{
    key: "interpolate",
    value: function interpolate(message, values) {
      var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    }
  }]);
  return BaseFormatter;
}();
exports.Formatter = BaseFormatter;
var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    startDelimiter = _ref2[0],
    endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({
          type: 'text',
          value: text
        });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ? 'list' : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? 'named' : 'unknown';
      tokens.push({
        value: sub,
        type: type
      });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
      text += char;
    }
  }
  text && tokens.push({
    type: 'text',
    value: text
  });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = Array.isArray(values) ? 'list' : isObject(values) ? 'named' : 'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;
    }
    index++;
  }
  return compiled;
}
var LOCALE_ZH_HANS = 'zh-Hans';
exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';
exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';
exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';
exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';
exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {
  return hasOwnProperty.call(val, key);
};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var locales = [LOCALE_EN, LOCALE_FR, LOCALE_ES];
  if (messages && Object.keys(messages).length > 0) {
    locales = Object.keys(messages);
  }
  var lang = startsWith(locale, locales);
  if (lang) {
    return lang;
  }
}
var I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {
    var locale = _ref3.locale,
      fallbackLocale = _ref3.fallbackLocale,
      messages = _ref3.messages,
      watcher = _ref3.watcher,
      formater = _ref3.formater;
    (0, _classCallCheck2.default)(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }
  (0, _createClass2.default)(I18n, [{
    key: "setLocale",
    value: function setLocale(locale) {
      var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }
  }, {
    key: "watchLocale",
    value: function watchLocale(fn) {
      var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    }
  }, {
    key: "add",
    value: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else {
        this.messages[locale] = message;
      }
    }
  }, {
    key: "f",
    value: function f(message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    }
  }, {
    key: "t",
    value: function t(key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    }
  }]);
  return I18n;
}();
exports.I18n = I18n;
function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else {
    appVm.$watch(function () {
      return appVm.$locale;
    }, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {
  var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;
  var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {
    var _ref4 = [messages, locale];
    locale = _ref4[0];
    messages = _ref4[1];
  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale = typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale || LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher
  });
  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    }
  };
}
var isString = function isString(val) {
  return typeof val === 'string';
};
exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {
  var locale = _ref5.locale,
    locales = _ref5.locales,
    delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name]
      });
    }
  });
  localeValues.unshift({
    locale: locale,
    values: locales[locale]
  });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  } catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (Array.isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}
function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {
      return locales.indexOf(locale) > -1;
    });
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 23:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 24:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 25:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2024 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue &&
    !value.__v_isMPComponent
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou' || vm.mpHost === 'mp-xhs'){//百度、快手、小红书 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
var NULLTYPE = '[object Null]';
var UNDEFINEDTYPE = '[object Undefined]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function nullOrUndefined(currentType, preType) {
    if(
        (currentType === NULLTYPE || currentType === UNDEFINEDTYPE) && 
        (preType === NULLTYPE || preType === UNDEFINEDTYPE)
    ) {
        return false
    }
    return true
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue !== pre[key] && nullOrUndefined(currentType, preType)) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"yueke","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"yueke","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"yueke","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function clearInstance(key, value) {
  // 简易去除 Vue 和小程序组件实例
  if (value) {
    if (value._isVue || value.__v_isMPComponent) {
      return {}
    }
  }
  return value
}

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret, clearInstance))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"yueke","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      var triggerEvent = this.$scope['_triggerEvent'] || this.$scope['triggerEvent'];
      if (triggerEvent) {
        try {
          triggerEvent.call(this.$scope, event, {
            __args__: toArray(arguments, 1)
          });
        } catch (error) {

        }
      }
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    'onUploadDouyinVideo',
    'onNFCReadMessage',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 26:
/*!************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/pages.json ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 27:
/*!************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, uni, wx) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uniCloud = exports.default = exports.UniCloudError = void 0;
var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 28));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ 30));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ 32));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34));
var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ 35));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _pages = _interopRequireDefault(__webpack_require__(/*! @/pages.json */ 37));
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e34) { throw _e34; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e35) { didErr = true; err = _e35; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
"undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
function t(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function n(e, t, n) {
  return e(n = {
    path: t,
    exports: {},
    require: function require(e, t) {
      return function () {
        throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
      }(null == t && n.path);
    }
  }, n.exports), n.exports;
}
var s = n(function (e, t) {
    var n;
    e.exports = (n = n || function (e, t) {
      var n = Object.create || function () {
          function e() {}
          return function (t) {
            var n;
            return e.prototype = t, n = new e(), e.prototype = null, n;
          };
        }(),
        s = {},
        r = s.lib = {},
        i = r.Base = {
          extend: function extend(e) {
            var t = n(this);
            return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function () {
              t.$super.init.apply(this, arguments);
            }), t.init.prototype = t, t.$super = this, t;
          },
          create: function create() {
            var e = this.extend();
            return e.init.apply(e, arguments), e;
          },
          init: function init() {},
          mixIn: function mixIn(e) {
            for (var t in e) {
              e.hasOwnProperty(t) && (this[t] = e[t]);
            }
            e.hasOwnProperty("toString") && (this.toString = e.toString);
          },
          clone: function clone() {
            return this.init.prototype.extend(this);
          }
        },
        o = r.WordArray = i.extend({
          init: function init(e, n) {
            e = this.words = e || [], this.sigBytes = n != t ? n : 4 * e.length;
          },
          toString: function toString(e) {
            return (e || c).stringify(this);
          },
          concat: function concat(e) {
            var t = this.words,
              n = e.words,
              s = this.sigBytes,
              r = e.sigBytes;
            if (this.clamp(), s % 4) for (var i = 0; i < r; i++) {
              var o = n[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              t[s + i >>> 2] |= o << 24 - (s + i) % 4 * 8;
            } else for (i = 0; i < r; i += 4) {
              t[s + i >>> 2] = n[i >>> 2];
            }
            return this.sigBytes += r, this;
          },
          clamp: function clamp() {
            var t = this.words,
              n = this.sigBytes;
            t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, t.length = e.ceil(n / 4);
          },
          clone: function clone() {
            var e = i.clone.call(this);
            return e.words = this.words.slice(0), e;
          },
          random: function random(t) {
            for (var n, s = [], r = function r(t) {
                var n = 987654321,
                  s = 4294967295;
                return function () {
                  var r = ((n = 36969 * (65535 & n) + (n >> 16) & s) << 16) + (t = 18e3 * (65535 & t) + (t >> 16) & s) & s;
                  return r /= 4294967296, (r += .5) * (e.random() > .5 ? 1 : -1);
                };
              }, i = 0; i < t; i += 4) {
              var a = r(4294967296 * (n || e.random()));
              n = 987654071 * a(), s.push(4294967296 * a() | 0);
            }
            return new o.init(s, t);
          }
        }),
        a = s.enc = {},
        c = a.Hex = {
          stringify: function stringify(e) {
            for (var t = e.words, n = e.sigBytes, s = [], r = 0; r < n; r++) {
              var i = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
              s.push((i >>> 4).toString(16)), s.push((15 & i).toString(16));
            }
            return s.join("");
          },
          parse: function parse(e) {
            for (var t = e.length, n = [], s = 0; s < t; s += 2) {
              n[s >>> 3] |= parseInt(e.substr(s, 2), 16) << 24 - s % 8 * 4;
            }
            return new o.init(n, t / 2);
          }
        },
        u = a.Latin1 = {
          stringify: function stringify(e) {
            for (var t = e.words, n = e.sigBytes, s = [], r = 0; r < n; r++) {
              var i = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
              s.push(String.fromCharCode(i));
            }
            return s.join("");
          },
          parse: function parse(e) {
            for (var t = e.length, n = [], s = 0; s < t; s++) {
              n[s >>> 2] |= (255 & e.charCodeAt(s)) << 24 - s % 4 * 8;
            }
            return new o.init(n, t);
          }
        },
        h = a.Utf8 = {
          stringify: function stringify(e) {
            try {
              return decodeURIComponent(escape(u.stringify(e)));
            } catch (e) {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function parse(e) {
            return u.parse(unescape(encodeURIComponent(e)));
          }
        },
        l = r.BufferedBlockAlgorithm = i.extend({
          reset: function reset() {
            this._data = new o.init(), this._nDataBytes = 0;
          },
          _append: function _append(e) {
            "string" == typeof e && (e = h.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;
          },
          _process: function _process(t) {
            var n = this._data,
              s = n.words,
              r = n.sigBytes,
              i = this.blockSize,
              a = r / (4 * i),
              c = (a = t ? e.ceil(a) : e.max((0 | a) - this._minBufferSize, 0)) * i,
              u = e.min(4 * c, r);
            if (c) {
              for (var h = 0; h < c; h += i) {
                this._doProcessBlock(s, h);
              }
              var l = s.splice(0, c);
              n.sigBytes -= u;
            }
            return new o.init(l, u);
          },
          clone: function clone() {
            var e = i.clone.call(this);
            return e._data = this._data.clone(), e;
          },
          _minBufferSize: 0
        });
      r.Hasher = l.extend({
        cfg: i.extend(),
        init: function init(e) {
          this.cfg = this.cfg.extend(e), this.reset();
        },
        reset: function reset() {
          l.reset.call(this), this._doReset();
        },
        update: function update(e) {
          return this._append(e), this._process(), this;
        },
        finalize: function finalize(e) {
          return e && this._append(e), this._doFinalize();
        },
        blockSize: 16,
        _createHelper: function _createHelper(e) {
          return function (t, n) {
            return new e.init(n).finalize(t);
          };
        },
        _createHmacHelper: function _createHmacHelper(e) {
          return function (t, n) {
            return new d.HMAC.init(e, n).finalize(t);
          };
        }
      });
      var d = s.algo = {};
      return s;
    }(Math), n);
  }),
  r = s,
  i = (n(function (e, t) {
    var n;
    e.exports = (n = r, function (e) {
      var t = n,
        s = t.lib,
        r = s.WordArray,
        i = s.Hasher,
        o = t.algo,
        a = [];
      !function () {
        for (var t = 0; t < 64; t++) {
          a[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0;
        }
      }();
      var c = o.MD5 = i.extend({
        _doReset: function _doReset() {
          this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878]);
        },
        _doProcessBlock: function _doProcessBlock(e, t) {
          for (var n = 0; n < 16; n++) {
            var s = t + n,
              r = e[s];
            e[s] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
          }
          var i = this._hash.words,
            o = e[t + 0],
            c = e[t + 1],
            p = e[t + 2],
            f = e[t + 3],
            g = e[t + 4],
            m = e[t + 5],
            y = e[t + 6],
            _ = e[t + 7],
            w = e[t + 8],
            v = e[t + 9],
            I = e[t + 10],
            S = e[t + 11],
            T = e[t + 12],
            b = e[t + 13],
            E = e[t + 14],
            k = e[t + 15],
            P = i[0],
            C = i[1],
            A = i[2],
            O = i[3];
          P = u(P, C, A, O, o, 7, a[0]), O = u(O, P, C, A, c, 12, a[1]), A = u(A, O, P, C, p, 17, a[2]), C = u(C, A, O, P, f, 22, a[3]), P = u(P, C, A, O, g, 7, a[4]), O = u(O, P, C, A, m, 12, a[5]), A = u(A, O, P, C, y, 17, a[6]), C = u(C, A, O, P, _, 22, a[7]), P = u(P, C, A, O, w, 7, a[8]), O = u(O, P, C, A, v, 12, a[9]), A = u(A, O, P, C, I, 17, a[10]), C = u(C, A, O, P, S, 22, a[11]), P = u(P, C, A, O, T, 7, a[12]), O = u(O, P, C, A, b, 12, a[13]), A = u(A, O, P, C, E, 17, a[14]), P = h(P, C = u(C, A, O, P, k, 22, a[15]), A, O, c, 5, a[16]), O = h(O, P, C, A, y, 9, a[17]), A = h(A, O, P, C, S, 14, a[18]), C = h(C, A, O, P, o, 20, a[19]), P = h(P, C, A, O, m, 5, a[20]), O = h(O, P, C, A, I, 9, a[21]), A = h(A, O, P, C, k, 14, a[22]), C = h(C, A, O, P, g, 20, a[23]), P = h(P, C, A, O, v, 5, a[24]), O = h(O, P, C, A, E, 9, a[25]), A = h(A, O, P, C, f, 14, a[26]), C = h(C, A, O, P, w, 20, a[27]), P = h(P, C, A, O, b, 5, a[28]), O = h(O, P, C, A, p, 9, a[29]), A = h(A, O, P, C, _, 14, a[30]), P = l(P, C = h(C, A, O, P, T, 20, a[31]), A, O, m, 4, a[32]), O = l(O, P, C, A, w, 11, a[33]), A = l(A, O, P, C, S, 16, a[34]), C = l(C, A, O, P, E, 23, a[35]), P = l(P, C, A, O, c, 4, a[36]), O = l(O, P, C, A, g, 11, a[37]), A = l(A, O, P, C, _, 16, a[38]), C = l(C, A, O, P, I, 23, a[39]), P = l(P, C, A, O, b, 4, a[40]), O = l(O, P, C, A, o, 11, a[41]), A = l(A, O, P, C, f, 16, a[42]), C = l(C, A, O, P, y, 23, a[43]), P = l(P, C, A, O, v, 4, a[44]), O = l(O, P, C, A, T, 11, a[45]), A = l(A, O, P, C, k, 16, a[46]), P = d(P, C = l(C, A, O, P, p, 23, a[47]), A, O, o, 6, a[48]), O = d(O, P, C, A, _, 10, a[49]), A = d(A, O, P, C, E, 15, a[50]), C = d(C, A, O, P, m, 21, a[51]), P = d(P, C, A, O, T, 6, a[52]), O = d(O, P, C, A, f, 10, a[53]), A = d(A, O, P, C, I, 15, a[54]), C = d(C, A, O, P, c, 21, a[55]), P = d(P, C, A, O, w, 6, a[56]), O = d(O, P, C, A, k, 10, a[57]), A = d(A, O, P, C, y, 15, a[58]), C = d(C, A, O, P, b, 21, a[59]), P = d(P, C, A, O, g, 6, a[60]), O = d(O, P, C, A, S, 10, a[61]), A = d(A, O, P, C, p, 15, a[62]), C = d(C, A, O, P, v, 21, a[63]), i[0] = i[0] + P | 0, i[1] = i[1] + C | 0, i[2] = i[2] + A | 0, i[3] = i[3] + O | 0;
        },
        _doFinalize: function _doFinalize() {
          var t = this._data,
            n = t.words,
            s = 8 * this._nDataBytes,
            r = 8 * t.sigBytes;
          n[r >>> 5] |= 128 << 24 - r % 32;
          var i = e.floor(s / 4294967296),
            o = s;
          n[15 + (r + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), n[14 + (r + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), t.sigBytes = 4 * (n.length + 1), this._process();
          for (var a = this._hash, c = a.words, u = 0; u < 4; u++) {
            var h = c[u];
            c[u] = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8);
          }
          return a;
        },
        clone: function clone() {
          var e = i.clone.call(this);
          return e._hash = this._hash.clone(), e;
        }
      });
      function u(e, t, n, s, r, i, o) {
        var a = e + (t & n | ~t & s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function h(e, t, n, s, r, i, o) {
        var a = e + (t & s | n & ~s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function l(e, t, n, s, r, i, o) {
        var a = e + (t ^ n ^ s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function d(e, t, n, s, r, i, o) {
        var a = e + (n ^ (t | ~s)) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      t.MD5 = i._createHelper(c), t.HmacMD5 = i._createHmacHelper(c);
    }(Math), n.MD5);
  }), n(function (e, t) {
    var n;
    e.exports = (n = r, void function () {
      var e = n,
        t = e.lib.Base,
        s = e.enc.Utf8;
      e.algo.HMAC = t.extend({
        init: function init(e, t) {
          e = this._hasher = new e.init(), "string" == typeof t && (t = s.parse(t));
          var n = e.blockSize,
            r = 4 * n;
          t.sigBytes > r && (t = e.finalize(t)), t.clamp();
          for (var i = this._oKey = t.clone(), o = this._iKey = t.clone(), a = i.words, c = o.words, u = 0; u < n; u++) {
            a[u] ^= 1549556828, c[u] ^= 909522486;
          }
          i.sigBytes = o.sigBytes = r, this.reset();
        },
        reset: function reset() {
          var e = this._hasher;
          e.reset(), e.update(this._iKey);
        },
        update: function update(e) {
          return this._hasher.update(e), this;
        },
        finalize: function finalize(e) {
          var t = this._hasher,
            n = t.finalize(e);
          return t.reset(), t.finalize(this._oKey.clone().concat(n));
        }
      });
    }());
  }), n(function (e, t) {
    e.exports = r.HmacMD5;
  })),
  o = n(function (e, t) {
    e.exports = r.enc.Utf8;
  }),
  a = n(function (e, t) {
    var n;
    e.exports = (n = r, function () {
      var e = n,
        t = e.lib.WordArray;
      function s(e, n, s) {
        for (var r = [], i = 0, o = 0; o < n; o++) {
          if (o % 4) {
            var a = s[e.charCodeAt(o - 1)] << o % 4 * 2,
              c = s[e.charCodeAt(o)] >>> 6 - o % 4 * 2;
            r[i >>> 2] |= (a | c) << 24 - i % 4 * 8, i++;
          }
        }
        return t.create(r, i);
      }
      e.enc.Base64 = {
        stringify: function stringify(e) {
          var t = e.words,
            n = e.sigBytes,
            s = this._map;
          e.clamp();
          for (var r = [], i = 0; i < n; i += 3) {
            for (var o = (t[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (t[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | t[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, a = 0; a < 4 && i + .75 * a < n; a++) {
              r.push(s.charAt(o >>> 6 * (3 - a) & 63));
            }
          }
          var c = s.charAt(64);
          if (c) for (; r.length % 4;) {
            r.push(c);
          }
          return r.join("");
        },
        parse: function parse(e) {
          var t = e.length,
            n = this._map,
            r = this._reverseMap;
          if (!r) {
            r = this._reverseMap = [];
            for (var i = 0; i < n.length; i++) {
              r[n.charCodeAt(i)] = i;
            }
          }
          var o = n.charAt(64);
          if (o) {
            var a = e.indexOf(o);
            -1 !== a && (t = a);
          }
          return s(e, t, r);
        },
        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
      };
    }(), n.enc.Base64);
  });
var c = "uni_id_token",
  u = "uni_id_token_expired",
  h = "uniIdToken",
  l = {
    DEFAULT: "FUNCTION",
    FUNCTION: "FUNCTION",
    OBJECT: "OBJECT",
    CLIENT_DB: "CLIENT_DB"
  },
  d = "pending",
  p = "fulfilled",
  f = "rejected";
function g(e) {
  return Object.prototype.toString.call(e).slice(8, -1).toLowerCase();
}
function m(e) {
  return "object" === g(e);
}
function y(e) {
  return "function" == typeof e;
}
function _(e) {
  return function () {
    try {
      return e.apply(e, arguments);
    } catch (e) {
      console.error(e);
    }
  };
}
var w = "REJECTED",
  v = "NOT_PENDING";
var I = /*#__PURE__*/function () {
  function I() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref.createPromise,
      _ref$retryRule = _ref.retryRule,
      t = _ref$retryRule === void 0 ? w : _ref$retryRule;
    (0, _classCallCheck2.default)(this, I);
    this.createPromise = e, this.status = null, this.promise = null, this.retryRule = t;
  }
  (0, _createClass2.default)(I, [{
    key: "needRetry",
    get: function get() {
      if (!this.status) return !0;
      switch (this.retryRule) {
        case w:
          return this.status === f;
        case v:
          return this.status !== d;
      }
    }
  }, {
    key: "exec",
    value: function exec() {
      var _this = this;
      return this.needRetry ? (this.status = d, this.promise = this.createPromise().then(function (e) {
        return _this.status = p, Promise.resolve(e);
      }, function (e) {
        return _this.status = f, Promise.reject(e);
      }), this.promise) : this.promise;
    }
  }]);
  return I;
}();
var S = /*#__PURE__*/function () {
  function S() {
    (0, _classCallCheck2.default)(this, S);
    this._callback = {};
  }
  (0, _createClass2.default)(S, [{
    key: "addListener",
    value: function addListener(e, t) {
      this._callback[e] || (this._callback[e] = []), this._callback[e].push(t);
    }
  }, {
    key: "on",
    value: function on(e, t) {
      return this.addListener(e, t);
    }
  }, {
    key: "removeListener",
    value: function removeListener(e, t) {
      if (!t) throw new Error('The "listener" argument must be of type function. Received undefined');
      var n = this._callback[e];
      if (!n) return;
      var s = function (e, t) {
        for (var _n2 = e.length - 1; _n2 >= 0; _n2--) {
          if (e[_n2] === t) return _n2;
        }
        return -1;
      }(n, t);
      n.splice(s, 1);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      return this.removeListener(e, t);
    }
  }, {
    key: "removeAllListener",
    value: function removeAllListener(e) {
      delete this._callback[e];
    }
  }, {
    key: "emit",
    value: function emit(e) {
      var n = this._callback[e];
      for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        t[_key - 1] = arguments[_key];
      }
      if (n) for (var _e2 = 0; _e2 < n.length; _e2++) {
        n[_e2].apply(n, t);
      }
    }
  }]);
  return S;
}();
function T(e) {
  return e && "string" == typeof e ? JSON.parse(e) : e;
}
var b = "development" === "development",
  E = "mp-weixin",
  k = "true" === undefined || !0 === undefined,
  P = T([]),
  C = "h5" === E ? "web" : "app-plus" === E || "app-harmony" === E ? "app" : E,
  A = T({"address":["127.0.0.1","192.168.96.1","192.168.31.38"],"servePort":7001,"debugPort":9001,"initialLaunchType":"remote","skipFiles":["<node_internals>/**","D:/HBuilderX.4.55.2025030718/HBuilderX/plugins/unicloud/**/*.js"]}),
  O = T([{"provider":"tencent","spaceName":"yueke-test","spaceId":"tcb-zz6pckedn3bishi-6cu741161bd8"}]) || [],
  x = true;
var N = "";
try {
  N = (__webpack_require__(/*! uni-stat-config */ 38).default || __webpack_require__(/*! uni-stat-config */ 38)).appid;
} catch (e) {}
var R,
  L = {};
function U(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var n, s;
  return n = L, s = e, Object.prototype.hasOwnProperty.call(n, s) || (L[e] = t), L[e];
}
function D() {
  return R || (R = function () {
    if ("undefined" != typeof globalThis) return globalThis;
    if ("undefined" != typeof self) return self;
    if ("undefined" != typeof window) return window;
    function e() {
      return this;
    }
    return void 0 !== e() ? e() : new Function("return this")();
  }(), R);
}
"app" === C && (L = uni._globalUniCloudObj ? uni._globalUniCloudObj : uni._globalUniCloudObj = {});
var M = ["invoke", "success", "fail", "complete"],
  q = U("_globalUniCloudInterceptor");
function F(e, t) {
  q[e] || (q[e] = {}), m(t) && Object.keys(t).forEach(function (n) {
    M.indexOf(n) > -1 && function (e, t, n) {
      var s = q[e][t];
      s || (s = q[e][t] = []), -1 === s.indexOf(n) && y(n) && s.push(n);
    }(e, n, t[n]);
  });
}
function K(e, t) {
  q[e] || (q[e] = {}), m(t) ? Object.keys(t).forEach(function (n) {
    M.indexOf(n) > -1 && function (e, t, n) {
      var s = q[e][t];
      if (!s) return;
      var r = s.indexOf(n);
      r > -1 && s.splice(r, 1);
    }(e, n, t[n]);
  }) : delete q[e];
}
function j(e, t) {
  return e && 0 !== e.length ? e.reduce(function (e, n) {
    return e.then(function () {
      return n(t);
    });
  }, Promise.resolve()) : Promise.resolve();
}
function $(e, t) {
  return q[e] && q[e][t] || [];
}
function B(e) {
  F("callObject", e);
}
var W = U("_globalUniCloudListener"),
  H = {
    RESPONSE: "response",
    NEED_LOGIN: "needLogin",
    REFRESH_TOKEN: "refreshToken"
  },
  J = {
    CLIENT_DB: "clientdb",
    CLOUD_FUNCTION: "cloudfunction",
    CLOUD_OBJECT: "cloudobject"
  };
function z(e) {
  return W[e] || (W[e] = []), W[e];
}
function V(e, t) {
  var n = z(e);
  n.includes(t) || n.push(t);
}
function G(e, t) {
  var n = z(e),
    s = n.indexOf(t);
  -1 !== s && n.splice(s, 1);
}
function Y(e, t) {
  var n = z(e);
  for (var _e3 = 0; _e3 < n.length; _e3++) {
    (0, n[_e3])(t);
  }
}
var Q,
  X = !1;
function Z() {
  return Q || (Q = new Promise(function (e) {
    X && e(), function t() {
      if ("function" == typeof getCurrentPages) {
        var _t2 = getCurrentPages();
        _t2 && _t2[0] && (X = !0, e());
      }
      X || setTimeout(function () {
        t();
      }, 30);
    }();
  }), Q);
}
function ee(e) {
  var t = {};
  for (var _n3 in e) {
    var _s2 = e[_n3];
    y(_s2) && (t[_n3] = _(_s2));
  }
  return t;
}
var te = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(te, _Error);
  var _super = _createSuper(te);
  function te(e) {
    var _this2;
    (0, _classCallCheck2.default)(this, te);
    _this2 = _super.call(this, e.message), _this2.errMsg = e.message || e.errMsg || "unknown system error", _this2.code = _this2.errCode = e.code || e.errCode || "SYSTEM_ERROR", _this2.errSubject = _this2.subject = e.subject || e.errSubject, _this2.cause = e.cause, _this2.requestId = e.requestId;
    return _this2;
  }
  (0, _createClass2.default)(te, [{
    key: "toJson",
    value: function toJson() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      if (!(e >= 10)) return e++, {
        errCode: this.errCode,
        errMsg: this.errMsg,
        errSubject: this.errSubject,
        cause: this.cause && this.cause.toJson ? this.cause.toJson(e) : this.cause
      };
    }
  }]);
  return te;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
exports.UniCloudError = te;
var ne = {
  request: function request(e) {
    return uni.request(e);
  },
  uploadFile: function uploadFile(e) {
    return uni.uploadFile(e);
  },
  setStorageSync: function setStorageSync(e, t) {
    return uni.setStorageSync(e, t);
  },
  getStorageSync: function getStorageSync(e) {
    return uni.getStorageSync(e);
  },
  removeStorageSync: function removeStorageSync(e) {
    return uni.removeStorageSync(e);
  },
  clearStorageSync: function clearStorageSync() {
    return uni.clearStorageSync();
  },
  connectSocket: function connectSocket(e) {
    return uni.connectSocket(e);
  }
};
function se() {
  return {
    token: ne.getStorageSync(c) || ne.getStorageSync(h),
    tokenExpired: ne.getStorageSync(u)
  };
}
function re() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref2.token,
    t = _ref2.tokenExpired;
  e && ne.setStorageSync(c, e), t && ne.setStorageSync(u, t);
}
var ie, oe;
function ae() {
  return ie || (ie = uni.getSystemInfoSync()), ie;
}
function ce() {
  var e, t;
  try {
    if (uni.getLaunchOptionsSync) {
      if (uni.getLaunchOptionsSync.toString().indexOf("not yet implemented") > -1) return;
      var _uni$getLaunchOptions = uni.getLaunchOptionsSync(),
        _n4 = _uni$getLaunchOptions.scene,
        _s3 = _uni$getLaunchOptions.channel;
      e = _s3, t = _n4;
    }
  } catch (e) {}
  return {
    channel: e,
    scene: t
  };
}
var ue = {};
function he() {
  var e = uni.getLocale && uni.getLocale() || "en";
  if (oe) return _objectSpread(_objectSpread(_objectSpread({}, ue), oe), {}, {
    locale: e,
    LOCALE: e
  });
  var t = ae(),
    n = t.deviceId,
    s = t.osName,
    r = t.uniPlatform,
    i = t.appId,
    o = ["appId", "appLanguage", "appName", "appVersion", "appVersionCode", "appWgtVersion", "browserName", "browserVersion", "deviceBrand", "deviceId", "deviceModel", "deviceType", "osName", "osVersion", "romName", "romVersion", "ua", "hostName", "hostVersion", "uniPlatform", "uniRuntimeVersion", "uniRuntimeVersionCode", "uniCompilerVersion", "uniCompilerVersionCode"];
  for (var _e4 in t) {
    Object.hasOwnProperty.call(t, _e4) && -1 === o.indexOf(_e4) && delete t[_e4];
  }
  return oe = _objectSpread(_objectSpread({
    PLATFORM: r,
    OS: s,
    APPID: i,
    DEVICEID: n
  }, ce()), t), _objectSpread(_objectSpread(_objectSpread({}, ue), oe), {}, {
    locale: e,
    LOCALE: e
  });
}
var le = {
  sign: function sign(e, t) {
    var n = "";
    return Object.keys(e).sort().forEach(function (t) {
      e[t] && (n = n + "&" + t + "=" + e[t]);
    }), n = n.slice(1), i(n, t).toString();
  },
  wrappedRequest: function wrappedRequest(e, t) {
    return new Promise(function (n, s) {
      t(Object.assign(e, {
        complete: function complete(e) {
          e || (e = {}), b && "web" === C && e.errMsg && 0 === e.errMsg.indexOf("request:fail") && console.warn("发布H5，需要在uniCloud后台操作，绑定安全域名，否则会因为跨域问题而无法访问。教程参考：https://uniapp.dcloud.io/uniCloud/quickstart?id=useinh5");
          var t = e.data && e.data.header && e.data.header["x-serverless-request-id"] || e.header && e.header["request-id"];
          if (!e.statusCode || e.statusCode >= 400) {
            var _n5 = e.data && e.data.error && e.data.error.code || "SYS_ERR",
              _r = e.data && e.data.error && e.data.error.message || e.errMsg || "request:fail";
            return s(new te({
              code: _n5,
              message: _r,
              requestId: t
            }));
          }
          var r = e.data;
          if (r.error) return s(new te({
            code: r.error.code,
            message: r.error.message,
            requestId: t
          }));
          r.result = r.data, r.requestId = t, delete r.data, n(r);
        }
      }));
    });
  },
  toBase64: function toBase64(e) {
    return a.stringify(o.parse(e));
  }
};
var de = /*#__PURE__*/function () {
  function de(e) {
    var _this3 = this;
    (0, _classCallCheck2.default)(this, de);
    ["spaceId", "clientSecret"].forEach(function (t) {
      if (!Object.prototype.hasOwnProperty.call(e, t)) throw new Error("".concat(t, " required"));
    }), this.config = Object.assign({}, {
      endpoint: 0 === e.spaceId.indexOf("mp-") ? "https://api.next.bspapp.com" : "https://api.bspapp.com"
    }, e), this.config.provider = "aliyun", this.config.requestUrl = this.config.endpoint + "/client", this.config.envType = this.config.envType || "public", this.config.accessTokenKey = "access_token_" + this.config.spaceId, this.adapter = ne, this._getAccessTokenPromiseHub = new I({
      createPromise: function createPromise() {
        return _this3.requestAuth(_this3.setupRequest({
          method: "serverless.auth.user.anonymousAuthorize",
          params: "{}"
        }, "auth")).then(function (e) {
          if (!e.result || !e.result.accessToken) throw new te({
            code: "AUTH_FAILED",
            message: "获取accessToken失败"
          });
          _this3.setAccessToken(e.result.accessToken);
        });
      },
      retryRule: v
    });
  }
  (0, _createClass2.default)(de, [{
    key: "hasAccessToken",
    get: function get() {
      return !!this.accessToken;
    }
  }, {
    key: "setAccessToken",
    value: function setAccessToken(e) {
      this.accessToken = e;
    }
  }, {
    key: "requestWrapped",
    value: function requestWrapped(e) {
      return le.wrappedRequest(e, this.adapter.request);
    }
  }, {
    key: "requestAuth",
    value: function requestAuth(e) {
      return this.requestWrapped(e);
    }
  }, {
    key: "request",
    value: function request(e, t) {
      var _this4 = this;
      return Promise.resolve().then(function () {
        return _this4.hasAccessToken ? t ? _this4.requestWrapped(e) : _this4.requestWrapped(e).catch(function (t) {
          return new Promise(function (e, n) {
            !t || "GATEWAY_INVALID_TOKEN" !== t.code && "InvalidParameter.InvalidToken" !== t.code ? n(t) : e();
          }).then(function () {
            return _this4.getAccessToken();
          }).then(function () {
            var t = _this4.rebuildRequest(e);
            return _this4.request(t, !0);
          });
        }) : _this4.getAccessToken().then(function () {
          var t = _this4.rebuildRequest(e);
          return _this4.request(t, !0);
        });
      });
    }
  }, {
    key: "rebuildRequest",
    value: function rebuildRequest(e) {
      var t = Object.assign({}, e);
      return t.data.token = this.accessToken, t.header["x-basement-token"] = this.accessToken, t.header["x-serverless-sign"] = le.sign(t.data, this.config.clientSecret), t;
    }
  }, {
    key: "setupRequest",
    value: function setupRequest(e, t) {
      var n = Object.assign({}, e, {
          spaceId: this.config.spaceId,
          timestamp: Date.now()
        }),
        s = {
          "Content-Type": "application/json"
        };
      return "auth" !== t && (n.token = this.accessToken, s["x-basement-token"] = this.accessToken), s["x-serverless-sign"] = le.sign(n, this.config.clientSecret), {
        url: this.config.requestUrl,
        method: "POST",
        data: n,
        dataType: "json",
        header: s
      };
    }
  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      return this._getAccessTokenPromiseHub.exec();
    }
  }, {
    key: "authorize",
    value: function () {
      var _authorize = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.getAccessToken();
              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function authorize() {
        return _authorize.apply(this, arguments);
      }
      return authorize;
    }()
  }, {
    key: "callFunction",
    value: function callFunction(e) {
      var t = {
        method: "serverless.function.runtime.invoke",
        params: JSON.stringify({
          functionTarget: e.name,
          functionArgs: e.data || {}
        })
      };
      return this.request(_objectSpread(_objectSpread({}, this.setupRequest(t)), {}, {
        timeout: e.timeout
      }));
    }
  }, {
    key: "getOSSUploadOptionsFromPath",
    value: function getOSSUploadOptionsFromPath(e) {
      var t = {
        method: "serverless.file.resource.generateProximalSign",
        params: JSON.stringify(e)
      };
      return this.request(this.setupRequest(t));
    }
  }, {
    key: "uploadFileToOSS",
    value: function uploadFileToOSS(_ref3) {
      var _this5 = this;
      var e = _ref3.url,
        t = _ref3.formData,
        n = _ref3.name,
        s = _ref3.filePath,
        r = _ref3.fileType,
        i = _ref3.onUploadProgress;
      return new Promise(function (o, a) {
        var c = _this5.adapter.uploadFile({
          url: e,
          formData: t,
          name: n,
          filePath: s,
          fileType: r,
          header: {
            "X-OSS-server-side-encrpytion": "AES256"
          },
          success: function success(e) {
            e && e.statusCode < 400 ? o(e) : a(new te({
              code: "UPLOAD_FAILED",
              message: "文件上传失败"
            }));
          },
          fail: function fail(e) {
            a(new te({
              code: e.code || "UPLOAD_FAILED",
              message: e.message || e.errMsg || "文件上传失败"
            }));
          }
        });
        "function" == typeof i && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (e) {
          i({
            loaded: e.totalBytesSent,
            total: e.totalBytesExpectedToSend
          });
        });
      });
    }
  }, {
    key: "reportOSSUpload",
    value: function reportOSSUpload(e) {
      var t = {
        method: "serverless.file.resource.report",
        params: JSON.stringify(e)
      };
      return this.request(this.setupRequest(t));
    }
  }, {
    key: "uploadFile",
    value: function () {
      var _uploadFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref4) {
        var e, t, _ref4$fileType, n, _ref4$cloudPathAsReal, s, r, i, o, a, c, u, h, l, d, p, f, m, y, _, _e5, w;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                e = _ref4.filePath, t = _ref4.cloudPath, _ref4$fileType = _ref4.fileType, n = _ref4$fileType === void 0 ? "image" : _ref4$fileType, _ref4$cloudPathAsReal = _ref4.cloudPathAsRealPath, s = _ref4$cloudPathAsReal === void 0 ? !1 : _ref4$cloudPathAsReal, r = _ref4.onUploadProgress, i = _ref4.config;
                if (!("string" !== g(t))) {
                  _context2.next = 3;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath必须为字符串类型"
                });
              case 3:
                if (t = t.trim()) {
                  _context2.next = 5;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath不可为空"
                });
              case 5:
                if (!/:\/\//.test(t)) {
                  _context2.next = 7;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath不合法"
                });
              case 7:
                o = i && i.envType || this.config.envType;
                if (!(s && ("/" !== t[0] && (t = "/" + t), t.indexOf("\\") > -1))) {
                  _context2.next = 10;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "使用cloudPath作为路径时，cloudPath不可包含“\\”"
                });
              case 10:
                _context2.next = 12;
                return this.getOSSUploadOptionsFromPath({
                  env: o,
                  filename: s ? t.split("/").pop() : t,
                  fileId: s ? t : void 0
                });
              case 12:
                a = _context2.sent.result;
                c = "https://" + a.cdnDomain + "/" + a.ossPath;
                u = a.securityToken;
                h = a.accessKeyId;
                l = a.signature;
                d = a.host;
                p = a.ossPath;
                f = a.id;
                m = a.policy;
                y = a.ossCallbackUrl;
                _ = {
                  "Cache-Control": "max-age=2592000",
                  "Content-Disposition": "attachment",
                  OSSAccessKeyId: h,
                  Signature: l,
                  host: d,
                  id: f,
                  key: p,
                  policy: m,
                  success_action_status: 200
                };
                if (u && (_["x-oss-security-token"] = u), y) {
                  _e5 = JSON.stringify({
                    callbackUrl: y,
                    callbackBody: JSON.stringify({
                      fileId: f,
                      spaceId: this.config.spaceId
                    }),
                    callbackBodyType: "application/json"
                  });
                  _.callback = le.toBase64(_e5);
                }
                w = {
                  url: "https://" + a.host,
                  formData: _,
                  fileName: "file",
                  name: "file",
                  filePath: e,
                  fileType: n
                };
                _context2.next = 27;
                return this.uploadFileToOSS(Object.assign({}, w, {
                  onUploadProgress: r
                }));
              case 27:
                if (!y) {
                  _context2.next = 29;
                  break;
                }
                return _context2.abrupt("return", {
                  success: !0,
                  filePath: e,
                  fileID: c
                });
              case 29:
                _context2.next = 31;
                return this.reportOSSUpload({
                  id: f
                });
              case 31:
                if (!_context2.sent.success) {
                  _context2.next = 33;
                  break;
                }
                return _context2.abrupt("return", {
                  success: !0,
                  filePath: e,
                  fileID: c
                });
              case 33:
                throw new te({
                  code: "UPLOAD_FAILED",
                  message: "文件上传失败"
                });
              case 34:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function uploadFile(_x) {
        return _uploadFile.apply(this, arguments);
      }
      return uploadFile;
    }()
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL() {
      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref5.fileList;
      return new Promise(function (t, n) {
        Array.isArray(e) && 0 !== e.length || n(new te({
          code: "INVALID_PARAM",
          message: "fileList的元素必须是非空的字符串"
        })), t({
          fileList: e.map(function (e) {
            return {
              fileID: e,
              tempFileURL: e
            };
          })
        });
      });
    }
  }, {
    key: "getFileInfo",
    value: function () {
      var _getFileInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {
        var _ref6,
          e,
          t,
          _args3 = arguments;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _ref6 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, e = _ref6.fileList;
                if (!(!Array.isArray(e) || 0 === e.length)) {
                  _context3.next = 3;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "fileList的元素必须是非空的字符串"
                });
              case 3:
                t = {
                  method: "serverless.file.resource.info",
                  params: JSON.stringify({
                    id: e.map(function (e) {
                      return e.split("?")[0];
                    }).join(",")
                  })
                };
                _context3.next = 6;
                return this.request(this.setupRequest(t));
              case 6:
                _context3.t0 = _context3.sent.result;
                return _context3.abrupt("return", {
                  fileList: _context3.t0
                });
              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function getFileInfo() {
        return _getFileInfo.apply(this, arguments);
      }
      return getFileInfo;
    }()
  }]);
  return de;
}();
var pe = {
  init: function init(e) {
    var t = new de(e),
      n = {
        signInAnonymously: function signInAnonymously() {
          return t.authorize();
        },
        getLoginState: function getLoginState() {
          return Promise.resolve(!1);
        }
      };
    return t.auth = function () {
      return n;
    }, t.customAuth = t.auth, t;
  }
};
var fe = "undefined" != typeof location && "http:" === location.protocol ? "http:" : "https:";
var ge;
!function (e) {
  e.local = "local", e.none = "none", e.session = "session";
}(ge || (ge = {}));
var me = function me() {},
  ye = n(function (e, t) {
    var n;
    e.exports = (n = r, function (e) {
      var t = n,
        s = t.lib,
        r = s.WordArray,
        i = s.Hasher,
        o = t.algo,
        a = [],
        c = [];
      !function () {
        function t(t) {
          for (var n = e.sqrt(t), s = 2; s <= n; s++) {
            if (!(t % s)) return !1;
          }
          return !0;
        }
        function n(e) {
          return 4294967296 * (e - (0 | e)) | 0;
        }
        for (var s = 2, r = 0; r < 64;) {
          t(s) && (r < 8 && (a[r] = n(e.pow(s, .5))), c[r] = n(e.pow(s, 1 / 3)), r++), s++;
        }
      }();
      var u = [],
        h = o.SHA256 = i.extend({
          _doReset: function _doReset() {
            this._hash = new r.init(a.slice(0));
          },
          _doProcessBlock: function _doProcessBlock(e, t) {
            for (var n = this._hash.words, s = n[0], r = n[1], i = n[2], o = n[3], a = n[4], h = n[5], l = n[6], d = n[7], p = 0; p < 64; p++) {
              if (p < 16) u[p] = 0 | e[t + p];else {
                var f = u[p - 15],
                  g = (f << 25 | f >>> 7) ^ (f << 14 | f >>> 18) ^ f >>> 3,
                  m = u[p - 2],
                  y = (m << 15 | m >>> 17) ^ (m << 13 | m >>> 19) ^ m >>> 10;
                u[p] = g + u[p - 7] + y + u[p - 16];
              }
              var _ = s & r ^ s & i ^ r & i,
                w = (s << 30 | s >>> 2) ^ (s << 19 | s >>> 13) ^ (s << 10 | s >>> 22),
                v = d + ((a << 26 | a >>> 6) ^ (a << 21 | a >>> 11) ^ (a << 7 | a >>> 25)) + (a & h ^ ~a & l) + c[p] + u[p];
              d = l, l = h, h = a, a = o + v | 0, o = i, i = r, r = s, s = v + (w + _) | 0;
            }
            n[0] = n[0] + s | 0, n[1] = n[1] + r | 0, n[2] = n[2] + i | 0, n[3] = n[3] + o | 0, n[4] = n[4] + a | 0, n[5] = n[5] + h | 0, n[6] = n[6] + l | 0, n[7] = n[7] + d | 0;
          },
          _doFinalize: function _doFinalize() {
            var t = this._data,
              n = t.words,
              s = 8 * this._nDataBytes,
              r = 8 * t.sigBytes;
            return n[r >>> 5] |= 128 << 24 - r % 32, n[14 + (r + 64 >>> 9 << 4)] = e.floor(s / 4294967296), n[15 + (r + 64 >>> 9 << 4)] = s, t.sigBytes = 4 * n.length, this._process(), this._hash;
          },
          clone: function clone() {
            var e = i.clone.call(this);
            return e._hash = this._hash.clone(), e;
          }
        });
      t.SHA256 = i._createHelper(h), t.HmacSHA256 = i._createHmacHelper(h);
    }(Math), n.SHA256);
  }),
  _e = ye,
  we = n(function (e, t) {
    e.exports = r.HmacSHA256;
  });
var ve = function ve() {
  var e;
  if (!Promise) {
    e = function e() {}, e.promise = {};
    var _t3 = function _t3() {
      throw new te({
        message: 'Your Node runtime does support ES6 Promises. Set "global.Promise" to your preferred implementation of promises.'
      });
    };
    return Object.defineProperty(e.promise, "then", {
      get: _t3
    }), Object.defineProperty(e.promise, "catch", {
      get: _t3
    }), e;
  }
  var t = new Promise(function (t, n) {
    e = function e(_e6, s) {
      return _e6 ? n(_e6) : t(s);
    };
  });
  return e.promise = t, e;
};
function Ie(e) {
  return void 0 === e;
}
function Se(e) {
  return "[object Null]" === Object.prototype.toString.call(e);
}
function Te() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return e.replace(/([\s\S]+)\s+(请前往云开发AI小助手查看问题：.*)/, "$1");
}
function be() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  var n = "";
  for (var _s4 = 0; _s4 < e; _s4++) {
    n += t.charAt(Math.floor(62 * Math.random()));
  }
  return n;
}
var Ee;
function ke(e) {
  var t = (n = e, "[object Array]" === Object.prototype.toString.call(n) ? e : [e]);
  var n;
  var _iterator = _createForOfIteratorHelper(t),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _e7 = _step.value;
      var _t4 = _e7.isMatch,
        _n6 = _e7.genAdapter,
        _s5 = _e7.runtime;
      if (_t4()) return {
        adapter: _n6(),
        runtime: _s5
      };
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
!function (e) {
  e.WEB = "web", e.WX_MP = "wx_mp";
}(Ee || (Ee = {}));
var Pe = {
    adapter: null,
    runtime: void 0
  },
  Ce = ["anonymousUuidKey"];
var Ae = /*#__PURE__*/function (_me) {
  (0, _inherits2.default)(Ae, _me);
  var _super2 = _createSuper(Ae);
  function Ae() {
    var _this6;
    (0, _classCallCheck2.default)(this, Ae);
    _this6 = _super2.call(this), Pe.adapter.root.tcbObject || (Pe.adapter.root.tcbObject = {});
    return _this6;
  }
  (0, _createClass2.default)(Ae, [{
    key: "setItem",
    value: function setItem(e, t) {
      Pe.adapter.root.tcbObject[e] = t;
    }
  }, {
    key: "getItem",
    value: function getItem(e) {
      return Pe.adapter.root.tcbObject[e];
    }
  }, {
    key: "removeItem",
    value: function removeItem(e) {
      delete Pe.adapter.root.tcbObject[e];
    }
  }, {
    key: "clear",
    value: function clear() {
      delete Pe.adapter.root.tcbObject;
    }
  }]);
  return Ae;
}(me);
function Oe(e, t) {
  switch (e) {
    case "local":
      return t.localStorage || new Ae();
    case "none":
      return new Ae();
    default:
      return t.sessionStorage || new Ae();
  }
}
var xe = /*#__PURE__*/function () {
  function xe(e) {
    (0, _classCallCheck2.default)(this, xe);
    if (!this._storage) {
      this._persistence = Pe.adapter.primaryStorage || e.persistence, this._storage = Oe(this._persistence, Pe.adapter);
      var _t5 = "access_token_".concat(e.env),
        _n7 = "access_token_expire_".concat(e.env),
        _s6 = "refresh_token_".concat(e.env),
        _r2 = "anonymous_uuid_".concat(e.env),
        _i = "login_type_".concat(e.env),
        _o = "device_id",
        _a = "token_type_".concat(e.env),
        _c = "user_info_".concat(e.env);
      this.keys = {
        accessTokenKey: _t5,
        accessTokenExpireKey: _n7,
        refreshTokenKey: _s6,
        anonymousUuidKey: _r2,
        loginTypeKey: _i,
        userInfoKey: _c,
        deviceIdKey: _o,
        tokenTypeKey: _a
      };
    }
  }
  (0, _createClass2.default)(xe, [{
    key: "updatePersistence",
    value: function updatePersistence(e) {
      if (e === this._persistence) return;
      var t = "local" === this._persistence;
      this._persistence = e;
      var n = Oe(e, Pe.adapter);
      for (var _e8 in this.keys) {
        var _s7 = this.keys[_e8];
        if (t && Ce.includes(_e8)) continue;
        var _r3 = this._storage.getItem(_s7);
        Ie(_r3) || Se(_r3) || (n.setItem(_s7, _r3), this._storage.removeItem(_s7));
      }
      this._storage = n;
    }
  }, {
    key: "setStore",
    value: function setStore(e, t, n) {
      if (!this._storage) return;
      var s = {
          version: n || "localCachev1",
          content: t
        },
        r = JSON.stringify(s);
      try {
        this._storage.setItem(e, r);
      } catch (e) {
        throw e;
      }
    }
  }, {
    key: "getStore",
    value: function getStore(e, t) {
      try {
        if (!this._storage) return;
      } catch (e) {
        return "";
      }
      t = t || "localCachev1";
      var n = this._storage.getItem(e);
      if (!n) return "";
      if (n.indexOf(t) >= 0) {
        return JSON.parse(n).content;
      }
      return "";
    }
  }, {
    key: "removeStore",
    value: function removeStore(e) {
      this._storage.removeItem(e);
    }
  }]);
  return xe;
}();
var Ne = {},
  Re = {};
function Le(e) {
  return Ne[e];
}
var Ue = /*#__PURE__*/(0, _createClass2.default)(function Ue(e, t) {
  (0, _classCallCheck2.default)(this, Ue);
  this.data = t || null, this.name = e;
});
var De = /*#__PURE__*/function (_Ue) {
  (0, _inherits2.default)(De, _Ue);
  var _super3 = _createSuper(De);
  function De(e, t) {
    var _this7;
    (0, _classCallCheck2.default)(this, De);
    _this7 = _super3.call(this, "error", {
      error: e,
      data: t
    }), _this7.error = e;
    return _this7;
  }
  return (0, _createClass2.default)(De);
}(Ue);
var Me = new ( /*#__PURE__*/function () {
  function _class() {
    (0, _classCallCheck2.default)(this, _class);
    this._listeners = {};
  }
  (0, _createClass2.default)(_class, [{
    key: "on",
    value: function on(e, t) {
      return function (e, t, n) {
        n[e] = n[e] || [], n[e].push(t);
      }(e, t, this._listeners), this;
    }
  }, {
    key: "off",
    value: function off(e, t) {
      return function (e, t, n) {
        if (n && n[e]) {
          var _s8 = n[e].indexOf(t);
          -1 !== _s8 && n[e].splice(_s8, 1);
        }
      }(e, t, this._listeners), this;
    }
  }, {
    key: "fire",
    value: function fire(e, t) {
      if (e instanceof De) return console.error(e.error), this;
      var n = "string" == typeof e ? new Ue(e, t || {}) : e;
      var s = n.name;
      if (this._listens(s)) {
        n.target = this;
        var _e9 = this._listeners[s] ? (0, _toConsumableArray2.default)(this._listeners[s]) : [];
        var _iterator2 = _createForOfIteratorHelper(_e9),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _t6 = _step2.value;
            _t6.call(this, n);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
  }, {
    key: "_listens",
    value: function _listens(e) {
      return this._listeners[e] && this._listeners[e].length > 0;
    }
  }]);
  return _class;
}())();
function qe(e, t) {
  Me.on(e, t);
}
function Fe(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Me.fire(e, t);
}
function Ke(e, t) {
  Me.off(e, t);
}
var je = "loginStateChanged",
  $e = "loginStateExpire",
  Be = "loginTypeChanged",
  We = "anonymousConverted",
  He = "refreshAccessToken";
var Je;
!function (e) {
  e.ANONYMOUS = "ANONYMOUS", e.WECHAT = "WECHAT", e.WECHAT_PUBLIC = "WECHAT-PUBLIC", e.WECHAT_OPEN = "WECHAT-OPEN", e.CUSTOM = "CUSTOM", e.EMAIL = "EMAIL", e.USERNAME = "USERNAME", e.NULL = "NULL";
}(Je || (Je = {}));
var ze = /*#__PURE__*/function () {
  function ze() {
    (0, _classCallCheck2.default)(this, ze);
    this._fnPromiseMap = new Map();
  }
  (0, _createClass2.default)(ze, [{
    key: "run",
    value: function () {
      var _run = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(e, t) {
        var _this8 = this;
        var n;
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                n = this._fnPromiseMap.get(e);
                return _context5.abrupt("return", (n || (n = new Promise( /*#__PURE__*/function () {
                  var _ref7 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(n, s) {
                    var _e10;
                    return _regenerator.default.wrap(function _callee4$(_context4) {
                      while (1) {
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _context4.prev = 0;
                            _context4.next = 3;
                            return _this8._runIdlePromise();
                          case 3:
                            _e10 = t();
                            _context4.t0 = n;
                            _context4.next = 7;
                            return _e10;
                          case 7:
                            _context4.t1 = _context4.sent;
                            (0, _context4.t0)(_context4.t1);
                            _context4.next = 14;
                            break;
                          case 11:
                            _context4.prev = 11;
                            _context4.t2 = _context4["catch"](0);
                            s(_context4.t2);
                          case 14:
                            _context4.prev = 14;
                            _this8._fnPromiseMap.delete(e);
                            return _context4.finish(14);
                          case 17:
                          case "end":
                            return _context4.stop();
                        }
                      }
                    }, _callee4, null, [[0, 11, 14, 17]]);
                  }));
                  return function (_x4, _x5) {
                    return _ref7.apply(this, arguments);
                  };
                }()), this._fnPromiseMap.set(e, n)), n));
              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function run(_x2, _x3) {
        return _run.apply(this, arguments);
      }
      return run;
    }()
  }, {
    key: "_runIdlePromise",
    value: function _runIdlePromise() {
      return Promise.resolve();
    }
  }]);
  return ze;
}();
var Ve = /*#__PURE__*/function () {
  function Ve(e) {
    (0, _classCallCheck2.default)(this, Ve);
    this._singlePromise = new ze(), this._cache = Le(e.env), this._baseURL = "https://".concat(e.env, ".ap-shanghai.tcb-api.tencentcloudapi.com"), this._reqClass = new Pe.adapter.reqClass({
      timeout: e.timeout,
      timeoutMsg: "\u8BF7\u6C42\u5728".concat(e.timeout / 1e3, "s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD"),
      restrictedMethods: ["post"]
    });
  }
  (0, _createClass2.default)(Ve, [{
    key: "_getDeviceId",
    value: function _getDeviceId() {
      if (this._deviceID) return this._deviceID;
      var e = this._cache.keys.deviceIdKey;
      var t = this._cache.getStore(e);
      return "string" == typeof t && t.length >= 16 && t.length <= 48 || (t = be(), this._cache.setStore(e, t)), this._deviceID = t, t;
    }
  }, {
    key: "_request",
    value: function () {
      var _request2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6(e, t) {
        var n,
          s,
          _e11,
          _t7,
          _n8,
          _args6 = arguments;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                n = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};
                s = {
                  "x-request-id": be(),
                  "x-device-id": this._getDeviceId()
                };
                if (!n.withAccessToken) {
                  _context6.next = 9;
                  break;
                }
                _e11 = this._cache.keys.tokenTypeKey;
                _context6.next = 6;
                return this.getAccessToken();
              case 6:
                _t7 = _context6.sent;
                _n8 = this._cache.getStore(_e11);
                s.authorization = "".concat(_n8, " ").concat(_t7);
              case 9:
                return _context6.abrupt("return", this._reqClass["get" === n.method ? "get" : "post"]({
                  url: "".concat(this._baseURL).concat(e),
                  data: t,
                  headers: s
                }));
              case 10:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function _request(_x6, _x7) {
        return _request2.apply(this, arguments);
      }
      return _request;
    }()
  }, {
    key: "_fetchAccessToken",
    value: function () {
      var _fetchAccessToken2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8() {
        var _this9 = this;
        var _this$_cache$keys, e, t, n, s, r, i, o, a, c;
        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _this$_cache$keys = this._cache.keys, e = _this$_cache$keys.loginTypeKey, t = _this$_cache$keys.accessTokenKey, n = _this$_cache$keys.accessTokenExpireKey, s = _this$_cache$keys.tokenTypeKey, r = this._cache.getStore(e);
                if (!(r && r !== Je.ANONYMOUS)) {
                  _context8.next = 3;
                  break;
                }
                throw new te({
                  code: "INVALID_OPERATION",
                  message: "非匿名登录不支持刷新 access token"
                });
              case 3:
                _context8.next = 5;
                return this._singlePromise.run("fetchAccessToken", /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {
                  return _regenerator.default.wrap(function _callee7$(_context7) {
                    while (1) {
                      switch (_context7.prev = _context7.next) {
                        case 0:
                          _context7.next = 2;
                          return _this9._request("/auth/v1/signin/anonymously", {}, {
                            method: "post"
                          });
                        case 2:
                          return _context7.abrupt("return", _context7.sent.data);
                        case 3:
                        case "end":
                          return _context7.stop();
                      }
                    }
                  }, _callee7);
                })));
              case 5:
                i = _context8.sent;
                o = i.access_token;
                a = i.expires_in;
                c = i.token_type;
                return _context8.abrupt("return", (this._cache.setStore(s, c), this._cache.setStore(t, o), this._cache.setStore(n, Date.now() + 1e3 * a), o));
              case 10:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
      function _fetchAccessToken() {
        return _fetchAccessToken2.apply(this, arguments);
      }
      return _fetchAccessToken;
    }()
  }, {
    key: "isAccessTokenExpired",
    value: function isAccessTokenExpired(e, t) {
      var n = !0;
      return e && t && (n = t < Date.now()), n;
    }
  }, {
    key: "getAccessToken",
    value: function () {
      var _getAccessToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9() {
        var _this$_cache$keys2, e, t, n, s;
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _this$_cache$keys2 = this._cache.keys, e = _this$_cache$keys2.accessTokenKey, t = _this$_cache$keys2.accessTokenExpireKey, n = this._cache.getStore(e), s = this._cache.getStore(t);
                return _context9.abrupt("return", this.isAccessTokenExpired(n, s) ? this._fetchAccessToken() : n);
              case 2:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
      function getAccessToken() {
        return _getAccessToken.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "refreshAccessToken",
    value: function () {
      var _refreshAccessToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10() {
        var _this$_cache$keys3, e, t, n;
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _this$_cache$keys3 = this._cache.keys, e = _this$_cache$keys3.accessTokenKey, t = _this$_cache$keys3.accessTokenExpireKey, n = _this$_cache$keys3.loginTypeKey;
                return _context10.abrupt("return", (this._cache.removeStore(e), this._cache.removeStore(t), this._cache.setStore(n, Je.ANONYMOUS), this.getAccessToken()));
              case 2:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function refreshAccessToken() {
        return _refreshAccessToken.apply(this, arguments);
      }
      return refreshAccessToken;
    }()
  }, {
    key: "getUserInfo",
    value: function () {
      var _getUserInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12() {
        var _this10 = this;
        return _regenerator.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                return _context12.abrupt("return", this._singlePromise.run("getUserInfo", /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11() {
                  return _regenerator.default.wrap(function _callee11$(_context11) {
                    while (1) {
                      switch (_context11.prev = _context11.next) {
                        case 0:
                          _context11.next = 2;
                          return _this10._request("/auth/v1/user/me", {}, {
                            withAccessToken: !0,
                            method: "get"
                          });
                        case 2:
                          return _context11.abrupt("return", _context11.sent.data);
                        case 3:
                        case "end":
                          return _context11.stop();
                      }
                    }
                  }, _callee11);
                }))));
              case 1:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function getUserInfo() {
        return _getUserInfo.apply(this, arguments);
      }
      return getUserInfo;
    }()
  }]);
  return Ve;
}();
var Ge = ["auth.getJwt", "auth.logout", "auth.signInWithTicket", "auth.signInAnonymously", "auth.signIn", "auth.fetchAccessTokenWithRefreshToken", "auth.signUpWithEmailAndPassword", "auth.activateEndUserMail", "auth.sendPasswordResetEmail", "auth.resetPasswordWithToken", "auth.isUsernameRegistered"],
  Ye = {
    "X-SDK-Version": "1.3.5"
  };
function Qe(e, t, n) {
  var s = e[t];
  e[t] = function (t) {
    var r = {},
      i = {};
    n.forEach(function (n) {
      var _n$call = n.call(e, t),
        s = _n$call.data,
        o = _n$call.headers;
      Object.assign(r, s), Object.assign(i, o);
    });
    var o = t.data;
    return o && function () {
      var e;
      if (e = o, "[object FormData]" !== Object.prototype.toString.call(e)) t.data = _objectSpread(_objectSpread({}, o), r);else for (var _e12 in r) {
        o.append(_e12, r[_e12]);
      }
    }(), t.headers = _objectSpread(_objectSpread({}, t.headers || {}), i), s.call(e, t);
  };
}
function Xe() {
  var e = Math.random().toString(16).slice(2);
  return {
    data: {
      seqId: e
    },
    headers: _objectSpread(_objectSpread({}, Ye), {}, {
      "x-seqid": e
    })
  };
}
var Ze = /*#__PURE__*/function () {
  function Ze() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2.default)(this, Ze);
    var t;
    this.config = e, this._reqClass = new Pe.adapter.reqClass({
      timeout: this.config.timeout,
      timeoutMsg: "\u8BF7\u6C42\u5728".concat(this.config.timeout / 1e3, "s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD"),
      restrictedMethods: ["post"]
    }), this._cache = Le(this.config.env), this._localCache = (t = this.config.env, Re[t]), this.oauth = new Ve(this.config), Qe(this._reqClass, "post", [Xe]), Qe(this._reqClass, "upload", [Xe]), Qe(this._reqClass, "download", [Xe]);
  }
  (0, _createClass2.default)(Ze, [{
    key: "post",
    value: function () {
      var _post = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee13(e) {
        return _regenerator.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                _context13.next = 2;
                return this._reqClass.post(e);
              case 2:
                return _context13.abrupt("return", _context13.sent);
              case 3:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));
      function post(_x8) {
        return _post.apply(this, arguments);
      }
      return post;
    }()
  }, {
    key: "upload",
    value: function () {
      var _upload = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee14(e) {
        return _regenerator.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this._reqClass.upload(e);
              case 2:
                return _context14.abrupt("return", _context14.sent);
              case 3:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));
      function upload(_x9) {
        return _upload.apply(this, arguments);
      }
      return upload;
    }()
  }, {
    key: "download",
    value: function () {
      var _download = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee15(e) {
        return _regenerator.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this._reqClass.download(e);
              case 2:
                return _context15.abrupt("return", _context15.sent);
              case 3:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));
      function download(_x10) {
        return _download.apply(this, arguments);
      }
      return download;
    }()
  }, {
    key: "refreshAccessToken",
    value: function () {
      var _refreshAccessToken2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee16() {
        var e, t;
        return _regenerator.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                this._refreshAccessTokenPromise || (this._refreshAccessTokenPromise = this._refreshAccessToken());
                _context16.prev = 1;
                _context16.next = 4;
                return this._refreshAccessTokenPromise;
              case 4:
                e = _context16.sent;
                _context16.next = 10;
                break;
              case 7:
                _context16.prev = 7;
                _context16.t0 = _context16["catch"](1);
                t = _context16.t0;
              case 10:
                if (!(this._refreshAccessTokenPromise = null, this._shouldRefreshAccessTokenHook = null, t)) {
                  _context16.next = 12;
                  break;
                }
                throw t;
              case 12:
                return _context16.abrupt("return", e);
              case 13:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this, [[1, 7]]);
      }));
      function refreshAccessToken() {
        return _refreshAccessToken2.apply(this, arguments);
      }
      return refreshAccessToken;
    }()
  }, {
    key: "_refreshAccessToken",
    value: function () {
      var _refreshAccessToken3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee17() {
        var _this$_cache$keys4, e, t, n, s, r, i, o, a, _e13, _e14, _t8, _s9;
        return _regenerator.default.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _this$_cache$keys4 = this._cache.keys, e = _this$_cache$keys4.accessTokenKey, t = _this$_cache$keys4.accessTokenExpireKey, n = _this$_cache$keys4.refreshTokenKey, s = _this$_cache$keys4.loginTypeKey, r = _this$_cache$keys4.anonymousUuidKey;
                this._cache.removeStore(e), this._cache.removeStore(t);
                i = this._cache.getStore(n);
                if (i) {
                  _context17.next = 5;
                  break;
                }
                throw new te({
                  message: "未登录CloudBase"
                });
              case 5:
                o = {
                  refresh_token: i
                };
                _context17.next = 8;
                return this.request("auth.fetchAccessTokenWithRefreshToken", o);
              case 8:
                a = _context17.sent;
                if (!a.data.code) {
                  _context17.next = 21;
                  break;
                }
                _e13 = a.data.code;
                if (!("SIGN_PARAM_INVALID" === _e13 || "REFRESH_TOKEN_EXPIRED" === _e13 || "INVALID_REFRESH_TOKEN" === _e13)) {
                  _context17.next = 20;
                  break;
                }
                if (!(this._cache.getStore(s) === Je.ANONYMOUS && "INVALID_REFRESH_TOKEN" === _e13)) {
                  _context17.next = 19;
                  break;
                }
                _e14 = this._cache.getStore(r);
                _t8 = this._cache.getStore(n);
                _context17.next = 17;
                return this.send("auth.signInAnonymously", {
                  anonymous_uuid: _e14,
                  refresh_token: _t8
                });
              case 17:
                _s9 = _context17.sent;
                return _context17.abrupt("return", (this.setRefreshToken(_s9.refresh_token), this._refreshAccessToken()));
              case 19:
                Fe($e), this._cache.removeStore(n);
              case 20:
                throw new te({
                  code: a.data.code,
                  message: "\u5237\u65B0access token\u5931\u8D25\uFF1A".concat(a.data.code)
                });
              case 21:
                if (!a.data.access_token) {
                  _context17.next = 23;
                  break;
                }
                return _context17.abrupt("return", (Fe(He), this._cache.setStore(e, a.data.access_token), this._cache.setStore(t, a.data.access_token_expire + Date.now()), {
                  accessToken: a.data.access_token,
                  accessTokenExpire: a.data.access_token_expire
                }));
              case 23:
                a.data.refresh_token && (this._cache.removeStore(n), this._cache.setStore(n, a.data.refresh_token), this._refreshAccessToken());
              case 24:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));
      function _refreshAccessToken() {
        return _refreshAccessToken3.apply(this, arguments);
      }
      return _refreshAccessToken;
    }()
  }, {
    key: "getAccessToken",
    value: function () {
      var _getAccessToken2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee18() {
        var _this$_cache$keys5, e, t, n, s, r, i;
        return _regenerator.default.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _this$_cache$keys5 = this._cache.keys, e = _this$_cache$keys5.accessTokenKey, t = _this$_cache$keys5.accessTokenExpireKey, n = _this$_cache$keys5.refreshTokenKey;
                if (this._cache.getStore(n)) {
                  _context18.next = 3;
                  break;
                }
                throw new te({
                  message: "refresh token不存在，登录状态异常"
                });
              case 3:
                s = this._cache.getStore(e), r = this._cache.getStore(t), i = !0;
                _context18.t0 = this._shouldRefreshAccessTokenHook;
                if (!_context18.t0) {
                  _context18.next = 9;
                  break;
                }
                _context18.next = 8;
                return this._shouldRefreshAccessTokenHook(s, r);
              case 8:
                _context18.t0 = !_context18.sent;
              case 9:
                _context18.t1 = _context18.t0;
                if (!_context18.t1) {
                  _context18.next = 12;
                  break;
                }
                i = !1;
              case 12:
                return _context18.abrupt("return", (!s || !r || r < Date.now()) && i ? this.refreshAccessToken() : {
                  accessToken: s,
                  accessTokenExpire: r
                });
              case 13:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));
      function getAccessToken() {
        return _getAccessToken2.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "request",
    value: function () {
      var _request3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee19(e, t, n) {
        var s, r, i, o, _e15, _e16, a, c, u, h, l, d, p, f, g;
        return _regenerator.default.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                s = "x-tcb-trace_".concat(this.config.env);
                r = "application/x-www-form-urlencoded";
                i = _objectSpread({
                  action: e,
                  env: this.config.env,
                  dataVersion: "2019-08-16"
                }, t);
                _context19.t0 = -1 === Ge.indexOf(e);
                if (!_context19.t0) {
                  _context19.next = 9;
                  break;
                }
                this._cache.keys;
                _context19.next = 8;
                return this.oauth.getAccessToken();
              case 8:
                i.access_token = _context19.sent;
              case 9:
                if (!("storage.uploadFile" === e)) {
                  _context19.next = 15;
                  break;
                }
                o = new FormData();
                for (_e15 in o) {
                  o.hasOwnProperty(_e15) && void 0 !== o[_e15] && o.append(_e15, i[_e15]);
                }
                r = "multipart/form-data";
                _context19.next = 17;
                break;
              case 15:
                r = "application/json", o = {};
                for (_e16 in i) {
                  void 0 !== i[_e16] && (o[_e16] = i[_e16]);
                }
              case 17:
                a = {
                  headers: {
                    "content-type": r
                  }
                };
                n && n.timeout && (a.timeout = n.timeout), n && n.onUploadProgress && (a.onUploadProgress = n.onUploadProgress);
                c = this._localCache.getStore(s);
                c && (a.headers["X-TCB-Trace"] = c);
                u = t.parse, h = t.inQuery, l = t.search;
                d = {
                  env: this.config.env
                };
                u && (d.parse = !0), h && (d = _objectSpread(_objectSpread({}, h), d));
                p = function (e, t) {
                  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                  var s = /\?/.test(t);
                  var r = "";
                  for (var _e17 in n) {
                    "" === r ? !s && (t += "?") : r += "&", r += "".concat(_e17, "=").concat(encodeURIComponent(n[_e17]));
                  }
                  return /^http(s)?\:\/\//.test(t += r) ? t : "".concat(e).concat(t);
                }(fe, "//tcb-api.tencentcloudapi.com/web", d);
                l && (p += l);
                _context19.next = 28;
                return this.post(_objectSpread({
                  url: p,
                  data: o
                }, a));
              case 28:
                f = _context19.sent;
                g = f.header && f.header["x-tcb-trace"];
                if (!(g && this._localCache.setStore(s, g), 200 !== Number(f.status) && 200 !== Number(f.statusCode) || !f.data)) {
                  _context19.next = 32;
                  break;
                }
                throw new te({
                  code: "NETWORK_ERROR",
                  message: "network request error"
                });
              case 32:
                return _context19.abrupt("return", f);
              case 33:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));
      function request(_x11, _x12, _x13) {
        return _request3.apply(this, arguments);
      }
      return request;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee20(e) {
        var t,
          n,
          s,
          _s10,
          _args20 = arguments;
        return _regenerator.default.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                t = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : {};
                n = _args20.length > 2 && _args20[2] !== undefined ? _args20[2] : {};
                _context20.next = 4;
                return this.request(e, t, _objectSpread(_objectSpread({}, n), {}, {
                  onUploadProgress: t.onUploadProgress
                }));
              case 4:
                s = _context20.sent;
                if (!(("ACCESS_TOKEN_DISABLED" === s.data.code || "ACCESS_TOKEN_EXPIRED" === s.data.code) && -1 === Ge.indexOf(e))) {
                  _context20.next = 14;
                  break;
                }
                _context20.next = 8;
                return this.oauth.refreshAccessToken();
              case 8:
                _context20.next = 10;
                return this.request(e, t, _objectSpread(_objectSpread({}, n), {}, {
                  onUploadProgress: t.onUploadProgress
                }));
              case 10:
                _s10 = _context20.sent;
                if (!_s10.data.code) {
                  _context20.next = 13;
                  break;
                }
                throw new te({
                  code: _s10.data.code,
                  message: Te(_s10.data.message)
                });
              case 13:
                return _context20.abrupt("return", _s10.data);
              case 14:
                if (!s.data.code) {
                  _context20.next = 16;
                  break;
                }
                throw new te({
                  code: s.data.code,
                  message: Te(s.data.message)
                });
              case 16:
                return _context20.abrupt("return", s.data);
              case 17:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));
      function send(_x14) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
  }, {
    key: "setRefreshToken",
    value: function setRefreshToken(e) {
      var _this$_cache$keys6 = this._cache.keys,
        t = _this$_cache$keys6.accessTokenKey,
        n = _this$_cache$keys6.accessTokenExpireKey,
        s = _this$_cache$keys6.refreshTokenKey;
      this._cache.removeStore(t), this._cache.removeStore(n), this._cache.setStore(s, e);
    }
  }]);
  return Ze;
}();
var et = {};
function tt(e) {
  return et[e];
}
var nt = /*#__PURE__*/function () {
  function nt(e) {
    (0, _classCallCheck2.default)(this, nt);
    this.config = e, this._cache = Le(e.env), this._request = tt(e.env);
  }
  (0, _createClass2.default)(nt, [{
    key: "setRefreshToken",
    value: function setRefreshToken(e) {
      var _this$_cache$keys7 = this._cache.keys,
        t = _this$_cache$keys7.accessTokenKey,
        n = _this$_cache$keys7.accessTokenExpireKey,
        s = _this$_cache$keys7.refreshTokenKey;
      this._cache.removeStore(t), this._cache.removeStore(n), this._cache.setStore(s, e);
    }
  }, {
    key: "setAccessToken",
    value: function setAccessToken(e, t) {
      var _this$_cache$keys8 = this._cache.keys,
        n = _this$_cache$keys8.accessTokenKey,
        s = _this$_cache$keys8.accessTokenExpireKey;
      this._cache.setStore(n, e), this._cache.setStore(s, t);
    }
  }, {
    key: "refreshUserInfo",
    value: function () {
      var _refreshUserInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee21() {
        var _yield$this$_request$, e;
        return _regenerator.default.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                _context21.next = 2;
                return this._request.send("auth.getUserInfo", {});
              case 2:
                _yield$this$_request$ = _context21.sent;
                e = _yield$this$_request$.data;
                return _context21.abrupt("return", (this.setLocalUserInfo(e), e));
              case 5:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));
      function refreshUserInfo() {
        return _refreshUserInfo.apply(this, arguments);
      }
      return refreshUserInfo;
    }()
  }, {
    key: "setLocalUserInfo",
    value: function setLocalUserInfo(e) {
      var t = this._cache.keys.userInfoKey;
      this._cache.setStore(t, e);
    }
  }]);
  return nt;
}();
var st = /*#__PURE__*/function () {
  function st(e) {
    (0, _classCallCheck2.default)(this, st);
    if (!e) throw new te({
      code: "PARAM_ERROR",
      message: "envId is not defined"
    });
    this._envId = e, this._cache = Le(this._envId), this._request = tt(this._envId), this.setUserInfo();
  }
  (0, _createClass2.default)(st, [{
    key: "linkWithTicket",
    value: function linkWithTicket(e) {
      if ("string" != typeof e) throw new te({
        code: "PARAM_ERROR",
        message: "ticket must be string"
      });
      return this._request.send("auth.linkWithTicket", {
        ticket: e
      });
    }
  }, {
    key: "linkWithRedirect",
    value: function linkWithRedirect(e) {
      e.signInWithRedirect();
    }
  }, {
    key: "updatePassword",
    value: function updatePassword(e, t) {
      return this._request.send("auth.updatePassword", {
        oldPassword: t,
        newPassword: e
      });
    }
  }, {
    key: "updateEmail",
    value: function updateEmail(e) {
      return this._request.send("auth.updateEmail", {
        newEmail: e
      });
    }
  }, {
    key: "updateUsername",
    value: function updateUsername(e) {
      if ("string" != typeof e) throw new te({
        code: "PARAM_ERROR",
        message: "username must be a string"
      });
      return this._request.send("auth.updateUsername", {
        username: e
      });
    }
  }, {
    key: "getLinkedUidList",
    value: function () {
      var _getLinkedUidList = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee22() {
        var _yield$this$_request$2, e, t, n;
        return _regenerator.default.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return this._request.send("auth.getLinkedUidList", {});
              case 2:
                _yield$this$_request$2 = _context22.sent;
                e = _yield$this$_request$2.data;
                t = !1;
                n = e.users;
                return _context22.abrupt("return", (n.forEach(function (e) {
                  e.wxOpenId && e.wxPublicId && (t = !0);
                }), {
                  users: n,
                  hasPrimaryUid: t
                }));
              case 7:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));
      function getLinkedUidList() {
        return _getLinkedUidList.apply(this, arguments);
      }
      return getLinkedUidList;
    }()
  }, {
    key: "setPrimaryUid",
    value: function setPrimaryUid(e) {
      return this._request.send("auth.setPrimaryUid", {
        uid: e
      });
    }
  }, {
    key: "unlink",
    value: function unlink(e) {
      return this._request.send("auth.unlink", {
        platform: e
      });
    }
  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee23(e) {
        var t, n, s, r, i, o, _yield$this$_request$3, a;
        return _regenerator.default.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                t = e.nickName;
                n = e.gender;
                s = e.avatarUrl;
                r = e.province;
                i = e.country;
                o = e.city;
                _context23.next = 8;
                return this._request.send("auth.updateUserInfo", {
                  nickName: t,
                  gender: n,
                  avatarUrl: s,
                  province: r,
                  country: i,
                  city: o
                });
              case 8:
                _yield$this$_request$3 = _context23.sent;
                a = _yield$this$_request$3.data;
                this.setLocalUserInfo(a);
              case 11:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));
      function update(_x15) {
        return _update.apply(this, arguments);
      }
      return update;
    }()
  }, {
    key: "refresh",
    value: function () {
      var _refresh = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee24() {
        var e;
        return _regenerator.default.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return this._request.oauth.getUserInfo();
              case 2:
                e = _context24.sent;
                return _context24.abrupt("return", (this.setLocalUserInfo(e), e));
              case 4:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));
      function refresh() {
        return _refresh.apply(this, arguments);
      }
      return refresh;
    }()
  }, {
    key: "setUserInfo",
    value: function setUserInfo() {
      var _this11 = this;
      var e = this._cache.keys.userInfoKey,
        t = this._cache.getStore(e);
      ["uid", "loginType", "openid", "wxOpenId", "wxPublicId", "unionId", "qqMiniOpenId", "email", "hasPassword", "customUserId", "nickName", "gender", "avatarUrl"].forEach(function (e) {
        _this11[e] = t[e];
      }), this.location = {
        country: t.country,
        province: t.province,
        city: t.city
      };
    }
  }, {
    key: "setLocalUserInfo",
    value: function setLocalUserInfo(e) {
      var t = this._cache.keys.userInfoKey;
      this._cache.setStore(t, e), this.setUserInfo();
    }
  }]);
  return st;
}();
var rt = /*#__PURE__*/function () {
  function rt(e) {
    (0, _classCallCheck2.default)(this, rt);
    if (!e) throw new te({
      code: "PARAM_ERROR",
      message: "envId is not defined"
    });
    this._cache = Le(e);
    var _this$_cache$keys9 = this._cache.keys,
      t = _this$_cache$keys9.refreshTokenKey,
      n = _this$_cache$keys9.accessTokenKey,
      s = _this$_cache$keys9.accessTokenExpireKey,
      r = this._cache.getStore(t),
      i = this._cache.getStore(n),
      o = this._cache.getStore(s);
    this.credential = {
      refreshToken: r,
      accessToken: i,
      accessTokenExpire: o
    }, this.user = new st(e);
  }
  (0, _createClass2.default)(rt, [{
    key: "isAnonymousAuth",
    get: function get() {
      return this.loginType === Je.ANONYMOUS;
    }
  }, {
    key: "isCustomAuth",
    get: function get() {
      return this.loginType === Je.CUSTOM;
    }
  }, {
    key: "isWeixinAuth",
    get: function get() {
      return this.loginType === Je.WECHAT || this.loginType === Je.WECHAT_OPEN || this.loginType === Je.WECHAT_PUBLIC;
    }
  }, {
    key: "loginType",
    get: function get() {
      return this._cache.getStore(this._cache.keys.loginTypeKey);
    }
  }]);
  return rt;
}();
var it = /*#__PURE__*/function (_nt) {
  (0, _inherits2.default)(it, _nt);
  var _super4 = _createSuper(it);
  function it() {
    (0, _classCallCheck2.default)(this, it);
    return _super4.apply(this, arguments);
  }
  (0, _createClass2.default)(it, [{
    key: "signIn",
    value: function () {
      var _signIn = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee25() {
        var e;
        return _regenerator.default.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                this._cache.updatePersistence("local");
                _context25.next = 3;
                return this._request.oauth.getAccessToken();
              case 3:
                Fe(je);
                Fe(Be, {
                  env: this.config.env,
                  loginType: Je.ANONYMOUS,
                  persistence: "local"
                });
                e = new rt(this.config.env);
                _context25.next = 8;
                return e.user.refresh();
              case 8:
                return _context25.abrupt("return", e);
              case 9:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));
      function signIn() {
        return _signIn.apply(this, arguments);
      }
      return signIn;
    }()
  }, {
    key: "linkAndRetrieveDataWithTicket",
    value: function () {
      var _linkAndRetrieveDataWithTicket = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee26(e) {
        var _this$_cache$keys10, t, n, s, r, i;
        return _regenerator.default.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _this$_cache$keys10 = this._cache.keys;
                t = _this$_cache$keys10.anonymousUuidKey;
                n = _this$_cache$keys10.refreshTokenKey;
                s = this._cache.getStore(t);
                r = this._cache.getStore(n);
                _context26.next = 7;
                return this._request.send("auth.linkAndRetrieveDataWithTicket", {
                  anonymous_uuid: s,
                  refresh_token: r,
                  ticket: e
                });
              case 7:
                i = _context26.sent;
                if (!i.refresh_token) {
                  _context26.next = 16;
                  break;
                }
                this._clearAnonymousUUID();
                this.setRefreshToken(i.refresh_token);
                _context26.next = 13;
                return this._request.refreshAccessToken();
              case 13:
                Fe(We, {
                  env: this.config.env
                });
                Fe(Be, {
                  loginType: Je.CUSTOM,
                  persistence: "local"
                });
                return _context26.abrupt("return", {
                  credential: {
                    refreshToken: i.refresh_token
                  }
                });
              case 16:
                throw new te({
                  message: "匿名转化失败"
                });
              case 17:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));
      function linkAndRetrieveDataWithTicket(_x16) {
        return _linkAndRetrieveDataWithTicket.apply(this, arguments);
      }
      return linkAndRetrieveDataWithTicket;
    }()
  }, {
    key: "_setAnonymousUUID",
    value: function _setAnonymousUUID(e) {
      var _this$_cache$keys11 = this._cache.keys,
        t = _this$_cache$keys11.anonymousUuidKey,
        n = _this$_cache$keys11.loginTypeKey;
      this._cache.removeStore(t), this._cache.setStore(t, e), this._cache.setStore(n, Je.ANONYMOUS);
    }
  }, {
    key: "_clearAnonymousUUID",
    value: function _clearAnonymousUUID() {
      this._cache.removeStore(this._cache.keys.anonymousUuidKey);
    }
  }]);
  return it;
}(nt);
var ot = /*#__PURE__*/function (_nt2) {
  (0, _inherits2.default)(ot, _nt2);
  var _super5 = _createSuper(ot);
  function ot() {
    (0, _classCallCheck2.default)(this, ot);
    return _super5.apply(this, arguments);
  }
  (0, _createClass2.default)(ot, [{
    key: "signIn",
    value: function () {
      var _signIn2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee27(e) {
        var t, n;
        return _regenerator.default.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context27.next = 2;
                  break;
                }
                throw new te({
                  code: "PARAM_ERROR",
                  message: "ticket must be a string"
                });
              case 2:
                t = this._cache.keys.refreshTokenKey;
                _context27.next = 5;
                return this._request.send("auth.signInWithTicket", {
                  ticket: e,
                  refresh_token: this._cache.getStore(t) || ""
                });
              case 5:
                n = _context27.sent;
                if (!n.refresh_token) {
                  _context27.next = 15;
                  break;
                }
                this.setRefreshToken(n.refresh_token);
                _context27.next = 10;
                return this._request.refreshAccessToken();
              case 10:
                Fe(je);
                Fe(Be, {
                  env: this.config.env,
                  loginType: Je.CUSTOM,
                  persistence: this.config.persistence
                });
                _context27.next = 14;
                return this.refreshUserInfo();
              case 14:
                return _context27.abrupt("return", new rt(this.config.env));
              case 15:
                throw new te({
                  message: "自定义登录失败"
                });
              case 16:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));
      function signIn(_x17) {
        return _signIn2.apply(this, arguments);
      }
      return signIn;
    }()
  }]);
  return ot;
}(nt);
var at = /*#__PURE__*/function (_nt3) {
  (0, _inherits2.default)(at, _nt3);
  var _super6 = _createSuper(at);
  function at() {
    (0, _classCallCheck2.default)(this, at);
    return _super6.apply(this, arguments);
  }
  (0, _createClass2.default)(at, [{
    key: "signIn",
    value: function () {
      var _signIn3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee28(e, t) {
        var n, s, r, i, o;
        return _regenerator.default.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context28.next = 2;
                  break;
                }
                throw new te({
                  code: "PARAM_ERROR",
                  message: "email must be a string"
                });
              case 2:
                n = this._cache.keys.refreshTokenKey;
                _context28.next = 5;
                return this._request.send("auth.signIn", {
                  loginType: "EMAIL",
                  email: e,
                  password: t,
                  refresh_token: this._cache.getStore(n) || ""
                });
              case 5:
                s = _context28.sent;
                r = s.refresh_token;
                i = s.access_token;
                o = s.access_token_expire;
                if (!r) {
                  _context28.next = 22;
                  break;
                }
                this.setRefreshToken(r);
                if (!(i && o)) {
                  _context28.next = 15;
                  break;
                }
                this.setAccessToken(i, o);
                _context28.next = 17;
                break;
              case 15:
                _context28.next = 17;
                return this._request.refreshAccessToken();
              case 17:
                _context28.next = 19;
                return this.refreshUserInfo();
              case 19:
                Fe(je);
                Fe(Be, {
                  env: this.config.env,
                  loginType: Je.EMAIL,
                  persistence: this.config.persistence
                });
                return _context28.abrupt("return", new rt(this.config.env));
              case 22:
                throw s.code ? new te({
                  code: s.code,
                  message: "\u90AE\u7BB1\u767B\u5F55\u5931\u8D25: ".concat(s.message)
                }) : new te({
                  message: "邮箱登录失败"
                });
              case 23:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));
      function signIn(_x18, _x19) {
        return _signIn3.apply(this, arguments);
      }
      return signIn;
    }()
  }, {
    key: "activate",
    value: function () {
      var _activate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee29(e) {
        return _regenerator.default.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                return _context29.abrupt("return", this._request.send("auth.activateEndUserMail", {
                  token: e
                }));
              case 1:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));
      function activate(_x20) {
        return _activate.apply(this, arguments);
      }
      return activate;
    }()
  }, {
    key: "resetPasswordWithToken",
    value: function () {
      var _resetPasswordWithToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee30(e, t) {
        return _regenerator.default.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                return _context30.abrupt("return", this._request.send("auth.resetPasswordWithToken", {
                  token: e,
                  newPassword: t
                }));
              case 1:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));
      function resetPasswordWithToken(_x21, _x22) {
        return _resetPasswordWithToken.apply(this, arguments);
      }
      return resetPasswordWithToken;
    }()
  }]);
  return at;
}(nt);
var ct = /*#__PURE__*/function (_nt4) {
  (0, _inherits2.default)(ct, _nt4);
  var _super7 = _createSuper(ct);
  function ct() {
    (0, _classCallCheck2.default)(this, ct);
    return _super7.apply(this, arguments);
  }
  (0, _createClass2.default)(ct, [{
    key: "signIn",
    value: function () {
      var _signIn4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee31(e, t) {
        var n, s, r, i, o;
        return _regenerator.default.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context31.next = 2;
                  break;
                }
                throw new te({
                  code: "PARAM_ERROR",
                  message: "username must be a string"
                });
              case 2:
                "string" != typeof t && (t = "", console.warn("password is empty"));
                n = this._cache.keys.refreshTokenKey;
                _context31.next = 6;
                return this._request.send("auth.signIn", {
                  loginType: Je.USERNAME,
                  username: e,
                  password: t,
                  refresh_token: this._cache.getStore(n) || ""
                });
              case 6:
                s = _context31.sent;
                r = s.refresh_token;
                i = s.access_token_expire;
                o = s.access_token;
                if (!r) {
                  _context31.next = 23;
                  break;
                }
                this.setRefreshToken(r);
                if (!(o && i)) {
                  _context31.next = 16;
                  break;
                }
                this.setAccessToken(o, i);
                _context31.next = 18;
                break;
              case 16:
                _context31.next = 18;
                return this._request.refreshAccessToken();
              case 18:
                _context31.next = 20;
                return this.refreshUserInfo();
              case 20:
                Fe(je);
                Fe(Be, {
                  env: this.config.env,
                  loginType: Je.USERNAME,
                  persistence: this.config.persistence
                });
                return _context31.abrupt("return", new rt(this.config.env));
              case 23:
                throw s.code ? new te({
                  code: s.code,
                  message: "\u7528\u6237\u540D\u5BC6\u7801\u767B\u5F55\u5931\u8D25: ".concat(s.message)
                }) : new te({
                  message: "用户名密码登录失败"
                });
              case 24:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));
      function signIn(_x23, _x24) {
        return _signIn4.apply(this, arguments);
      }
      return signIn;
    }()
  }]);
  return ct;
}(nt);
var ut = /*#__PURE__*/function () {
  function ut(e) {
    (0, _classCallCheck2.default)(this, ut);
    this.config = e, this._cache = Le(e.env), this._request = tt(e.env), this._onAnonymousConverted = this._onAnonymousConverted.bind(this), this._onLoginTypeChanged = this._onLoginTypeChanged.bind(this), qe(Be, this._onLoginTypeChanged);
  }
  (0, _createClass2.default)(ut, [{
    key: "currentUser",
    get: function get() {
      var e = this.hasLoginState();
      return e && e.user || null;
    }
  }, {
    key: "loginType",
    get: function get() {
      return this._cache.getStore(this._cache.keys.loginTypeKey);
    }
  }, {
    key: "anonymousAuthProvider",
    value: function anonymousAuthProvider() {
      return new it(this.config);
    }
  }, {
    key: "customAuthProvider",
    value: function customAuthProvider() {
      return new ot(this.config);
    }
  }, {
    key: "emailAuthProvider",
    value: function emailAuthProvider() {
      return new at(this.config);
    }
  }, {
    key: "usernameAuthProvider",
    value: function usernameAuthProvider() {
      return new ct(this.config);
    }
  }, {
    key: "signInAnonymously",
    value: function () {
      var _signInAnonymously = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee32() {
        return _regenerator.default.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                return _context32.abrupt("return", new it(this.config).signIn());
              case 1:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));
      function signInAnonymously() {
        return _signInAnonymously.apply(this, arguments);
      }
      return signInAnonymously;
    }()
  }, {
    key: "signInWithEmailAndPassword",
    value: function () {
      var _signInWithEmailAndPassword = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee33(e, t) {
        return _regenerator.default.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                return _context33.abrupt("return", new at(this.config).signIn(e, t));
              case 1:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));
      function signInWithEmailAndPassword(_x25, _x26) {
        return _signInWithEmailAndPassword.apply(this, arguments);
      }
      return signInWithEmailAndPassword;
    }()
  }, {
    key: "signInWithUsernameAndPassword",
    value: function signInWithUsernameAndPassword(e, t) {
      return new ct(this.config).signIn(e, t);
    }
  }, {
    key: "linkAndRetrieveDataWithTicket",
    value: function () {
      var _linkAndRetrieveDataWithTicket2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee34(e) {
        return _regenerator.default.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                this._anonymousAuthProvider || (this._anonymousAuthProvider = new it(this.config)), qe(We, this._onAnonymousConverted);
                _context34.next = 3;
                return this._anonymousAuthProvider.linkAndRetrieveDataWithTicket(e);
              case 3:
                return _context34.abrupt("return", _context34.sent);
              case 4:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));
      function linkAndRetrieveDataWithTicket(_x27) {
        return _linkAndRetrieveDataWithTicket2.apply(this, arguments);
      }
      return linkAndRetrieveDataWithTicket;
    }()
  }, {
    key: "signOut",
    value: function () {
      var _signOut = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee35() {
        var _this$_cache$keys12, e, t, n, s, r;
        return _regenerator.default.wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                if (!(this.loginType === Je.ANONYMOUS)) {
                  _context35.next = 2;
                  break;
                }
                throw new te({
                  message: "匿名用户不支持登出操作"
                });
              case 2:
                _this$_cache$keys12 = this._cache.keys, e = _this$_cache$keys12.refreshTokenKey, t = _this$_cache$keys12.accessTokenKey, n = _this$_cache$keys12.accessTokenExpireKey, s = this._cache.getStore(e);
                if (s) {
                  _context35.next = 5;
                  break;
                }
                return _context35.abrupt("return");
              case 5:
                _context35.next = 7;
                return this._request.send("auth.logout", {
                  refresh_token: s
                });
              case 7:
                r = _context35.sent;
                return _context35.abrupt("return", (this._cache.removeStore(e), this._cache.removeStore(t), this._cache.removeStore(n), Fe(je), Fe(Be, {
                  env: this.config.env,
                  loginType: Je.NULL,
                  persistence: this.config.persistence
                }), r));
              case 9:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35, this);
      }));
      function signOut() {
        return _signOut.apply(this, arguments);
      }
      return signOut;
    }()
  }, {
    key: "signUpWithEmailAndPassword",
    value: function () {
      var _signUpWithEmailAndPassword = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee36(e, t) {
        return _regenerator.default.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                return _context36.abrupt("return", this._request.send("auth.signUpWithEmailAndPassword", {
                  email: e,
                  password: t
                }));
              case 1:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36, this);
      }));
      function signUpWithEmailAndPassword(_x28, _x29) {
        return _signUpWithEmailAndPassword.apply(this, arguments);
      }
      return signUpWithEmailAndPassword;
    }()
  }, {
    key: "sendPasswordResetEmail",
    value: function () {
      var _sendPasswordResetEmail = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee37(e) {
        return _regenerator.default.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                return _context37.abrupt("return", this._request.send("auth.sendPasswordResetEmail", {
                  email: e
                }));
              case 1:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this);
      }));
      function sendPasswordResetEmail(_x30) {
        return _sendPasswordResetEmail.apply(this, arguments);
      }
      return sendPasswordResetEmail;
    }()
  }, {
    key: "onLoginStateChanged",
    value: function onLoginStateChanged(e) {
      var _this12 = this;
      qe(je, function () {
        var t = _this12.hasLoginState();
        e.call(_this12, t);
      });
      var t = this.hasLoginState();
      e.call(this, t);
    }
  }, {
    key: "onLoginStateExpired",
    value: function onLoginStateExpired(e) {
      qe($e, e.bind(this));
    }
  }, {
    key: "onAccessTokenRefreshed",
    value: function onAccessTokenRefreshed(e) {
      qe(He, e.bind(this));
    }
  }, {
    key: "onAnonymousConverted",
    value: function onAnonymousConverted(e) {
      qe(We, e.bind(this));
    }
  }, {
    key: "onLoginTypeChanged",
    value: function onLoginTypeChanged(e) {
      var _this13 = this;
      qe(Be, function () {
        var t = _this13.hasLoginState();
        e.call(_this13, t);
      });
    }
  }, {
    key: "getAccessToken",
    value: function () {
      var _getAccessToken3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee38() {
        return _regenerator.default.wrap(function _callee38$(_context38) {
          while (1) {
            switch (_context38.prev = _context38.next) {
              case 0:
                _context38.next = 2;
                return this._request.getAccessToken();
              case 2:
                _context38.t0 = _context38.sent.accessToken;
                _context38.t1 = this.config.env;
                return _context38.abrupt("return", {
                  accessToken: _context38.t0,
                  env: _context38.t1
                });
              case 5:
              case "end":
                return _context38.stop();
            }
          }
        }, _callee38, this);
      }));
      function getAccessToken() {
        return _getAccessToken3.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "hasLoginState",
    value: function hasLoginState() {
      var _this$_cache$keys13 = this._cache.keys,
        e = _this$_cache$keys13.accessTokenKey,
        t = _this$_cache$keys13.accessTokenExpireKey,
        n = this._cache.getStore(e),
        s = this._cache.getStore(t);
      return this._request.oauth.isAccessTokenExpired(n, s) ? null : new rt(this.config.env);
    }
  }, {
    key: "isUsernameRegistered",
    value: function () {
      var _isUsernameRegistered = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee39(e) {
        var _yield$this$_request$4, t;
        return _regenerator.default.wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context39.next = 2;
                  break;
                }
                throw new te({
                  code: "PARAM_ERROR",
                  message: "username must be a string"
                });
              case 2:
                _context39.next = 4;
                return this._request.send("auth.isUsernameRegistered", {
                  username: e
                });
              case 4:
                _yield$this$_request$4 = _context39.sent;
                t = _yield$this$_request$4.data;
                return _context39.abrupt("return", t && t.isRegistered);
              case 7:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39, this);
      }));
      function isUsernameRegistered(_x31) {
        return _isUsernameRegistered.apply(this, arguments);
      }
      return isUsernameRegistered;
    }()
  }, {
    key: "getLoginState",
    value: function getLoginState() {
      return Promise.resolve(this.hasLoginState());
    }
  }, {
    key: "signInWithTicket",
    value: function () {
      var _signInWithTicket = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee40(e) {
        return _regenerator.default.wrap(function _callee40$(_context40) {
          while (1) {
            switch (_context40.prev = _context40.next) {
              case 0:
                return _context40.abrupt("return", new ot(this.config).signIn(e));
              case 1:
              case "end":
                return _context40.stop();
            }
          }
        }, _callee40, this);
      }));
      function signInWithTicket(_x32) {
        return _signInWithTicket.apply(this, arguments);
      }
      return signInWithTicket;
    }()
  }, {
    key: "shouldRefreshAccessToken",
    value: function shouldRefreshAccessToken(e) {
      this._request._shouldRefreshAccessTokenHook = e.bind(this);
    }
  }, {
    key: "getUserInfo",
    value: function getUserInfo() {
      return this._request.send("auth.getUserInfo", {}).then(function (e) {
        return e.code ? e : _objectSpread(_objectSpread({}, e.data), {}, {
          requestId: e.seqId
        });
      });
    }
  }, {
    key: "getAuthHeader",
    value: function getAuthHeader() {
      var _this$_cache$keys14 = this._cache.keys,
        e = _this$_cache$keys14.refreshTokenKey,
        t = _this$_cache$keys14.accessTokenKey,
        n = this._cache.getStore(e);
      return {
        "x-cloudbase-credentials": this._cache.getStore(t) + "/@@/" + n
      };
    }
  }, {
    key: "_onAnonymousConverted",
    value: function _onAnonymousConverted(e) {
      var t = e.data.env;
      t === this.config.env && this._cache.updatePersistence(this.config.persistence);
    }
  }, {
    key: "_onLoginTypeChanged",
    value: function _onLoginTypeChanged(e) {
      var _e$data = e.data,
        t = _e$data.loginType,
        n = _e$data.persistence,
        s = _e$data.env;
      s === this.config.env && (this._cache.updatePersistence(n), this._cache.setStore(this._cache.keys.loginTypeKey, t));
    }
  }]);
  return ut;
}();
var ht = function ht(e, t) {
    t = t || ve();
    var n = tt(this.config.env),
      s = e.cloudPath,
      r = e.filePath,
      i = e.onUploadProgress,
      _e$fileType = e.fileType,
      o = _e$fileType === void 0 ? "image" : _e$fileType;
    return n.send("storage.getUploadMetadata", {
      path: s
    }).then(function (e) {
      var _e$data2 = e.data,
        a = _e$data2.url,
        c = _e$data2.authorization,
        u = _e$data2.token,
        h = _e$data2.fileId,
        l = _e$data2.cosFileId,
        d = e.requestId,
        p = {
          key: s,
          signature: c,
          "x-cos-meta-fileid": l,
          success_action_status: "201",
          "x-cos-security-token": u
        };
      n.upload({
        url: a,
        data: p,
        file: r,
        name: s,
        fileType: o,
        onUploadProgress: i
      }).then(function (e) {
        201 === e.statusCode ? t(null, {
          fileID: h,
          requestId: d
        }) : t(new te({
          code: "STORAGE_REQUEST_FAIL",
          message: "STORAGE_REQUEST_FAIL: ".concat(e.data)
        }));
      }).catch(function (e) {
        t(e);
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  lt = function lt(e, t) {
    t = t || ve();
    var n = tt(this.config.env),
      s = e.cloudPath;
    return n.send("storage.getUploadMetadata", {
      path: s
    }).then(function (e) {
      t(null, e);
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  dt = function dt(_ref10, t) {
    var e = _ref10.fileList;
    if (t = t || ve(), !e || !Array.isArray(e)) return {
      code: "INVALID_PARAM",
      message: "fileList必须是非空的数组"
    };
    var _iterator3 = _createForOfIteratorHelper(e),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _t9 = _step3.value;
        if (!_t9 || "string" != typeof _t9) return {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是非空的字符串"
        };
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    var n = {
      fileid_list: e
    };
    return tt(this.config.env).send("storage.batchDeleteFile", n).then(function (e) {
      e.code ? t(null, e) : t(null, {
        fileList: e.data.delete_list,
        requestId: e.requestId
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  pt = function pt(_ref11, t) {
    var e = _ref11.fileList;
    t = t || ve(), e && Array.isArray(e) || t(null, {
      code: "INVALID_PARAM",
      message: "fileList必须是非空的数组"
    });
    var n = [];
    var _iterator4 = _createForOfIteratorHelper(e),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _s11 = _step4.value;
        "object" == (0, _typeof2.default)(_s11) ? (_s11.hasOwnProperty("fileID") && _s11.hasOwnProperty("maxAge") || t(null, {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是包含fileID和maxAge的对象"
        }), n.push({
          fileid: _s11.fileID,
          max_age: _s11.maxAge
        })) : "string" == typeof _s11 ? n.push({
          fileid: _s11
        }) : t(null, {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是字符串"
        });
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    var s = {
      file_list: n
    };
    return tt(this.config.env).send("storage.batchGetDownloadUrl", s).then(function (e) {
      e.code ? t(null, e) : t(null, {
        fileList: e.data.download_list,
        requestId: e.requestId
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  ft = /*#__PURE__*/function () {
    var _ref13 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee41(_ref12, t) {
      var e, n, s, r;
      return _regenerator.default.wrap(function _callee41$(_context41) {
        while (1) {
          switch (_context41.prev = _context41.next) {
            case 0:
              e = _ref12.fileID;
              _context41.next = 3;
              return pt.call(this, {
                fileList: [{
                  fileID: e,
                  maxAge: 600
                }]
              });
            case 3:
              n = _context41.sent.fileList[0];
              if (!("SUCCESS" !== n.code)) {
                _context41.next = 6;
                break;
              }
              return _context41.abrupt("return", t ? t(n) : new Promise(function (e) {
                e(n);
              }));
            case 6:
              s = tt(this.config.env);
              r = n.download_url;
              if (!(r = encodeURI(r), !t)) {
                _context41.next = 10;
                break;
              }
              return _context41.abrupt("return", s.download({
                url: r
              }));
            case 10:
              _context41.t0 = t;
              _context41.next = 13;
              return s.download({
                url: r
              });
            case 13:
              _context41.t1 = _context41.sent;
              (0, _context41.t0)(_context41.t1);
            case 15:
            case "end":
              return _context41.stop();
          }
        }
      }, _callee41, this);
    }));
    return function ft(_x33, _x34) {
      return _ref13.apply(this, arguments);
    };
  }(),
  gt = function gt(_ref14, o) {
    var e = _ref14.name,
      t = _ref14.data,
      n = _ref14.query,
      s = _ref14.parse,
      r = _ref14.search,
      i = _ref14.timeout;
    var a = o || ve();
    var c;
    try {
      c = t ? JSON.stringify(t) : "";
    } catch (e) {
      return Promise.reject(e);
    }
    if (!e) return Promise.reject(new te({
      code: "PARAM_ERROR",
      message: "函数名不能为空"
    }));
    var u = {
      inQuery: n,
      parse: s,
      search: r,
      function_name: e,
      request_data: c
    };
    return tt(this.config.env).send("functions.invokeFunction", u, {
      timeout: i
    }).then(function (e) {
      if (e.code) a(null, e);else {
        var _t10 = e.data.response_data;
        if (s) a(null, {
          result: _t10,
          requestId: e.requestId
        });else try {
          _t10 = JSON.parse(e.data.response_data), a(null, {
            result: _t10,
            requestId: e.requestId
          });
        } catch (e) {
          a(new te({
            message: "response data must be json"
          }));
        }
      }
      return a.promise;
    }).catch(function (e) {
      a(e);
    }), a.promise;
  },
  mt = {
    timeout: 15e3,
    persistence: "session"
  },
  yt = 6e5,
  _t = {};
var wt = /*#__PURE__*/function () {
  function wt(e) {
    (0, _classCallCheck2.default)(this, wt);
    this.config = e || this.config, this.authObj = void 0;
  }
  (0, _createClass2.default)(wt, [{
    key: "init",
    value: function init(e) {
      switch (Pe.adapter || (this.requestClient = new Pe.adapter.reqClass({
        timeout: e.timeout || 5e3,
        timeoutMsg: "\u8BF7\u6C42\u5728".concat((e.timeout || 5e3) / 1e3, "s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD")
      })), this.config = _objectSpread(_objectSpread({}, mt), e), !0) {
        case this.config.timeout > yt:
          console.warn("timeout大于可配置上限[10分钟]，已重置为上限数值"), this.config.timeout = yt;
          break;
        case this.config.timeout < 100:
          console.warn("timeout小于可配置下限[100ms]，已重置为下限数值"), this.config.timeout = 100;
      }
      return new wt(this.config);
    }
  }, {
    key: "auth",
    value: function auth() {
      var _ref15 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref15.persistence;
      if (this.authObj) return this.authObj;
      var t = e || Pe.adapter.primaryStorage || mt.persistence;
      var n;
      return t !== this.config.persistence && (this.config.persistence = t), function (e) {
        var t = e.env;
        Ne[t] = new xe(e), Re[t] = new xe(_objectSpread(_objectSpread({}, e), {}, {
          persistence: "local"
        }));
      }(this.config), n = this.config, et[n.env] = new Ze(n), this.authObj = new ut(this.config), this.authObj;
    }
  }, {
    key: "on",
    value: function on(e, t) {
      return qe.apply(this, [e, t]);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      return Ke.apply(this, [e, t]);
    }
  }, {
    key: "callFunction",
    value: function callFunction(e, t) {
      return gt.apply(this, [e, t]);
    }
  }, {
    key: "deleteFile",
    value: function deleteFile(e, t) {
      return dt.apply(this, [e, t]);
    }
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL(e, t) {
      return pt.apply(this, [e, t]);
    }
  }, {
    key: "downloadFile",
    value: function downloadFile(e, t) {
      return ft.apply(this, [e, t]);
    }
  }, {
    key: "uploadFile",
    value: function uploadFile(e, t) {
      return ht.apply(this, [e, t]);
    }
  }, {
    key: "getUploadMetadata",
    value: function getUploadMetadata(e, t) {
      return lt.apply(this, [e, t]);
    }
  }, {
    key: "registerExtension",
    value: function registerExtension(e) {
      _t[e.name] = e;
    }
  }, {
    key: "invokeExtension",
    value: function () {
      var _invokeExtension = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee42(e, t) {
        var n;
        return _regenerator.default.wrap(function _callee42$(_context42) {
          while (1) {
            switch (_context42.prev = _context42.next) {
              case 0:
                n = _t[e];
                if (n) {
                  _context42.next = 3;
                  break;
                }
                throw new te({
                  message: "\u6269\u5C55".concat(e, " \u5FC5\u987B\u5148\u6CE8\u518C")
                });
              case 3:
                _context42.next = 5;
                return n.invoke(t, this);
              case 5:
                return _context42.abrupt("return", _context42.sent);
              case 6:
              case "end":
                return _context42.stop();
            }
          }
        }, _callee42, this);
      }));
      function invokeExtension(_x35, _x36) {
        return _invokeExtension.apply(this, arguments);
      }
      return invokeExtension;
    }()
  }, {
    key: "useAdapters",
    value: function useAdapters(e) {
      var _ref16 = ke(e) || {},
        t = _ref16.adapter,
        n = _ref16.runtime;
      t && (Pe.adapter = t), n && (Pe.runtime = n);
    }
  }]);
  return wt;
}();
var vt = new wt();
function It(e, t, n) {
  void 0 === n && (n = {});
  var s = /\?/.test(t),
    r = "";
  for (var i in n) {
    "" === r ? !s && (t += "?") : r += "&", r += i + "=" + encodeURIComponent(n[i]);
  }
  return /^http(s)?:\/\//.test(t += r) ? t : "" + e + t;
}
var St = /*#__PURE__*/function () {
  function St() {
    (0, _classCallCheck2.default)(this, St);
  }
  (0, _createClass2.default)(St, [{
    key: "get",
    value: function get(e) {
      var t = e.url,
        n = e.data,
        s = e.headers,
        r = e.timeout;
      return new Promise(function (e, i) {
        ne.request({
          url: It("https:", t),
          data: n,
          method: "GET",
          header: s,
          timeout: r,
          success: function success(t) {
            e(t);
          },
          fail: function fail(e) {
            i(e);
          }
        });
      });
    }
  }, {
    key: "post",
    value: function post(e) {
      var t = e.url,
        n = e.data,
        s = e.headers,
        r = e.timeout;
      return new Promise(function (e, i) {
        ne.request({
          url: It("https:", t),
          data: n,
          method: "POST",
          header: s,
          timeout: r,
          success: function success(t) {
            e(t);
          },
          fail: function fail(e) {
            i(e);
          }
        });
      });
    }
  }, {
    key: "upload",
    value: function upload(e) {
      return new Promise(function (t, n) {
        var s = e.url,
          r = e.file,
          i = e.data,
          o = e.headers,
          a = e.fileType,
          c = ne.uploadFile({
            url: It("https:", s),
            name: "file",
            formData: Object.assign({}, i),
            filePath: r,
            fileType: a,
            header: o,
            success: function success(e) {
              var n = {
                statusCode: e.statusCode,
                data: e.data || {}
              };
              200 === e.statusCode && i.success_action_status && (n.statusCode = parseInt(i.success_action_status, 10)), t(n);
            },
            fail: function fail(e) {
              n(new Error(e.errMsg || "uploadFile:fail"));
            }
          });
        "function" == typeof e.onUploadProgress && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (t) {
          e.onUploadProgress({
            loaded: t.totalBytesSent,
            total: t.totalBytesExpectedToSend
          });
        });
      });
    }
  }]);
  return St;
}();
var Tt = {
  setItem: function setItem(e, t) {
    ne.setStorageSync(e, t);
  },
  getItem: function getItem(e) {
    return ne.getStorageSync(e);
  },
  removeItem: function removeItem(e) {
    ne.removeStorageSync(e);
  },
  clear: function clear() {
    ne.clearStorageSync();
  }
};
var bt = {
  genAdapter: function genAdapter() {
    return {
      root: {},
      reqClass: St,
      localStorage: Tt,
      primaryStorage: "local"
    };
  },
  isMatch: function isMatch() {
    return !0;
  },
  runtime: "uni_app"
};
vt.useAdapters(bt);
var Et = vt,
  kt = Et.init;
Et.init = function (e) {
  e.env = e.spaceId;
  var t = kt.call(this, e);
  t.config.provider = "tencent", t.config.spaceId = e.spaceId;
  var n = t.auth;
  return t.auth = function (e) {
    var t = n.call(this, e);
    return ["linkAndRetrieveDataWithTicket", "signInAnonymously", "signOut", "getAccessToken", "getLoginState", "signInWithTicket", "getUserInfo"].forEach(function (e) {
      var n;
      t[e] = (n = t[e], function (e) {
        e = e || {};
        var _ee = ee(e),
          t = _ee.success,
          s = _ee.fail,
          r = _ee.complete;
        if (!(t || s || r)) return n.call(this, e);
        n.call(this, e).then(function (e) {
          t && t(e), r && r(e);
        }, function (e) {
          s && s(e), r && r(e);
        });
      }).bind(t);
    }), t;
  }, t.customAuth = t.auth, t;
};
var Pt = Et;
function Ct(_x37, _x38) {
  return _Ct.apply(this, arguments);
}
function _Ct() {
  _Ct = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee68(e, t) {
    var n, _e31, s;
    return _regenerator.default.wrap(function _callee68$(_context68) {
      while (1) {
        switch (_context68.prev = _context68.next) {
          case 0:
            n = "http://".concat(e, ":").concat(t, "/system/ping");
            _context68.prev = 1;
            _context68.next = 4;
            return s = {
              url: n,
              timeout: 500
            }, new Promise(function (e, t) {
              ne.request(_objectSpread(_objectSpread({}, s), {}, {
                success: function success(t) {
                  e(t);
                },
                fail: function fail(e) {
                  t(e);
                }
              }));
            });
          case 4:
            _e31 = _context68.sent;
            return _context68.abrupt("return", !(!_e31.data || 0 !== _e31.data.code));
          case 8:
            _context68.prev = 8;
            _context68.t0 = _context68["catch"](1);
            return _context68.abrupt("return", !1);
          case 11:
          case "end":
            return _context68.stop();
        }
      }
    }, _callee68, null, [[1, 8]]);
  }));
  return _Ct.apply(this, arguments);
}
function At(_x39, _x40) {
  return _At.apply(this, arguments);
}
function _At() {
  _At = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee69(e, t) {
    var n, s, _r10;
    return _regenerator.default.wrap(function _callee69$(_context69) {
      while (1) {
        switch (_context69.prev = _context69.next) {
          case 0:
            s = 0;
          case 1:
            if (!(s < e.length)) {
              _context69.next = 11;
              break;
            }
            _r10 = e[s];
            _context69.next = 5;
            return Ct(_r10, t);
          case 5:
            if (!_context69.sent) {
              _context69.next = 8;
              break;
            }
            n = _r10;
            return _context69.abrupt("break", 11);
          case 8:
            s++;
            _context69.next = 1;
            break;
          case 11:
            return _context69.abrupt("return", {
              address: n,
              port: t
            });
          case 12:
          case "end":
            return _context69.stop();
        }
      }
    }, _callee69);
  }));
  return _At.apply(this, arguments);
}
var Ot = {
  "serverless.file.resource.generateProximalSign": "storage/generate-proximal-sign",
  "serverless.file.resource.report": "storage/report",
  "serverless.file.resource.delete": "storage/delete",
  "serverless.file.resource.getTempFileURL": "storage/get-temp-file-url"
};
var xt = /*#__PURE__*/function () {
  function xt(e) {
    (0, _classCallCheck2.default)(this, xt);
    if (["spaceId", "clientSecret"].forEach(function (t) {
      if (!Object.prototype.hasOwnProperty.call(e, t)) throw new Error("".concat(t, " required"));
    }), !e.endpoint) throw new Error("集群空间未配置ApiEndpoint，配置后需要重新关联服务空间后生效");
    this.config = Object.assign({}, e), this.config.provider = "dcloud", this.config.requestUrl = this.config.endpoint + "/client", this.config.envType = this.config.envType || "public", this.adapter = ne;
  }
  (0, _createClass2.default)(xt, [{
    key: "request",
    value: function () {
      var _request4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee43(e) {
        var _this14 = this;
        var t,
          n,
          _args43 = arguments;
        return _regenerator.default.wrap(function _callee43$(_context43) {
          while (1) {
            switch (_context43.prev = _context43.next) {
              case 0:
                t = _args43.length > 1 && _args43[1] !== undefined ? _args43[1] : !0;
                n = b && t;
                if (!n) {
                  _context43.next = 8;
                  break;
                }
                _context43.next = 5;
                return this.setupLocalRequest(e);
              case 5:
                _context43.t0 = _context43.sent;
                _context43.next = 9;
                break;
              case 8:
                _context43.t0 = this.setupRequest(e);
              case 9:
                e = _context43.t0;
                return _context43.abrupt("return", Promise.resolve().then(function () {
                  return n ? _this14.requestLocal(e) : le.wrappedRequest(e, _this14.adapter.request);
                }));
              case 11:
              case "end":
                return _context43.stop();
            }
          }
        }, _callee43, this);
      }));
      function request(_x41) {
        return _request4.apply(this, arguments);
      }
      return request;
    }()
  }, {
    key: "requestLocal",
    value: function requestLocal(e) {
      var _this15 = this;
      return new Promise(function (t, n) {
        _this15.adapter.request(Object.assign(e, {
          complete: function complete(e) {
            if (e || (e = {}), !e.statusCode || e.statusCode >= 400) {
              var _t11 = e.data && e.data.code || "SYS_ERR",
                _s12 = e.data && e.data.message || "request:fail";
              return n(new te({
                code: _t11,
                message: _s12
              }));
            }
            t({
              success: !0,
              result: e.data
            });
          }
        }));
      });
    }
  }, {
    key: "setupRequest",
    value: function setupRequest(e) {
      var t = Object.assign({}, e, {
          spaceId: this.config.spaceId,
          timestamp: Date.now()
        }),
        n = {
          "Content-Type": "application/json"
        };
      n["x-serverless-sign"] = le.sign(t, this.config.clientSecret);
      var s = he();
      n["x-client-info"] = encodeURIComponent(JSON.stringify(s));
      var _se = se(),
        r = _se.token;
      return n["x-client-token"] = r, {
        url: this.config.requestUrl,
        method: "POST",
        data: t,
        dataType: "json",
        header: JSON.parse(JSON.stringify(n))
      };
    }
  }, {
    key: "setupLocalRequest",
    value: function () {
      var _setupLocalRequest = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee44(e) {
        var t, _se2, n, s, _ref17, r, i, _yield$At, o;
        return _regenerator.default.wrap(function _callee44$(_context44) {
          while (1) {
            switch (_context44.prev = _context44.next) {
              case 0:
                t = he();
                _se2 = se();
                n = _se2.token;
                s = Object.assign({}, e, {
                  spaceId: this.config.spaceId,
                  timestamp: Date.now(),
                  clientInfo: t,
                  token: n
                });
                _ref17 = this.__dev__ && this.__dev__.debugInfo || {};
                r = _ref17.address;
                i = _ref17.servePort;
                _context44.next = 9;
                return At(r, i);
              case 9:
                _yield$At = _context44.sent;
                o = _yield$At.address;
                return _context44.abrupt("return", {
                  url: "http://".concat(o, ":").concat(i, "/").concat(Ot[e.method]),
                  method: "POST",
                  data: s,
                  dataType: "json",
                  header: JSON.parse(JSON.stringify({
                    "Content-Type": "application/json"
                  }))
                });
              case 12:
              case "end":
                return _context44.stop();
            }
          }
        }, _callee44, this);
      }));
      function setupLocalRequest(_x42) {
        return _setupLocalRequest.apply(this, arguments);
      }
      return setupLocalRequest;
    }()
  }, {
    key: "callFunction",
    value: function callFunction(e) {
      var t = {
        method: "serverless.function.runtime.invoke",
        params: JSON.stringify({
          functionTarget: e.name,
          functionArgs: e.data || {}
        })
      };
      return this.request(t, !1);
    }
  }, {
    key: "getUploadFileOptions",
    value: function getUploadFileOptions(e) {
      var t = {
        method: "serverless.file.resource.generateProximalSign",
        params: JSON.stringify(e)
      };
      return this.request(t);
    }
  }, {
    key: "reportUploadFile",
    value: function reportUploadFile(e) {
      var t = {
        method: "serverless.file.resource.report",
        params: JSON.stringify(e)
      };
      return this.request(t);
    }
  }, {
    key: "uploadFile",
    value: function uploadFile(_ref18) {
      var _this16 = this;
      var e = _ref18.filePath,
        t = _ref18.cloudPath,
        _ref18$fileType = _ref18.fileType,
        n = _ref18$fileType === void 0 ? "image" : _ref18$fileType,
        s = _ref18.onUploadProgress;
      if (!t) throw new te({
        code: "CLOUDPATH_REQUIRED",
        message: "cloudPath不可为空"
      });
      var r;
      return this.getUploadFileOptions({
        cloudPath: t
      }).then(function (t) {
        var _t$result = t.result,
          i = _t$result.url,
          o = _t$result.formData,
          a = _t$result.name;
        return r = t.result.fileUrl, new Promise(function (t, r) {
          var c = _this16.adapter.uploadFile({
            url: i,
            formData: o,
            name: a,
            filePath: e,
            fileType: n,
            success: function success(e) {
              e && e.statusCode < 400 ? t(e) : r(new te({
                code: "UPLOAD_FAILED",
                message: "文件上传失败"
              }));
            },
            fail: function fail(e) {
              r(new te({
                code: e.code || "UPLOAD_FAILED",
                message: e.message || e.errMsg || "文件上传失败"
              }));
            }
          });
          "function" == typeof s && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (e) {
            s({
              loaded: e.totalBytesSent,
              total: e.totalBytesExpectedToSend
            });
          });
        });
      }).then(function () {
        return _this16.reportUploadFile({
          cloudPath: t
        });
      }).then(function (t) {
        return new Promise(function (n, s) {
          t.success ? n({
            success: !0,
            filePath: e,
            fileID: r
          }) : s(new te({
            code: "UPLOAD_FAILED",
            message: "文件上传失败"
          }));
        });
      });
    }
  }, {
    key: "deleteFile",
    value: function deleteFile(_ref19) {
      var e = _ref19.fileList;
      var t = {
        method: "serverless.file.resource.delete",
        params: JSON.stringify({
          fileList: e
        })
      };
      return this.request(t).then(function (e) {
        if (e.success) return e.result;
        throw new te({
          code: "DELETE_FILE_FAILED",
          message: "删除文件失败"
        });
      });
    }
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL() {
      var _ref20 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref20.fileList,
        t = _ref20.maxAge;
      if (!Array.isArray(e) || 0 === e.length) throw new te({
        code: "INVALID_PARAM",
        message: "fileList的元素必须是非空的字符串"
      });
      var n = {
        method: "serverless.file.resource.getTempFileURL",
        params: JSON.stringify({
          fileList: e,
          maxAge: t
        })
      };
      return this.request(n).then(function (e) {
        if (e.success) return {
          fileList: e.result.fileList.map(function (e) {
            return {
              fileID: e.fileID,
              tempFileURL: e.tempFileURL
            };
          })
        };
        throw new te({
          code: "GET_TEMP_FILE_URL_FAILED",
          message: "获取临时文件链接失败"
        });
      });
    }
  }]);
  return xt;
}();
var Nt = {
    init: function init(e) {
      var t = new xt(e),
        n = {
          signInAnonymously: function signInAnonymously() {
            return Promise.resolve();
          },
          getLoginState: function getLoginState() {
            return Promise.resolve(!1);
          }
        };
      return t.auth = function () {
        return n;
      }, t.customAuth = t.auth, t;
    }
  },
  Rt = n(function (e, t) {
    e.exports = r.enc.Hex;
  });
function Lt() {
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
    var t = 16 * Math.random() | 0;
    return ("x" === e ? t : 3 & t | 8).toString(16);
  });
}
function Ut() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var n = t.data,
    s = t.functionName,
    r = t.method,
    i = t.headers,
    _t$signHeaderKeys = t.signHeaderKeys,
    o = _t$signHeaderKeys === void 0 ? [] : _t$signHeaderKeys,
    a = t.config,
    c = String(Date.now()),
    u = Lt(),
    h = Object.assign({}, i, {
      "x-from-app-id": a.spaceAppId,
      "x-from-env-id": a.spaceId,
      "x-to-env-id": a.spaceId,
      "x-from-instance-id": c,
      "x-from-function-name": s,
      "x-client-timestamp": c,
      "x-alipay-source": "client",
      "x-request-id": u,
      "x-alipay-callid": u,
      "x-trace-id": u
    }),
    l = ["x-from-app-id", "x-from-env-id", "x-to-env-id", "x-from-instance-id", "x-from-function-name", "x-client-timestamp"].concat(o),
    _ref21 = e.split("?") || [],
    _ref22 = (0, _slicedToArray2.default)(_ref21, 2),
    _ref22$ = _ref22[0],
    d = _ref22$ === void 0 ? "" : _ref22$,
    _ref22$2 = _ref22[1],
    p = _ref22$2 === void 0 ? "" : _ref22$2,
    f = function (e) {
      var t = "HMAC-SHA256",
        n = e.signedHeaders.join(";"),
        s = e.signedHeaders.map(function (t) {
          return "".concat(t.toLowerCase(), ":").concat(e.headers[t], "\n");
        }).join(""),
        r = _e(e.body).toString(Rt),
        i = "".concat(e.method.toUpperCase(), "\n").concat(e.path, "\n").concat(e.query, "\n").concat(s, "\n").concat(n, "\n").concat(r, "\n"),
        o = _e(i).toString(Rt),
        a = "".concat(t, "\n").concat(e.timestamp, "\n").concat(o, "\n"),
        c = we(a, e.secretKey).toString(Rt);
      return "".concat(t, " Credential=").concat(e.secretId, ", SignedHeaders=").concat(n, ", Signature=").concat(c);
    }({
      path: d,
      query: p,
      method: r,
      headers: h,
      timestamp: c,
      body: JSON.stringify(n),
      secretId: a.accessKey,
      secretKey: a.secretKey,
      signedHeaders: l.sort()
    });
  return {
    url: "".concat(a.endpoint).concat(e),
    headers: Object.assign({}, h, {
      Authorization: f
    })
  };
}
function Dt(_ref23) {
  var e = _ref23.url,
    t = _ref23.data,
    _ref23$method = _ref23.method,
    n = _ref23$method === void 0 ? "POST" : _ref23$method,
    _ref23$headers = _ref23.headers,
    s = _ref23$headers === void 0 ? {} : _ref23$headers,
    r = _ref23.timeout;
  return new Promise(function (i, o) {
    ne.request({
      url: e,
      method: n,
      data: "object" == (0, _typeof2.default)(t) ? JSON.stringify(t) : t,
      header: s,
      dataType: "json",
      timeout: r,
      complete: function complete() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var t = s["x-trace-id"] || "";
        if (!e.statusCode || e.statusCode >= 400) {
          var _ref24 = e.data || {},
            _n9 = _ref24.message,
            _s13 = _ref24.errMsg,
            _r4 = _ref24.trace_id;
          return o(new te({
            code: "SYS_ERR",
            message: _n9 || _s13 || "request:fail",
            requestId: _r4 || t
          }));
        }
        i({
          status: e.statusCode,
          data: e.data,
          headers: e.header,
          requestId: t
        });
      }
    });
  });
}
function Mt(e, t) {
  var n = e.path,
    s = e.data,
    _e$method = e.method,
    r = _e$method === void 0 ? "GET" : _e$method,
    _Ut = Ut(n, {
      functionName: "",
      data: s,
      method: r,
      headers: {
        "x-alipay-cloud-mode": "oss",
        "x-data-api-type": "oss",
        "x-expire-timestamp": Date.now() + 6e4
      },
      signHeaderKeys: ["x-data-api-type", "x-expire-timestamp"],
      config: t
    }),
    i = _Ut.url,
    o = _Ut.headers;
  return Dt({
    url: i,
    data: s,
    method: r,
    headers: o
  }).then(function (e) {
    var t = e.data || {};
    if (!t.success) throw new te({
      code: e.errCode,
      message: e.errMsg,
      requestId: e.requestId
    });
    return t.data || {};
  }).catch(function (e) {
    throw new te({
      code: e.errCode,
      message: e.errMsg,
      requestId: e.requestId
    });
  });
}
function qt() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var t = e.trim().replace(/^cloud:\/\//, ""),
    n = t.indexOf("/");
  if (n <= 0) throw new te({
    code: "INVALID_PARAM",
    message: "fileID不合法"
  });
  var s = t.substring(0, n),
    r = t.substring(n + 1);
  return s !== this.config.spaceId && console.warn("file ".concat(e, " does not belong to env ").concat(this.config.spaceId)), r;
}
function Ft() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  return "cloud://".concat(this.config.spaceId, "/").concat(e.replace(/^\/+/, ""));
}
var Kt = /*#__PURE__*/function () {
  function Kt(e) {
    (0, _classCallCheck2.default)(this, Kt);
    this.config = e;
  }
  (0, _createClass2.default)(Kt, [{
    key: "signedURL",
    value: function signedURL(e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var n = "/ws/function/".concat(e),
        s = this.config.wsEndpoint.replace(/^ws(s)?:\/\//, ""),
        r = Object.assign({}, t, {
          accessKeyId: this.config.accessKey,
          signatureNonce: Lt(),
          timestamp: "" + Date.now()
        }),
        i = [n, ["accessKeyId", "authorization", "signatureNonce", "timestamp"].sort().map(function (e) {
          return r[e] ? "".concat(e, "=").concat(r[e]) : null;
        }).filter(Boolean).join("&"), "host:".concat(s)].join("\n"),
        o = ["HMAC-SHA256", _e(i).toString(Rt)].join("\n"),
        a = we(o, this.config.secretKey).toString(Rt),
        c = Object.keys(r).map(function (e) {
          return "".concat(e, "=").concat(encodeURIComponent(r[e]));
        }).join("&");
      return "".concat(this.config.wsEndpoint).concat(n, "?").concat(c, "&signature=").concat(a);
    }
  }]);
  return Kt;
}();
var jt = /*#__PURE__*/function () {
  function jt(e) {
    (0, _classCallCheck2.default)(this, jt);
    if (["spaceId", "spaceAppId", "accessKey", "secretKey"].forEach(function (t) {
      if (!Object.prototype.hasOwnProperty.call(e, t)) throw new Error("".concat(t, " required"));
    }), e.endpoint) {
      if ("string" != typeof e.endpoint) throw new Error("endpoint must be string");
      if (!/^https:\/\//.test(e.endpoint)) throw new Error("endpoint must start with https://");
      e.endpoint = e.endpoint.replace(/\/$/, "");
    }
    this.config = Object.assign({}, e, {
      endpoint: e.endpoint || "https://".concat(e.spaceId, ".api-hz.cloudbasefunction.cn"),
      wsEndpoint: e.wsEndpoint || "wss://".concat(e.spaceId, ".api-hz.cloudbasefunction.cn")
    }), this._websocket = new Kt(this.config);
  }
  (0, _createClass2.default)(jt, [{
    key: "callFunction",
    value: function callFunction(e) {
      return function (e, t) {
        var n = e.name,
          s = e.data,
          _e$async = e.async,
          r = _e$async === void 0 ? !1 : _e$async,
          i = e.timeout,
          o = "POST",
          a = {
            "x-to-function-name": n
          };
        r && (a["x-function-invoke-type"] = "async");
        var _Ut2 = Ut("/functions/invokeFunction", {
            functionName: n,
            data: s,
            method: o,
            headers: a,
            signHeaderKeys: ["x-to-function-name"],
            config: t
          }),
          c = _Ut2.url,
          u = _Ut2.headers;
        return Dt({
          url: c,
          data: s,
          method: o,
          headers: u,
          timeout: i
        }).then(function (e) {
          var t = 0;
          if (r) {
            var _n10 = e.data || {};
            t = "200" === _n10.errCode ? 0 : _n10.errCode, e.data = _n10.data || {}, e.errMsg = _n10.errMsg;
          }
          if (0 !== t) throw new te({
            code: t,
            message: e.errMsg,
            requestId: e.requestId
          });
          return {
            errCode: t,
            success: 0 === t,
            requestId: e.requestId,
            result: e.data
          };
        }).catch(function (e) {
          throw new te({
            code: e.errCode,
            message: e.errMsg,
            requestId: e.requestId
          });
        });
      }(e, this.config);
    }
  }, {
    key: "uploadFileToOSS",
    value: function uploadFileToOSS(_ref25) {
      var e = _ref25.url,
        t = _ref25.filePath,
        n = _ref25.fileType,
        s = _ref25.formData,
        r = _ref25.onUploadProgress;
      return new Promise(function (i, o) {
        var a = ne.uploadFile({
          url: e,
          filePath: t,
          fileType: n,
          formData: s,
          name: "file",
          success: function success(e) {
            e && e.statusCode < 400 ? i(e) : o(new te({
              code: "UPLOAD_FAILED",
              message: "文件上传失败"
            }));
          },
          fail: function fail(e) {
            o(new te({
              code: e.code || "UPLOAD_FAILED",
              message: e.message || e.errMsg || "文件上传失败"
            }));
          }
        });
        "function" == typeof r && a && "function" == typeof a.onProgressUpdate && a.onProgressUpdate(function (e) {
          r({
            loaded: e.totalBytesSent,
            total: e.totalBytesExpectedToSend
          });
        });
      });
    }
  }, {
    key: "uploadFile",
    value: function () {
      var _uploadFile2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee45(_ref26) {
        var e, _ref26$cloudPath, t, _ref26$fileType, n, s, r, i, o, a, c;
        return _regenerator.default.wrap(function _callee45$(_context45) {
          while (1) {
            switch (_context45.prev = _context45.next) {
              case 0:
                e = _ref26.filePath, _ref26$cloudPath = _ref26.cloudPath, t = _ref26$cloudPath === void 0 ? "" : _ref26$cloudPath, _ref26$fileType = _ref26.fileType, n = _ref26$fileType === void 0 ? "image" : _ref26$fileType, s = _ref26.onUploadProgress;
                if (!("string" !== g(t))) {
                  _context45.next = 3;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath必须为字符串类型"
                });
              case 3:
                if (t = t.trim()) {
                  _context45.next = 5;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath不可为空"
                });
              case 5:
                if (!/:\/\//.test(t)) {
                  _context45.next = 7;
                  break;
                }
                throw new te({
                  code: "INVALID_PARAM",
                  message: "cloudPath不合法"
                });
              case 7:
                _context45.next = 9;
                return Mt({
                  path: "/".concat(t.replace(/^\//, ""), "?post_url")
                }, this.config);
              case 9:
                r = _context45.sent;
                i = r.file_id;
                o = r.upload_url;
                a = r.form_data;
                c = a && a.reduce(function (e, t) {
                  return e[t.key] = t.value, e;
                }, {});
                return _context45.abrupt("return", this.uploadFileToOSS({
                  url: o,
                  filePath: e,
                  fileType: n,
                  formData: c,
                  onUploadProgress: s
                }).then(function () {
                  return {
                    fileID: i
                  };
                }));
              case 15:
              case "end":
                return _context45.stop();
            }
          }
        }, _callee45, this);
      }));
      function uploadFile(_x43) {
        return _uploadFile2.apply(this, arguments);
      }
      return uploadFile;
    }()
  }, {
    key: "getTempFileURL",
    value: function () {
      var _getTempFileURL = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee46(_ref27) {
        var _this17 = this;
        var e;
        return _regenerator.default.wrap(function _callee46$(_context46) {
          while (1) {
            switch (_context46.prev = _context46.next) {
              case 0:
                e = _ref27.fileList;
                return _context46.abrupt("return", new Promise(function (t, n) {
                  (!e || e.length < 0) && t({
                    code: "INVALID_PARAM",
                    message: "fileList不能为空数组"
                  }), e.length > 50 && t({
                    code: "INVALID_PARAM",
                    message: "fileList数组长度不能超过50"
                  });
                  var s = [];
                  var _iterator5 = _createForOfIteratorHelper(e),
                    _step5;
                  try {
                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                      var _n11 = _step5.value;
                      var _e18 = void 0;
                      "string" !== g(_n11) && t({
                        code: "INVALID_PARAM",
                        message: "fileList的元素必须是非空的字符串"
                      });
                      try {
                        _e18 = qt.call(_this17, _n11);
                      } catch (t) {
                        console.warn(t.errCode, t.errMsg), _e18 = _n11;
                      }
                      s.push({
                        file_id: _e18,
                        expire: 600
                      });
                    }
                  } catch (err) {
                    _iterator5.e(err);
                  } finally {
                    _iterator5.f();
                  }
                  Mt({
                    path: "/?download_url",
                    data: {
                      file_list: s
                    },
                    method: "POST"
                  }, _this17.config).then(function (e) {
                    var _e$file_list = e.file_list,
                      n = _e$file_list === void 0 ? [] : _e$file_list;
                    t({
                      fileList: n.map(function (e) {
                        return {
                          fileID: Ft.call(_this17, e.file_id),
                          tempFileURL: e.download_url
                        };
                      })
                    });
                  }).catch(function (e) {
                    return n(e);
                  });
                }));
              case 2:
              case "end":
                return _context46.stop();
            }
          }
        }, _callee46);
      }));
      function getTempFileURL(_x44) {
        return _getTempFileURL.apply(this, arguments);
      }
      return getTempFileURL;
    }()
  }, {
    key: "connectWebSocket",
    value: function () {
      var _connectWebSocket = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee47(e) {
        var t, n;
        return _regenerator.default.wrap(function _callee47$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                t = e.name, n = e.query;
                return _context47.abrupt("return", ne.connectSocket({
                  url: this._websocket.signedURL(t, n),
                  complete: function complete() {}
                }));
              case 2:
              case "end":
                return _context47.stop();
            }
          }
        }, _callee47, this);
      }));
      function connectWebSocket(_x45) {
        return _connectWebSocket.apply(this, arguments);
      }
      return connectWebSocket;
    }()
  }]);
  return jt;
}();
var $t = {
  init: function init(e) {
    e.provider = "alipay";
    var t = new jt(e);
    return t.auth = function () {
      return {
        signInAnonymously: function signInAnonymously() {
          return Promise.resolve();
        },
        getLoginState: function getLoginState() {
          return Promise.resolve(!0);
        }
      };
    }, t;
  }
};
function Bt(_ref28) {
  var e = _ref28.data;
  var t;
  t = he();
  var n = JSON.parse(JSON.stringify(e || {}));
  if (Object.assign(n, {
    clientInfo: t
  }), !n.uniIdToken) {
    var _se3 = se(),
      _e19 = _se3.token;
    _e19 && (n.uniIdToken = _e19);
  }
  return n;
}
function Wt() {
  return _Wt.apply(this, arguments);
}
function _Wt() {
  _Wt = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee70() {
    var _this30 = this;
    var e,
      _this$__dev__,
      t,
      n,
      s,
      r,
      i,
      o,
      _args9 = arguments;
    return _regenerator.default.wrap(function _callee70$(_context70) {
      while (1) {
        switch (_context70.prev = _context70.next) {
          case 0:
            e = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};
            _context70.next = 3;
            return this.__dev__.initLocalNetwork();
          case 3:
            _this$__dev__ = this.__dev__, t = _this$__dev__.localAddress, n = _this$__dev__.localPort, s = {
              aliyun: "aliyun",
              tencent: "tcb",
              alipay: "alipay",
              dcloud: "dcloud"
            }[this.config.provider], r = this.config.spaceId, i = "http://".concat(t, ":").concat(n, "/system/check-function"), o = "http://".concat(t, ":").concat(n, "/cloudfunctions/").concat(e.name);
            return _context70.abrupt("return", new Promise(function (t, n) {
              ne.request({
                method: "POST",
                url: i,
                data: {
                  name: e.name,
                  platform: C,
                  provider: s,
                  spaceId: r
                },
                timeout: 3e3,
                success: function success(e) {
                  t(e);
                },
                fail: function fail() {
                  t({
                    data: {
                      code: "NETWORK_ERROR",
                      message: "连接本地调试服务失败，请检查客户端是否和主机在同一局域网下，自动切换为已部署的云函数。"
                    }
                  });
                }
              });
            }).then(function () {
              var _ref66 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                e = _ref66.data;
              var _ref67 = e || {},
                t = _ref67.code,
                n = _ref67.message;
              return {
                code: 0 === t ? 0 : t || "SYS_ERR",
                message: n || "SYS_ERR"
              };
            }).then(function (_ref68) {
              var t = _ref68.code,
                n = _ref68.message;
              if (0 !== t) {
                switch (t) {
                  case "MODULE_ENCRYPTED":
                    console.error("\u6B64\u4E91\u51FD\u6570\uFF08".concat(e.name, "\uFF09\u4F9D\u8D56\u52A0\u5BC6\u516C\u5171\u6A21\u5757\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570"));
                    break;
                  case "FUNCTION_ENCRYPTED":
                    console.error("\u6B64\u4E91\u51FD\u6570\uFF08".concat(e.name, "\uFF09\u5DF2\u52A0\u5BC6\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570"));
                    break;
                  case "ACTION_ENCRYPTED":
                    console.error(n || "需要访问加密的uni-clientDB-action，自动切换为云端环境");
                    break;
                  case "NETWORK_ERROR":
                    console.error(n || "连接本地调试服务失败，请检查客户端是否和主机在同一局域网下");
                    break;
                  case "SWITCH_TO_CLOUD":
                    break;
                  default:
                    {
                      var _e32 = "\u68C0\u6D4B\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u51FA\u73B0\u9519\u8BEF\uFF1A".concat(n, "\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u73AF\u5883\u6216\u91CD\u542F\u5BA2\u6237\u7AEF\u518D\u8BD5");
                      throw console.error(_e32), new Error(_e32);
                    }
                }
                return _this30._callCloudFunction(e);
              }
              return new Promise(function (t, n) {
                var r = Bt.call(_this30, {
                  data: e.data
                });
                ne.request({
                  method: "POST",
                  url: o,
                  data: {
                    provider: s,
                    platform: C,
                    param: r
                  },
                  timeout: e.timeout,
                  success: function success() {
                    var _ref69 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                      e = _ref69.statusCode,
                      s = _ref69.data;
                    return !e || e >= 400 ? n(new te({
                      code: s.code || "SYS_ERR",
                      message: s.message || "request:fail"
                    })) : t({
                      result: s
                    });
                  },
                  fail: function fail(e) {
                    n(new te({
                      code: e.code || e.errCode || "SYS_ERR",
                      message: e.message || e.errMsg || "request:fail"
                    }));
                  }
                });
              });
            }));
          case 5:
          case "end":
            return _context70.stop();
        }
      }
    }, _callee70, this);
  }));
  return _Wt.apply(this, arguments);
}
var Ht = [{
  rule: /fc_function_not_found|FUNCTION_NOT_FOUND/,
  content: "，云函数[{functionName}]在云端不存在，请检查此云函数名称是否正确以及该云函数是否已上传到服务空间",
  mode: "append"
}];
var Jt = /[\\^$.*+?()[\]{}|]/g,
  zt = RegExp(Jt.source);
function Vt(e, t, n) {
  return e.replace(new RegExp((s = t) && zt.test(s) ? s.replace(Jt, "\\$&") : s, "g"), n);
  var s;
}
var Gt = {
    NONE: "none",
    REQUEST: "request",
    RESPONSE: "response",
    BOTH: "both"
  },
  Yt = "_globalUniCloudStatus",
  Qt = "_globalUniCloudSecureNetworkCache__{spaceId}";
var Xt = /*#__PURE__*/function () {
  function Xt() {
    var _ref29 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref29.secretType,
      t = _ref29.uniCloudIns;
    (0, _classCallCheck2.default)(this, Xt);
    this.clientType = "", this.secretType = e || Gt.NONE, this.uniCloudIns = t;
    var _this$uniCloudIns$con = this.uniCloudIns.config,
      n = _this$uniCloudIns$con.provider,
      s = _this$uniCloudIns$con.spaceId;
    var r;
    this.provider = n, this.spaceId = s, this.scopedGlobalCache = (r = this.uniCloudIns, U(Qt.replace("{spaceId}", r.config.spaceId)));
  }
  (0, _createClass2.default)(Xt, [{
    key: "getSystemInfo",
    value: function getSystemInfo() {
      return this._systemInfo || (this._systemInfo = ae()), this._systemInfo;
    }
  }, {
    key: "appId",
    get: function get() {
      return this.getSystemInfo().appId;
    }
  }, {
    key: "deviceId",
    get: function get() {
      return this.getSystemInfo().deviceId;
    }
  }, {
    key: "encryptData",
    value: function () {
      var _encryptData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee48(e) {
        return _regenerator.default.wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                return _context48.abrupt("return", this.secretType === Gt.NONE ? e : this.platformEncryptData(e));
              case 1:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48, this);
      }));
      function encryptData(_x46) {
        return _encryptData.apply(this, arguments);
      }
      return encryptData;
    }()
  }, {
    key: "decryptResult",
    value: function () {
      var _decryptResult = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee49(e) {
        var _ref30, t, n;
        return _regenerator.default.wrap(function _callee49$(_context49) {
          while (1) {
            switch (_context49.prev = _context49.next) {
              case 0:
                if (!(this.secretType === Gt.NONE)) {
                  _context49.next = 2;
                  break;
                }
                return _context49.abrupt("return", e);
              case 2:
                _ref30 = e || {}, t = _ref30.errCode, n = _ref30.content;
                return _context49.abrupt("return", t || !n ? e : this.secretType === Gt.REQUEST ? n : this.platformDecryptResult(e));
              case 4:
              case "end":
                return _context49.stop();
            }
          }
        }, _callee49, this);
      }));
      function decryptResult(_x47) {
        return _decryptResult.apply(this, arguments);
      }
      return decryptResult;
    }()
  }, {
    key: "wrapVerifyClientCallFunction",
    value: function wrapVerifyClientCallFunction(e) {
      var t = this;
      return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee50() {
        var _ref32,
          n,
          _ref32$data,
          s,
          r,
          _args50 = arguments;
        return _regenerator.default.wrap(function _callee50$(_context50) {
          while (1) {
            switch (_context50.prev = _context50.next) {
              case 0:
                _ref32 = _args50.length > 0 && _args50[0] !== undefined ? _args50[0] : {}, n = _ref32.name, _ref32$data = _ref32.data, s = _ref32$data === void 0 ? {} : _ref32$data;
                _context50.next = 3;
                return t.prepare();
              case 3:
                _context50.next = 5;
                return t.platformGetSignOption();
              case 5:
                (s = JSON.parse(JSON.stringify(s)))._uniCloudOptions = _context50.sent;
                _context50.next = 8;
                return e({
                  name: n,
                  data: s
                });
              case 8:
                r = _context50.sent;
                _context50.t0 = t.isClientKeyNotFound(r);
                if (!_context50.t0) {
                  _context50.next = 19;
                  break;
                }
                _context50.next = 13;
                return t.prepare({
                  forceUpdate: !0
                });
              case 13:
                _context50.next = 15;
                return t.platformGetSignOption();
              case 15:
                s._uniCloudOptions = _context50.sent;
                _context50.next = 18;
                return e({
                  name: n,
                  data: s
                });
              case 18:
                r = _context50.sent;
              case 19:
                return _context50.abrupt("return", r);
              case 20:
              case "end":
                return _context50.stop();
            }
          }
        }, _callee50);
      }));
    }
  }, {
    key: "wrapEncryptDataCallFunction",
    value: function wrapEncryptDataCallFunction(e) {
      var t = this;
      return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee51() {
        var _ref34,
          n,
          _ref34$data,
          s,
          r,
          i,
          _r5,
          _args51 = arguments;
        return _regenerator.default.wrap(function _callee51$(_context51) {
          while (1) {
            switch (_context51.prev = _context51.next) {
              case 0:
                _ref34 = _args51.length > 0 && _args51[0] !== undefined ? _args51[0] : {}, n = _ref34.name, _ref34$data = _ref34.data, s = _ref34$data === void 0 ? {} : _ref34$data;
                _context51.next = 3;
                return t.prepare();
              case 3:
                _context51.next = 5;
                return t.encryptData(s);
              case 5:
                r = _context51.sent;
                _context51.next = 8;
                return e({
                  name: n,
                  data: r
                });
              case 8:
                i = _context51.sent;
                if (!t.isClientKeyNotFound(i)) {
                  _context51.next = 21;
                  break;
                }
                _context51.next = 12;
                return t.prepare({
                  forceUpdate: !0
                });
              case 12:
                _context51.next = 14;
                return t.encryptData(s);
              case 14:
                _r5 = _context51.sent;
                _context51.next = 17;
                return t.platformGetSignOption();
              case 17:
                s._uniCloudOptions = _context51.sent;
                _context51.next = 20;
                return e({
                  name: n,
                  data: _r5
                });
              case 20:
                i = _context51.sent;
              case 21:
                _context51.next = 23;
                return t.decryptResult(i.result);
              case 23:
                i.result = _context51.sent;
                return _context51.abrupt("return", i);
              case 25:
              case "end":
                return _context51.stop();
            }
          }
        }, _callee51);
      }));
    }
  }]);
  return Xt;
}();
/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */
function Zt(e) {
  return parseInt(e) === e;
}
function en(e) {
  if (!Zt(e.length)) return !1;
  for (var t = 0; t < e.length; t++) {
    if (!Zt(e[t]) || e[t] < 0 || e[t] > 255) return !1;
  }
  return !0;
}
function tn(e, t) {
  if (e.buffer && "Uint8Array" === e.name) return t && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
  if (Array.isArray(e)) {
    if (!en(e)) throw new Error("Array contains invalid value: " + e);
    return new Uint8Array(e);
  }
  if (Zt(e.length) && en(e)) return new Uint8Array(e);
  throw new Error("unsupported array-like object");
}
function nn(e) {
  return new Uint8Array(e);
}
function sn(e, t, n, s, r) {
  null == s && null == r || (e = e.slice ? e.slice(s, r) : Array.prototype.slice.call(e, s, r)), t.set(e, n);
}
var rn,
  on = {
    toBytes: function toBytes(e) {
      var t = [],
        n = 0;
      for (e = encodeURI(e); n < e.length;) {
        var s = e.charCodeAt(n++);
        37 === s ? (t.push(parseInt(e.substr(n, 2), 16)), n += 2) : t.push(s);
      }
      return tn(t);
    },
    fromBytes: function fromBytes(e) {
      for (var t = [], n = 0; n < e.length;) {
        var s = e[n];
        s < 128 ? (t.push(String.fromCharCode(s)), n++) : s > 191 && s < 224 ? (t.push(String.fromCharCode((31 & s) << 6 | 63 & e[n + 1])), n += 2) : (t.push(String.fromCharCode((15 & s) << 12 | (63 & e[n + 1]) << 6 | 63 & e[n + 2])), n += 3);
      }
      return t.join("");
    }
  },
  an = (rn = "0123456789abcdef", {
    toBytes: function toBytes(e) {
      for (var t = [], n = 0; n < e.length; n += 2) {
        t.push(parseInt(e.substr(n, 2), 16));
      }
      return t;
    },
    fromBytes: function fromBytes(e) {
      for (var t = [], n = 0; n < e.length; n++) {
        var s = e[n];
        t.push(rn[(240 & s) >> 4] + rn[15 & s]);
      }
      return t.join("");
    }
  }),
  cn = {
    16: 10,
    24: 12,
    32: 14
  },
  un = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
  hn = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
  ln = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
  dn = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986],
  pn = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766],
  fn = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126],
  gn = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436],
  mn = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890],
  yn = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935],
  _n = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600],
  wn = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480],
  vn = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795],
  In = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855],
  Sn = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150],
  Tn = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
function bn(e) {
  for (var t = [], n = 0; n < e.length; n += 4) {
    t.push(e[n] << 24 | e[n + 1] << 16 | e[n + 2] << 8 | e[n + 3]);
  }
  return t;
}
var En = /*#__PURE__*/function () {
  function En(e) {
    (0, _classCallCheck2.default)(this, En);
    if (!(this instanceof En)) throw Error("AES must be instanitated with `new`");
    Object.defineProperty(this, "key", {
      value: tn(e, !0)
    }), this._prepare();
  }
  (0, _createClass2.default)(En, [{
    key: "_prepare",
    value: function _prepare() {
      var e = cn[this.key.length];
      if (null == e) throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
      this._Ke = [], this._Kd = [];
      for (var t = 0; t <= e; t++) {
        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
      }
      var n,
        s = 4 * (e + 1),
        r = this.key.length / 4,
        i = bn(this.key);
      for (t = 0; t < r; t++) {
        n = t >> 2, this._Ke[n][t % 4] = i[t], this._Kd[e - n][t % 4] = i[t];
      }
      for (var o, a = 0, c = r; c < s;) {
        if (o = i[r - 1], i[0] ^= hn[o >> 16 & 255] << 24 ^ hn[o >> 8 & 255] << 16 ^ hn[255 & o] << 8 ^ hn[o >> 24 & 255] ^ un[a] << 24, a += 1, 8 != r) for (t = 1; t < r; t++) {
          i[t] ^= i[t - 1];
        } else {
          for (t = 1; t < r / 2; t++) {
            i[t] ^= i[t - 1];
          }
          o = i[r / 2 - 1], i[r / 2] ^= hn[255 & o] ^ hn[o >> 8 & 255] << 8 ^ hn[o >> 16 & 255] << 16 ^ hn[o >> 24 & 255] << 24;
          for (t = r / 2 + 1; t < r; t++) {
            i[t] ^= i[t - 1];
          }
        }
        for (t = 0; t < r && c < s;) {
          u = c >> 2, h = c % 4, this._Ke[u][h] = i[t], this._Kd[e - u][h] = i[t++], c++;
        }
      }
      for (var u = 1; u < e; u++) {
        for (var h = 0; h < 4; h++) {
          o = this._Kd[u][h], this._Kd[u][h] = vn[o >> 24 & 255] ^ In[o >> 16 & 255] ^ Sn[o >> 8 & 255] ^ Tn[255 & o];
        }
      }
    }
  }, {
    key: "encrypt",
    value: function encrypt(e) {
      if (16 != e.length) throw new Error("invalid plaintext size (must be 16 bytes)");
      for (var t = this._Ke.length - 1, n = [0, 0, 0, 0], s = bn(e), r = 0; r < 4; r++) {
        s[r] ^= this._Ke[0][r];
      }
      for (var i = 1; i < t; i++) {
        for (r = 0; r < 4; r++) {
          n[r] = dn[s[r] >> 24 & 255] ^ pn[s[(r + 1) % 4] >> 16 & 255] ^ fn[s[(r + 2) % 4] >> 8 & 255] ^ gn[255 & s[(r + 3) % 4]] ^ this._Ke[i][r];
        }
        s = n.slice();
      }
      var o,
        a = nn(16);
      for (r = 0; r < 4; r++) {
        o = this._Ke[t][r], a[4 * r] = 255 & (hn[s[r] >> 24 & 255] ^ o >> 24), a[4 * r + 1] = 255 & (hn[s[(r + 1) % 4] >> 16 & 255] ^ o >> 16), a[4 * r + 2] = 255 & (hn[s[(r + 2) % 4] >> 8 & 255] ^ o >> 8), a[4 * r + 3] = 255 & (hn[255 & s[(r + 3) % 4]] ^ o);
      }
      return a;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if (16 != e.length) throw new Error("invalid ciphertext size (must be 16 bytes)");
      for (var t = this._Kd.length - 1, n = [0, 0, 0, 0], s = bn(e), r = 0; r < 4; r++) {
        s[r] ^= this._Kd[0][r];
      }
      for (var i = 1; i < t; i++) {
        for (r = 0; r < 4; r++) {
          n[r] = mn[s[r] >> 24 & 255] ^ yn[s[(r + 3) % 4] >> 16 & 255] ^ _n[s[(r + 2) % 4] >> 8 & 255] ^ wn[255 & s[(r + 1) % 4]] ^ this._Kd[i][r];
        }
        s = n.slice();
      }
      var o,
        a = nn(16);
      for (r = 0; r < 4; r++) {
        o = this._Kd[t][r], a[4 * r] = 255 & (ln[s[r] >> 24 & 255] ^ o >> 24), a[4 * r + 1] = 255 & (ln[s[(r + 3) % 4] >> 16 & 255] ^ o >> 16), a[4 * r + 2] = 255 & (ln[s[(r + 2) % 4] >> 8 & 255] ^ o >> 8), a[4 * r + 3] = 255 & (ln[255 & s[(r + 1) % 4]] ^ o);
      }
      return a;
    }
  }]);
  return En;
}();
var kn = /*#__PURE__*/function () {
  function kn(e) {
    (0, _classCallCheck2.default)(this, kn);
    if (!(this instanceof kn)) throw Error("AES must be instanitated with `new`");
    this.description = "Electronic Code Block", this.name = "ecb", this._aes = new En(e);
  }
  (0, _createClass2.default)(kn, [{
    key: "encrypt",
    value: function encrypt(e) {
      if ((e = tn(e)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var t = nn(e.length), n = nn(16), s = 0; s < e.length; s += 16) {
        sn(e, n, 0, s, s + 16), sn(n = this._aes.encrypt(n), t, s);
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if ((e = tn(e)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var t = nn(e.length), n = nn(16), s = 0; s < e.length; s += 16) {
        sn(e, n, 0, s, s + 16), sn(n = this._aes.decrypt(n), t, s);
      }
      return t;
    }
  }]);
  return kn;
}();
var Pn = /*#__PURE__*/function () {
  function Pn(e, t) {
    (0, _classCallCheck2.default)(this, Pn);
    if (!(this instanceof Pn)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Cipher Block Chaining", this.name = "cbc", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
    } else t = nn(16);
    this._lastCipherblock = tn(t, !0), this._aes = new En(e);
  }
  (0, _createClass2.default)(Pn, [{
    key: "encrypt",
    value: function encrypt(e) {
      if ((e = tn(e)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var t = nn(e.length), n = nn(16), s = 0; s < e.length; s += 16) {
        sn(e, n, 0, s, s + 16);
        for (var r = 0; r < 16; r++) {
          n[r] ^= this._lastCipherblock[r];
        }
        this._lastCipherblock = this._aes.encrypt(n), sn(this._lastCipherblock, t, s);
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if ((e = tn(e)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var t = nn(e.length), n = nn(16), s = 0; s < e.length; s += 16) {
        sn(e, n, 0, s, s + 16), n = this._aes.decrypt(n);
        for (var r = 0; r < 16; r++) {
          t[s + r] = n[r] ^ this._lastCipherblock[r];
        }
        sn(e, this._lastCipherblock, 0, s, s + 16);
      }
      return t;
    }
  }]);
  return Pn;
}();
var Cn = /*#__PURE__*/function () {
  function Cn(e, t, n) {
    (0, _classCallCheck2.default)(this, Cn);
    if (!(this instanceof Cn)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Cipher Feedback", this.name = "cfb", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 size)");
    } else t = nn(16);
    n || (n = 1), this.segmentSize = n, this._shiftRegister = tn(t, !0), this._aes = new En(e);
  }
  (0, _createClass2.default)(Cn, [{
    key: "encrypt",
    value: function encrypt(e) {
      if (e.length % this.segmentSize != 0) throw new Error("invalid plaintext size (must be segmentSize bytes)");
      for (var t, n = tn(e, !0), s = 0; s < n.length; s += this.segmentSize) {
        t = this._aes.encrypt(this._shiftRegister);
        for (var r = 0; r < this.segmentSize; r++) {
          n[s + r] ^= t[r];
        }
        sn(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), sn(n, this._shiftRegister, 16 - this.segmentSize, s, s + this.segmentSize);
      }
      return n;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if (e.length % this.segmentSize != 0) throw new Error("invalid ciphertext size (must be segmentSize bytes)");
      for (var t, n = tn(e, !0), s = 0; s < n.length; s += this.segmentSize) {
        t = this._aes.encrypt(this._shiftRegister);
        for (var r = 0; r < this.segmentSize; r++) {
          n[s + r] ^= t[r];
        }
        sn(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), sn(e, this._shiftRegister, 16 - this.segmentSize, s, s + this.segmentSize);
      }
      return n;
    }
  }]);
  return Cn;
}();
var An = /*#__PURE__*/function () {
  function An(e, t) {
    (0, _classCallCheck2.default)(this, An);
    if (!(this instanceof An)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Output Feedback", this.name = "ofb", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
    } else t = nn(16);
    this._lastPrecipher = tn(t, !0), this._lastPrecipherIndex = 16, this._aes = new En(e);
  }
  (0, _createClass2.default)(An, [{
    key: "encrypt",
    value: function encrypt(e) {
      for (var t = tn(e, !0), n = 0; n < t.length; n++) {
        16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), t[n] ^= this._lastPrecipher[this._lastPrecipherIndex++];
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      return this.encrypt(e);
    }
  }]);
  return An;
}();
var On = /*#__PURE__*/function () {
  function On(e) {
    (0, _classCallCheck2.default)(this, On);
    if (!(this instanceof On)) throw Error("Counter must be instanitated with `new`");
    0 === e || e || (e = 1), "number" == typeof e ? (this._counter = nn(16), this.setValue(e)) : this.setBytes(e);
  }
  (0, _createClass2.default)(On, [{
    key: "setValue",
    value: function setValue(e) {
      if ("number" != typeof e || parseInt(e) != e) throw new Error("invalid counter value (must be an integer)");
      if (e > Number.MAX_SAFE_INTEGER) throw new Error("integer value out of safe range");
      for (var t = 15; t >= 0; --t) {
        this._counter[t] = e % 256, e = parseInt(e / 256);
      }
    }
  }, {
    key: "setBytes",
    value: function setBytes(e) {
      if (16 != (e = tn(e, !0)).length) throw new Error("invalid counter bytes size (must be 16 bytes)");
      this._counter = e;
    }
  }, {
    key: "increment",
    value: function increment() {
      for (var e = 15; e >= 0; e--) {
        if (255 !== this._counter[e]) {
          this._counter[e]++;
          break;
        }
        this._counter[e] = 0;
      }
    }
  }]);
  return On;
}();
var xn = /*#__PURE__*/function () {
  function xn(e, t) {
    (0, _classCallCheck2.default)(this, xn);
    if (!(this instanceof xn)) throw Error("AES must be instanitated with `new`");
    this.description = "Counter", this.name = "ctr", t instanceof On || (t = new On(t)), this._counter = t, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new En(e);
  }
  (0, _createClass2.default)(xn, [{
    key: "encrypt",
    value: function encrypt(e) {
      for (var t = tn(e, !0), n = 0; n < t.length; n++) {
        16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), t[n] ^= this._remainingCounter[this._remainingCounterIndex++];
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      return this.encrypt(e);
    }
  }]);
  return xn;
}();
var Nn = {
  AES: En,
  Counter: On,
  ModeOfOperation: {
    ecb: kn,
    cbc: Pn,
    cfb: Cn,
    ofb: An,
    ctr: xn
  },
  utils: {
    hex: an,
    utf8: on
  },
  padding: {
    pkcs7: {
      pad: function pad(e) {
        var t = 16 - (e = tn(e, !0)).length % 16,
          n = nn(e.length + t);
        sn(e, n);
        for (var s = e.length; s < n.length; s++) {
          n[s] = t;
        }
        return n;
      },
      strip: function strip(e) {
        if ((e = tn(e, !0)).length < 16) throw new Error("PKCS#7 invalid length");
        var t = e[e.length - 1];
        if (t > 16) throw new Error("PKCS#7 padding byte out of range");
        for (var n = e.length - t, s = 0; s < t; s++) {
          if (e[n + s] !== t) throw new Error("PKCS#7 invalid padding byte");
        }
        var r = nn(n);
        return sn(e, r, 0, 0, n), r;
      }
    }
  },
  _arrayTest: {
    coerceArray: tn,
    createArray: nn,
    copyArray: sn
  }
};
function Rn(e, t, n) {
  var s = new Uint8Array(uni.base64ToArrayBuffer(t)),
    r = Nn.utils.utf8.toBytes(n),
    i = Nn.utils.utf8.toBytes(e),
    o = new Nn.ModeOfOperation.cbc(s, r),
    a = Nn.padding.pkcs7.pad(i),
    c = o.encrypt(a);
  return uni.arrayBufferToBase64(c);
}
var Ln = "uni-secure-network",
  Un = {
    SYSTEM_ERROR: {
      code: 2e4,
      message: "System error"
    },
    APP_INFO_INVALID: {
      code: 20101,
      message: "Invalid client"
    },
    GET_ENCRYPT_KEY_FAILED: {
      code: 20102,
      message: "Get encrypt key failed"
    }
  },
  Dn = {
    10001: "Secure network is not supported on current playground or unimpsdk",
    10003: "Config missing in current app. If the problem pesist, please contact DCloud.",
    10009: "Encrypt payload failed",
    10010: "Decrypt response failed"
  };
function Mn(e) {
  var _ref35 = e || {},
    t = _ref35.errSubject,
    n = _ref35.subject,
    s = _ref35.errCode,
    r = _ref35.errMsg,
    i = _ref35.code,
    o = _ref35.message,
    a = _ref35.cause;
  return new te({
    subject: t || n || Ln,
    code: s || i || Un.SYSTEM_ERROR.code,
    message: r || o,
    cause: a
  });
}
var qn,
  Fn,
  Kn = null;
var jn = /*#__PURE__*/function (_Xt) {
  (0, _inherits2.default)(jn, _Xt);
  var _super8 = _createSuper(jn);
  function jn(e) {
    var _this18;
    (0, _classCallCheck2.default)(this, jn);
    _this18 = _super8.call(this, e), _this18.clientType = "mp-weixin", _this18.userEncryptKey = null;
    return _this18;
  }
  (0, _createClass2.default)(jn, [{
    key: "isLogin",
    value: function isLogin() {
      return !!this.scopedGlobalCache.mpWeixinCode || !!this.scopedGlobalCache.mpWeixinOpenid;
    }
  }, {
    key: "prepare",
    value: function () {
      var _prepare2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee52() {
        return _regenerator.default.wrap(function _callee52$(_context52) {
          while (1) {
            switch (_context52.prev = _context52.next) {
              case 0:
                if (this.isLogin()) {
                  _context52.next = 7;
                  break;
                }
                if (this.scopedGlobalCache.initPromise) {
                  _context52.next = 3;
                  break;
                }
                throw new Error("`uniCloud.initSecureNetworkByWeixin` has not yet been called");
              case 3:
                _context52.next = 5;
                return this.scopedGlobalCache.initPromise;
              case 5:
                if (this.isLogin()) {
                  _context52.next = 7;
                  break;
                }
                throw new Error("uniCloud.initSecureNetworkByWeixin` has not yet been called or successfully excuted");
              case 7:
              case "end":
                return _context52.stop();
            }
          }
        }, _callee52, this);
      }));
      function prepare() {
        return _prepare2.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "getUserEncryptKey",
    value: function () {
      var _getUserEncryptKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee53() {
        var _this19 = this;
        var e;
        return _regenerator.default.wrap(function _callee53$(_context53) {
          while (1) {
            switch (_context53.prev = _context53.next) {
              case 0:
                if (!this.userEncryptKey) {
                  _context53.next = 2;
                  break;
                }
                return _context53.abrupt("return", this.userEncryptKey);
              case 2:
                if (!(Kn && Kn.expireTime)) {
                  _context53.next = 6;
                  break;
                }
                e = Date.now();
                if (!(Kn.expireTime - e > 0)) {
                  _context53.next = 6;
                  break;
                }
                return _context53.abrupt("return", (this.userEncryptKey = Kn, this.userEncryptKey));
              case 6:
                return _context53.abrupt("return", new Promise(function (e, t) {
                  uni.getUserCryptoManager().getLatestUserKey({
                    success: function success(t) {
                      Kn = t, _this19.userEncryptKey = t, e(_this19.userEncryptKey);
                    },
                    fail: function fail(e) {
                      t(Mn(_objectSpread(_objectSpread({}, Un.GET_ENCRYPT_KEY_FAILED), {}, {
                        cause: e
                      })));
                    }
                  });
                }));
              case 7:
              case "end":
                return _context53.stop();
            }
          }
        }, _callee53, this);
      }));
      function getUserEncryptKey() {
        return _getUserEncryptKey.apply(this, arguments);
      }
      return getUserEncryptKey;
    }()
  }, {
    key: "getWxAppId",
    value: function getWxAppId() {
      return wx.getAccountInfoSync().miniProgram.appId;
    }
  }, {
    key: "platformGetSignOption",
    value: function () {
      var _platformGetSignOption = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee54() {
        var _yield$this$getUserEn, e, t, n;
        return _regenerator.default.wrap(function _callee54$(_context54) {
          while (1) {
            switch (_context54.prev = _context54.next) {
              case 0:
                _context54.next = 2;
                return this.getUserEncryptKey();
              case 2:
                _yield$this$getUserEn = _context54.sent;
                e = _yield$this$getUserEn.encryptKey;
                t = _yield$this$getUserEn.iv;
                n = _yield$this$getUserEn.version;
                return _context54.abrupt("return", {
                  verifyClientSign: Rn(JSON.stringify({
                    data: JSON.stringify({}),
                    appId: this.appId,
                    deviceId: this.deviceId,
                    wxAppId: this.getWxAppId(),
                    simulator: "devtools" === ae().platform,
                    timestamp: Date.now()
                  }), e, t),
                  encryptKeyId: n,
                  mpWeixinCode: this.scopedGlobalCache.mpWeixinCode,
                  mpWeixinOpenid: this.scopedGlobalCache.mpWeixinOpenid
                });
              case 7:
              case "end":
                return _context54.stop();
            }
          }
        }, _callee54, this);
      }));
      function platformGetSignOption() {
        return _platformGetSignOption.apply(this, arguments);
      }
      return platformGetSignOption;
    }()
  }, {
    key: "platformEncryptData",
    value: function () {
      var _platformEncryptData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee55(e) {
        var _yield$this$getUserEn2, t, n, s, r;
        return _regenerator.default.wrap(function _callee55$(_context55) {
          while (1) {
            switch (_context55.prev = _context55.next) {
              case 0:
                _context55.next = 2;
                return this.getUserEncryptKey();
              case 2:
                _yield$this$getUserEn2 = _context55.sent;
                t = _yield$this$getUserEn2.encryptKey;
                n = _yield$this$getUserEn2.iv;
                s = _yield$this$getUserEn2.version;
                r = {
                  secretType: this.secretType,
                  encryptKeyId: s,
                  mpWeixinCode: this.scopedGlobalCache.mpWeixinCode,
                  mpWeixinOpenid: this.scopedGlobalCache.mpWeixinOpenid
                };
                return _context55.abrupt("return", this.secretType === Gt.RESPONSE ? {
                  content: e,
                  _uniCloudOptions: r
                } : {
                  content: Rn(JSON.stringify({
                    data: JSON.stringify(e),
                    appId: this.appId,
                    deviceId: this.deviceId,
                    wxAppId: this.getWxAppId(),
                    simulator: "devtools" === ae().platform,
                    timestamp: Date.now()
                  }), t, n),
                  _uniCloudOptions: r
                });
              case 8:
              case "end":
                return _context55.stop();
            }
          }
        }, _callee55, this);
      }));
      function platformEncryptData(_x48) {
        return _platformEncryptData.apply(this, arguments);
      }
      return platformEncryptData;
    }()
  }, {
    key: "platformDecryptResult",
    value: function () {
      var _platformDecryptResult = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee56(e) {
        var t, _yield$this$getUserEn3, n, s;
        return _regenerator.default.wrap(function _callee56$(_context56) {
          while (1) {
            switch (_context56.prev = _context56.next) {
              case 0:
                t = e.content;
                _context56.next = 3;
                return this.getUserEncryptKey();
              case 3:
                _yield$this$getUserEn3 = _context56.sent;
                n = _yield$this$getUserEn3.encryptKey;
                s = _yield$this$getUserEn3.iv;
                return _context56.abrupt("return", JSON.parse(function (e, t, n) {
                  var s = new Uint8Array(uni.base64ToArrayBuffer(e)),
                    r = new Uint8Array(uni.base64ToArrayBuffer(t)),
                    i = Nn.utils.utf8.toBytes(n),
                    o = new Nn.ModeOfOperation.cbc(r, i),
                    a = Nn.padding.pkcs7.strip(o.decrypt(s));
                  return Nn.utils.utf8.fromBytes(a);
                }(t, n, s)));
              case 7:
              case "end":
                return _context56.stop();
            }
          }
        }, _callee56, this);
      }));
      function platformDecryptResult(_x49) {
        return _platformDecryptResult.apply(this, arguments);
      }
      return platformDecryptResult;
    }()
  }, {
    key: "isClientKeyNotFound",
    value: function isClientKeyNotFound() {
      return !1;
    }
  }]);
  return jn;
}(Xt);
function $n(e) {
  var t = ["hasClientKey", "encryptGetClientKeyPayload", "setClientKey", "encrypt", "decrypt"],
    n = {};
  var _loop = function _loop(_s14) {
    var r = t[_s14];
    n[r] = function () {
      for (var _len2 = arguments.length, t = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        t[_key2] = arguments[_key2];
      }
      return new Promise(function (n, s) {
        "function" == typeof e[r] ? e[r].apply(e, t.concat([function () {
          var _ref36 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            e = _ref36.type,
            t = _ref36.data,
            r = _ref36.errCode,
            i = _ref36.errMsg,
            o = _ref36.errSubject,
            a = _ref36.message;
          "success" === e ? n(t) : s(Mn({
            errCode: r,
            errMsg: Dn[r] || i || a,
            errSubject: o
          }));
        }])) : s(Mn({
          message: "请检查manifest.json内是否开启安全网络模块，另外注意标准基座不支持安全网络模块"
        }));
      });
    };
  };
  for (var _s14 = 0; _s14 < t.length; _s14++) {
    _loop(_s14);
  }
  return n;
}
var Bn = /*#__PURE__*/function (_Xt2) {
  (0, _inherits2.default)(Bn, _Xt2);
  var _super9 = _createSuper(Bn);
  function Bn(e) {
    var _this20;
    (0, _classCallCheck2.default)(this, Bn);
    _this20 = _super9.call(this, e), _this20.clientType = "app", _this20.appUtils = _objectSpread({}, $n(uni.requireNativePlugin("plus"))), _this20.systemInfo = qn || (qn = ae());
    return _this20;
  }
  (0, _createClass2.default)(Bn, [{
    key: "hasClientKey",
    value: function () {
      var _hasClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee57() {
        return _regenerator.default.wrap(function _callee57$(_context57) {
          while (1) {
            switch (_context57.prev = _context57.next) {
              case 0:
                _context57.next = 2;
                return this.appUtils.hasClientKey({
                  provider: this.provider,
                  spaceId: this.spaceId
                });
              case 2:
                this._hasClientKey = _context57.sent;
                return _context57.abrupt("return", this._hasClientKey);
              case 4:
              case "end":
                return _context57.stop();
            }
          }
        }, _callee57, this);
      }));
      function hasClientKey() {
        return _hasClientKey.apply(this, arguments);
      }
      return hasClientKey;
    }()
  }, {
    key: "getAppClientKey",
    value: function () {
      var _getAppClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee58() {
        var _yield$this$appUtils$, e, t, n, s, r;
        return _regenerator.default.wrap(function _callee58$(_context58) {
          while (1) {
            switch (_context58.prev = _context58.next) {
              case 0:
                _context58.next = 2;
                return this.appUtils.encryptGetClientKeyPayload({
                  data: JSON.stringify({})
                });
              case 2:
                _yield$this$appUtils$ = _context58.sent;
                e = _yield$this$appUtils$.data;
                t = _yield$this$appUtils$.key;
                _context58.next = 7;
                return this.uniCloudIns.callFunction({
                  name: "DCloud-clientDB",
                  data: {
                    redirectTo: "encryption",
                    action: "getAppClientKey",
                    data: e,
                    key: t
                  }
                });
              case 7:
                _context58.t0 = _context58.sent.result;
                if (_context58.t0) {
                  _context58.next = 10;
                  break;
                }
                _context58.t0 = {};
              case 10:
                n = _context58.t0;
                if (!(0 !== n.errCode)) {
                  _context58.next = 13;
                  break;
                }
                throw function (e) {
                  return new te({
                    subject: e.errSubject || Ln,
                    code: e.errCode || e.code || Un.SYSTEM_ERROR.code,
                    message: e.errMsg || e.message
                  });
                }(n);
              case 13:
                s = n.clientKey, r = n.key;
                _context58.next = 16;
                return this.appUtils.setClientKey({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  clientKey: s,
                  key: r
                });
              case 16:
              case "end":
                return _context58.stop();
            }
          }
        }, _callee58, this);
      }));
      function getAppClientKey() {
        return _getAppClientKey.apply(this, arguments);
      }
      return getAppClientKey;
    }()
  }, {
    key: "ensureClientKey",
    value: function () {
      var _ensureClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee59() {
        var _this21 = this;
        var _ref37,
          _ref37$forceUpdate,
          e,
          _args59 = arguments;
        return _regenerator.default.wrap(function _callee59$(_context59) {
          while (1) {
            switch (_context59.prev = _context59.next) {
              case 0:
                _ref37 = _args59.length > 0 && _args59[0] !== undefined ? _args59[0] : {}, _ref37$forceUpdate = _ref37.forceUpdate, e = _ref37$forceUpdate === void 0 ? !1 : _ref37$forceUpdate;
                _context59.t1 = !0;
                _context59.next = 4;
                return this.hasClientKey();
              case 4:
                _context59.t2 = _context59.sent;
                _context59.t0 = _context59.t1 !== _context59.t2;
                if (_context59.t0) {
                  _context59.next = 8;
                  break;
                }
                _context59.t0 = e;
              case 8:
                if (!_context59.t0) {
                  _context59.next = 10;
                  break;
                }
                return _context59.abrupt("return", (e && this.scopedGlobalCache.initPromise && this.scopedGlobalCache.initStatus === d || !e && this.scopedGlobalCache.initPromise && this.scopedGlobalCache.initStatus !== f || (this.scopedGlobalCache.initPromise = this.getAppClientKey(), this.scopedGlobalCache.initPromise.then(function (e) {
                  _this21.scopedGlobalCache.initStatus = p;
                }).catch(function (e) {
                  throw _this21.scopedGlobalCache.initStatus = f, e;
                }), this.scopedGlobalCache.initStatus = d), this.scopedGlobalCache.initPromise));
              case 10:
              case "end":
                return _context59.stop();
            }
          }
        }, _callee59, this);
      }));
      function ensureClientKey() {
        return _ensureClientKey.apply(this, arguments);
      }
      return ensureClientKey;
    }()
  }, {
    key: "prepare",
    value: function () {
      var _prepare3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee60() {
        var _ref38,
          _ref38$forceUpdate,
          e,
          _args60 = arguments;
        return _regenerator.default.wrap(function _callee60$(_context60) {
          while (1) {
            switch (_context60.prev = _context60.next) {
              case 0:
                _ref38 = _args60.length > 0 && _args60[0] !== undefined ? _args60[0] : {}, _ref38$forceUpdate = _ref38.forceUpdate, e = _ref38$forceUpdate === void 0 ? !1 : _ref38$forceUpdate;
                _context60.next = 3;
                return this.ensureClientKey({
                  forceUpdate: e
                });
              case 3:
              case "end":
                return _context60.stop();
            }
          }
        }, _callee60, this);
      }));
      function prepare() {
        return _prepare3.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "platformGetSignOption",
    value: function () {
      var _platformGetSignOption2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee61() {
        var _yield$this$appUtils$2, e, t;
        return _regenerator.default.wrap(function _callee61$(_context61) {
          while (1) {
            switch (_context61.prev = _context61.next) {
              case 0:
                _context61.next = 2;
                return this.appUtils.encrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: JSON.stringify({})
                });
              case 2:
                _yield$this$appUtils$2 = _context61.sent;
                e = _yield$this$appUtils$2.data;
                t = _yield$this$appUtils$2.key;
                return _context61.abrupt("return", {
                  verifyClientSign: e,
                  encryptKeyId: t
                });
              case 6:
              case "end":
                return _context61.stop();
            }
          }
        }, _callee61, this);
      }));
      function platformGetSignOption() {
        return _platformGetSignOption2.apply(this, arguments);
      }
      return platformGetSignOption;
    }()
  }, {
    key: "platformEncryptData",
    value: function () {
      var _platformEncryptData2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee62(e) {
        var _yield$this$appUtils$3, t, n, s;
        return _regenerator.default.wrap(function _callee62$(_context62) {
          while (1) {
            switch (_context62.prev = _context62.next) {
              case 0:
                _context62.next = 2;
                return this.appUtils.encrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: JSON.stringify(e)
                });
              case 2:
                _yield$this$appUtils$3 = _context62.sent;
                t = _yield$this$appUtils$3.data;
                n = _yield$this$appUtils$3.key;
                s = {
                  secretType: this.secretType,
                  encryptKeyId: n
                };
                return _context62.abrupt("return", this.secretType === Gt.RESPONSE ? {
                  content: e,
                  _uniCloudOptions: s
                } : {
                  content: t,
                  _uniCloudOptions: s
                });
              case 7:
              case "end":
                return _context62.stop();
            }
          }
        }, _callee62, this);
      }));
      function platformEncryptData(_x50) {
        return _platformEncryptData2.apply(this, arguments);
      }
      return platformEncryptData;
    }()
  }, {
    key: "platformDecryptResult",
    value: function () {
      var _platformDecryptResult2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee63(e) {
        var t, _e$_uniCloudOptions, n, s, r;
        return _regenerator.default.wrap(function _callee63$(_context63) {
          while (1) {
            switch (_context63.prev = _context63.next) {
              case 0:
                t = e.content;
                _e$_uniCloudOptions = e._uniCloudOptions;
                n = _e$_uniCloudOptions === void 0 ? {} : _e$_uniCloudOptions;
                s = n.encryptKeyId;
                _context63.next = 6;
                return this.appUtils.decrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: t,
                  key: s
                });
              case 6:
                r = _context63.sent;
                return _context63.abrupt("return", JSON.parse(r.data));
              case 8:
              case "end":
                return _context63.stop();
            }
          }
        }, _callee63, this);
      }));
      function platformDecryptResult(_x51) {
        return _platformDecryptResult2.apply(this, arguments);
      }
      return platformDecryptResult;
    }()
  }, {
    key: "isClientKeyNotFound",
    value: function isClientKeyNotFound() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = e.result || {};
      return 70009 === t.errCode && t.errSubject === Ln;
    }
  }]);
  return Bn;
}(Xt);
function Wn() {
  var _ref39 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref39.secretType;
  return e === Gt.REQUEST || e === Gt.RESPONSE || e === Gt.BOTH;
}
function Hn() {
  var _ref40 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref40.name,
    _ref40$data = _ref40.data,
    t = _ref40$data === void 0 ? {} : _ref40$data;
  return "app" === C && "DCloud-clientDB" === e && "encryption" === t.redirectTo && "getAppClientKey" === t.action;
}
function Jn() {
  var _ref41 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref41.provider,
    t = _ref41.spaceId,
    n = _ref41.functionName;
  var _ae = ae(),
    s = _ae.appId,
    r = _ae.uniPlatform,
    i = _ae.osName;
  var o = r;
  "app" === r && (o = i);
  var a = function () {
    var _ref42 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref42.provider,
      t = _ref42.spaceId;
    var n = P;
    if (!n) return {};
    e = function (e) {
      return "tencent" === e ? "tcb" : e;
    }(e);
    var s = n.find(function (n) {
      return n.provider === e && n.spaceId === t;
    });
    return s && s.config;
  }({
    provider: e,
    spaceId: t
  });
  if (!a || !a.accessControl || !a.accessControl.enable) return !1;
  var c = a.accessControl.function || {},
    u = Object.keys(c);
  if (0 === u.length) return !0;
  var h = function (e, t) {
    var n, s, r;
    for (var _i2 = 0; _i2 < e.length; _i2++) {
      var _o2 = e[_i2];
      _o2 !== t ? "*" !== _o2 ? _o2.split(",").map(function (e) {
        return e.trim();
      }).indexOf(t) > -1 && (s = _o2) : r = _o2 : n = _o2;
    }
    return n || s || r;
  }(u, n);
  if (!h) return !1;
  if ((c[h] || []).find(function () {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return e.appId === s && (e.platform || "").toLowerCase() === o.toLowerCase();
  })) return !0;
  throw console.error("\u6B64\u5E94\u7528[appId: ".concat(s, ", platform: ").concat(o, "]\u4E0D\u5728\u4E91\u7AEF\u914D\u7F6E\u7684\u5141\u8BB8\u8BBF\u95EE\u7684\u5E94\u7528\u5217\u8868\u5185\uFF0C\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/secure-network.html#verify-client")), Mn(Un.APP_INFO_INVALID);
}
function zn(_ref43) {
  var e = _ref43.functionName,
    t = _ref43.result,
    n = _ref43.logPvd;
  if (b && this.__dev__.debugLog && t && t.requestId) {
    var _s15 = JSON.stringify({
      spaceId: this.config.spaceId,
      functionName: e,
      requestId: t.requestId
    });
    console.log("[".concat(n, "-request]").concat(_s15, "[/").concat(n, "-request]"));
  }
}
function Vn(e) {
  var t = e.callFunction,
    n = function n(_n12) {
      var _this22 = this;
      var s = _n12.name;
      _n12.data = Bt.call(e, {
        data: _n12.data
      });
      var r = {
          aliyun: "aliyun",
          tencent: "tcb",
          tcb: "tcb",
          alipay: "alipay",
          dcloud: "dcloud"
        }[this.config.provider],
        i = Wn(_n12),
        o = Hn(_n12),
        a = i || o;
      return t.call(this, _n12).then(function (e) {
        return e.errCode = 0, !a && zn.call(_this22, {
          functionName: s,
          result: e,
          logPvd: r
        }), Promise.resolve(e);
      }, function (e) {
        return !a && zn.call(_this22, {
          functionName: s,
          result: e,
          logPvd: r
        }), e && e.message && (e.message = function () {
          var _ref44 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref44$message = _ref44.message,
            e = _ref44$message === void 0 ? "" : _ref44$message,
            _ref44$extraInfo = _ref44.extraInfo,
            t = _ref44$extraInfo === void 0 ? {} : _ref44$extraInfo,
            _ref44$formatter = _ref44.formatter,
            n = _ref44$formatter === void 0 ? [] : _ref44$formatter;
          for (var _s16 = 0; _s16 < n.length; _s16++) {
            var _n$_s = n[_s16],
              _r6 = _n$_s.rule,
              _i3 = _n$_s.content,
              _o3 = _n$_s.mode,
              _a2 = e.match(_r6);
            if (!_a2) continue;
            var _c2 = _i3;
            for (var _e20 = 1; _e20 < _a2.length; _e20++) {
              _c2 = Vt(_c2, "{$".concat(_e20, "}"), _a2[_e20]);
            }
            for (var _e21 in t) {
              _c2 = Vt(_c2, "{".concat(_e21, "}"), t[_e21]);
            }
            return "replace" === _o3 ? _c2 : e + _c2;
          }
          return e;
        }({
          message: "[".concat(_n12.name, "]: ").concat(e.message),
          formatter: Ht,
          extraInfo: {
            functionName: s
          }
        })), Promise.reject(e);
      });
    };
  e.callFunction = function (t) {
    var _e$config = e.config,
      s = _e$config.provider,
      r = _e$config.spaceId,
      i = t.name;
    var o, a;
    if (t.data = t.data || {}, b && e.__dev__.debugInfo && !e.__dev__.debugInfo.forceRemote && O ? (e._callCloudFunction || (e._callCloudFunction = n, e._callLocalFunction = Wt), o = Wt) : o = n, o = o.bind(e), Hn(t)) a = n.call(e, t);else if (function (_ref45) {
      var e = _ref45.name,
        _ref45$data = _ref45.data,
        t = _ref45$data === void 0 ? {} : _ref45$data;
      return "mp-weixin" === C && "uni-id-co" === e && "secureNetworkHandshakeByWeixin" === t.method;
    }(t)) a = o.call(e, t);else if (Wn(t)) {
      a = new Fn({
        secretType: t.secretType,
        uniCloudIns: e
      }).wrapEncryptDataCallFunction(n.bind(e))(t);
    } else if (Jn({
      provider: s,
      spaceId: r,
      functionName: i
    })) {
      a = new Fn({
        secretType: t.secretType,
        uniCloudIns: e
      }).wrapVerifyClientCallFunction(n.bind(e))(t);
    } else a = o(t);
    return Object.defineProperty(a, "result", {
      get: function get() {
        return console.warn("当前返回结果为Promise类型，不可直接访问其result属性，详情请参考：https://uniapp.dcloud.net.cn/uniCloud/faq?id=promise"), {};
      }
    }), a.then(function (e) {
      return "undefined" != typeof UTSJSONObject && (e.result = new UTSJSONObject(e.result)), e;
    });
  };
}
Fn = "mp-weixin" !== C && "app" !== C ? /*#__PURE__*/function () {
  function _class2() {
    (0, _classCallCheck2.default)(this, _class2);
    throw Mn({
      message: "Platform ".concat(C, " is not supported by secure network")
    });
  }
  return (0, _createClass2.default)(_class2);
}() : k ? "mp-weixin" === C ? jn : Bn : /*#__PURE__*/function () {
  function _class3() {
    (0, _classCallCheck2.default)(this, _class3);
    throw Mn({
      message: "Platform ".concat(C, " is not enabled, please check whether secure network module is enabled in your manifest.json")
    });
  }
  return (0, _createClass2.default)(_class3);
}();
var Gn = Symbol("CLIENT_DB_INTERNAL");
function Yn(e, t) {
  return e.then = "DoNotReturnProxyWithAFunctionNamedThen", e._internalType = Gn, e.inspect = null, e.__ob__ = void 0, new Proxy(e, {
    get: function get(e, n, s) {
      if ("_uniClient" === n) return null;
      if ("symbol" == (0, _typeof2.default)(n)) return e[n];
      if (n in e || "string" != typeof n) {
        var _t12 = e[n];
        return "function" == typeof _t12 ? _t12.bind(e) : _t12;
      }
      return t.get(e, n, s);
    }
  });
}
function Qn(e) {
  return {
    on: function on(t, n) {
      e[t] = e[t] || [], e[t].indexOf(n) > -1 || e[t].push(n);
    },
    off: function off(t, n) {
      e[t] = e[t] || [];
      var s = e[t].indexOf(n);
      -1 !== s && e[t].splice(s, 1);
    }
  };
}
var Xn = ["db.Geo", "db.command", "command.aggregate"];
function Zn(e, t) {
  return Xn.indexOf("".concat(e, ".").concat(t)) > -1;
}
function es(e) {
  switch (g(e)) {
    case "array":
      return e.map(function (e) {
        return es(e);
      });
    case "object":
      return e._internalType === Gn || Object.keys(e).forEach(function (t) {
        e[t] = es(e[t]);
      }), e;
    case "regexp":
      return {
        $regexp: {
          source: e.source,
          flags: e.flags
        }
      };
    case "date":
      return {
        $date: e.toISOString()
      };
    default:
      return e;
  }
}
function ts(e) {
  return e && e.content && e.content.$method;
}
var ns = /*#__PURE__*/function () {
  function ns(e, t, n) {
    (0, _classCallCheck2.default)(this, ns);
    this.content = e, this.prevStage = t || null, this.udb = null, this._database = n;
  }
  (0, _createClass2.default)(ns, [{
    key: "toJSON",
    value: function toJSON() {
      var e = this;
      var t = [e.content];
      for (; e.prevStage;) {
        e = e.prevStage, t.push(e.content);
      }
      return {
        $db: t.reverse().map(function (e) {
          return {
            $method: e.$method,
            $param: es(e.$param)
          };
        })
      };
    }
  }, {
    key: "toString",
    value: function toString() {
      return JSON.stringify(this.toJSON());
    }
  }, {
    key: "getAction",
    value: function getAction() {
      var e = this.toJSON().$db.find(function (e) {
        return "action" === e.$method;
      });
      return e && e.$param && e.$param[0];
    }
  }, {
    key: "getCommand",
    value: function getCommand() {
      return {
        $db: this.toJSON().$db.filter(function (e) {
          return "action" !== e.$method;
        })
      };
    }
  }, {
    key: "isAggregate",
    get: function get() {
      var e = this;
      for (; e;) {
        var t = ts(e),
          _n13 = ts(e.prevStage);
        if ("aggregate" === t && "collection" === _n13 || "pipeline" === t) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "isCommand",
    get: function get() {
      var e = this;
      for (; e;) {
        if ("command" === ts(e)) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "isAggregateCommand",
    get: function get() {
      var e = this;
      for (; e;) {
        var t = ts(e),
          _n14 = ts(e.prevStage);
        if ("aggregate" === t && "command" === _n14) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "getNextStageFn",
    value: function getNextStageFn(e) {
      var t = this;
      return function () {
        return ss({
          $method: e,
          $param: es(Array.from(arguments))
        }, t, t._database);
      };
    }
  }, {
    key: "count",
    get: function get() {
      return this.isAggregate ? this.getNextStageFn("count") : function () {
        return this._send("count", Array.from(arguments));
      };
    }
  }, {
    key: "remove",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("remove") : function () {
        return this._send("remove", Array.from(arguments));
      };
    }
  }, {
    key: "get",
    value: function get() {
      return this._send("get", Array.from(arguments));
    }
  }, {
    key: "add",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("add") : function () {
        return this._send("add", Array.from(arguments));
      };
    }
  }, {
    key: "update",
    value: function update() {
      return this._send("update", Array.from(arguments));
    }
  }, {
    key: "end",
    value: function end() {
      return this._send("end", Array.from(arguments));
    }
  }, {
    key: "set",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("set") : function () {
        throw new Error("JQL禁止使用set方法");
      };
    }
  }, {
    key: "_send",
    value: function _send(e, t) {
      var n = this.getAction(),
        s = this.getCommand();
      if (s.$db.push({
        $method: e,
        $param: es(t)
      }), b) {
        var _e22 = s.$db.find(function (e) {
            return "collection" === e.$method;
          }),
          _t13 = _e22 && _e22.$param;
        _t13 && 1 === _t13.length && "string" == typeof _e22.$param[0] && _e22.$param[0].indexOf(",") > -1 && console.warn("检测到使用JQL语法联表查询时，未使用getTemp先过滤主表数据，在主表数据量大的情况下可能会查询缓慢。\n- 如何优化请参考此文档：https://uniapp.dcloud.net.cn/uniCloud/jql?id=lookup-with-temp \n- 如果主表数据量很小请忽略此信息，项目发行时不会出现此提示。");
      }
      return this._database._callCloudFunction({
        action: n,
        command: s
      });
    }
  }]);
  return ns;
}();
function ss(e, t, n) {
  return Yn(new ns(e, t, n), {
    get: function get(e, t) {
      var s = "db";
      return e && e.content && (s = e.content.$method), Zn(s, t) ? ss({
        $method: t
      }, e, n) : function () {
        return ss({
          $method: t,
          $param: es(Array.from(arguments))
        }, e, n);
      };
    }
  });
}
function rs(_ref46) {
  var e = _ref46.path,
    t = _ref46.method;
  return /*#__PURE__*/function () {
    function _class4() {
      (0, _classCallCheck2.default)(this, _class4);
      this.param = Array.from(arguments);
    }
    (0, _createClass2.default)(_class4, [{
      key: "toJSON",
      value: function toJSON() {
        return {
          $newDb: [].concat((0, _toConsumableArray2.default)(e.map(function (e) {
            return {
              $method: e
            };
          })), [{
            $method: t,
            $param: this.param
          }])
        };
      }
    }, {
      key: "toString",
      value: function toString() {
        return JSON.stringify(this.toJSON());
      }
    }]);
    return _class4;
  }();
}
var is = /*#__PURE__*/function () {
  function is() {
    var _ref47 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref47$uniClient = _ref47.uniClient,
      e = _ref47$uniClient === void 0 ? {} : _ref47$uniClient,
      _ref47$isJQL = _ref47.isJQL,
      t = _ref47$isJQL === void 0 ? !1 : _ref47$isJQL;
    (0, _classCallCheck2.default)(this, is);
    this._uniClient = e, this._authCallBacks = {}, this._dbCallBacks = {}, e._isDefault && (this._dbCallBacks = U("_globalUniCloudDatabaseCallback")), t || (this.auth = Qn(this._authCallBacks)), this._isJQL = t, Object.assign(this, Qn(this._dbCallBacks)), this.env = Yn({}, {
      get: function get(e, t) {
        return {
          $env: t
        };
      }
    }), this.Geo = Yn({}, {
      get: function get(e, t) {
        return rs({
          path: ["Geo"],
          method: t
        });
      }
    }), this.serverDate = rs({
      path: [],
      method: "serverDate"
    }), this.RegExp = rs({
      path: [],
      method: "RegExp"
    });
  }
  (0, _createClass2.default)(is, [{
    key: "getCloudEnv",
    value: function getCloudEnv(e) {
      if ("string" != typeof e || !e.trim()) throw new Error("getCloudEnv参数错误");
      return {
        $env: e.replace("$cloudEnv_", "")
      };
    }
  }, {
    key: "_callback",
    value: function _callback(e, t) {
      var n = this._dbCallBacks;
      n[e] && n[e].forEach(function (e) {
        e.apply(void 0, (0, _toConsumableArray2.default)(t));
      });
    }
  }, {
    key: "_callbackAuth",
    value: function _callbackAuth(e, t) {
      var n = this._authCallBacks;
      n[e] && n[e].forEach(function (e) {
        e.apply(void 0, (0, _toConsumableArray2.default)(t));
      });
    }
  }, {
    key: "multiSend",
    value: function multiSend() {
      var e = Array.from(arguments),
        t = e.map(function (e) {
          var t = e.getAction(),
            n = e.getCommand();
          if ("getTemp" !== n.$db[n.$db.length - 1].$method) throw new Error("multiSend只支持子命令内使用getTemp");
          return {
            action: t,
            command: n
          };
        });
      return this._callCloudFunction({
        multiCommand: t,
        queryList: e
      });
    }
  }]);
  return is;
}();
function os(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return Yn(new e(t), {
    get: function get(e, t) {
      return Zn("db", t) ? ss({
        $method: t
      }, null, e) : function () {
        return ss({
          $method: t,
          $param: es(Array.from(arguments))
        }, null, e);
      };
    }
  });
}
var as = /*#__PURE__*/function (_is) {
  (0, _inherits2.default)(as, _is);
  var _super10 = _createSuper(as);
  function as() {
    (0, _classCallCheck2.default)(this, as);
    return _super10.apply(this, arguments);
  }
  (0, _createClass2.default)(as, [{
    key: "_parseResult",
    value: function _parseResult(e) {
      return this._isJQL ? e.result : e;
    }
  }, {
    key: "_callCloudFunction",
    value: function _callCloudFunction(_ref48) {
      var _this23 = this;
      var e = _ref48.action,
        t = _ref48.command,
        n = _ref48.multiCommand,
        s = _ref48.queryList;
      function r(e, t) {
        if (n && s) for (var _n15 = 0; _n15 < s.length; _n15++) {
          var _r7 = s[_n15];
          _r7.udb && "function" == typeof _r7.udb.setResult && (t ? _r7.udb.setResult(t) : _r7.udb.setResult(e.result.dataList[_n15]));
        }
      }
      var i = this,
        o = this._isJQL ? "databaseForJQL" : "database";
      function a(e) {
        return i._callback("error", [e]), j($(o, "fail"), e).then(function () {
          return j($(o, "complete"), e);
        }).then(function () {
          return r(null, e), Y(H.RESPONSE, {
            type: J.CLIENT_DB,
            content: e
          }), Promise.reject(e);
        });
      }
      var c = j($(o, "invoke")),
        u = this._uniClient;
      return c.then(function () {
        return u.callFunction({
          name: "DCloud-clientDB",
          type: l.CLIENT_DB,
          data: {
            action: e,
            command: t,
            multiCommand: n
          }
        });
      }).then(function (e) {
        var _e$result = e.result,
          t = _e$result.code,
          n = _e$result.message,
          s = _e$result.token,
          c = _e$result.tokenExpired,
          _e$result$systemInfo = _e$result.systemInfo,
          u = _e$result$systemInfo === void 0 ? [] : _e$result$systemInfo;
        if (u) for (var _e23 = 0; _e23 < u.length; _e23++) {
          var _u$_e = u[_e23],
            _t14 = _u$_e.level,
            _n16 = _u$_e.message,
            _s17 = _u$_e.detail;
          var _r8 = "[System Info]" + _n16;
          _s17 && (_r8 = "".concat(_r8, "\n\u8BE6\u7EC6\u4FE1\u606F\uFF1A").concat(_s17)), (console["app" === C && "warn" === _t14 ? "error" : _t14] || console.log)(_r8);
        }
        if (t) {
          return a(new te({
            code: t,
            message: n,
            requestId: e.requestId
          }));
        }
        e.result.errCode = e.result.errCode || e.result.code, e.result.errMsg = e.result.errMsg || e.result.message, s && c && (re({
          token: s,
          tokenExpired: c
        }), _this23._callbackAuth("refreshToken", [{
          token: s,
          tokenExpired: c
        }]), _this23._callback("refreshToken", [{
          token: s,
          tokenExpired: c
        }]), Y(H.REFRESH_TOKEN, {
          token: s,
          tokenExpired: c
        }));
        var h = [{
          prop: "affectedDocs",
          tips: "affectedDocs不再推荐使用，请使用inserted/deleted/updated/data.length替代"
        }, {
          prop: "code",
          tips: "code不再推荐使用，请使用errCode替代"
        }, {
          prop: "message",
          tips: "message不再推荐使用，请使用errMsg替代"
        }];
        var _loop2 = function _loop2(_t15) {
          var _h$_t = h[_t15],
            n = _h$_t.prop,
            s = _h$_t.tips;
          if (n in e.result) {
            var _t16 = e.result[n];
            Object.defineProperty(e.result, n, {
              get: function get() {
                return console.warn(s), _t16;
              }
            });
          }
        };
        for (var _t15 = 0; _t15 < h.length; _t15++) {
          _loop2(_t15);
        }
        return function (e) {
          return j($(o, "success"), e).then(function () {
            return j($(o, "complete"), e);
          }).then(function () {
            r(e, null);
            var t = i._parseResult(e);
            return Y(H.RESPONSE, {
              type: J.CLIENT_DB,
              content: t
            }), Promise.resolve(t);
          });
        }(e);
      }, function (e) {
        /fc_function_not_found|FUNCTION_NOT_FOUND/g.test(e.message) && console.warn("clientDB未初始化，请在web控制台保存一次schema以开启clientDB");
        return a(new te({
          code: e.code || "SYSTEM_ERROR",
          message: e.message,
          requestId: e.requestId
        }));
      });
    }
  }]);
  return as;
}(is);
var cs = "token无效，跳转登录页面",
  us = "token过期，跳转登录页面",
  hs = {
    TOKEN_INVALID_TOKEN_EXPIRED: us,
    TOKEN_INVALID_INVALID_CLIENTID: cs,
    TOKEN_INVALID: cs,
    TOKEN_INVALID_WRONG_TOKEN: cs,
    TOKEN_INVALID_ANONYMOUS_USER: cs
  },
  ls = {
    "uni-id-token-expired": us,
    "uni-id-check-token-failed": cs,
    "uni-id-token-not-exist": cs,
    "uni-id-check-device-feature-failed": cs
  };
function ds(e, t) {
  var n = "";
  return n = e ? "".concat(e, "/").concat(t) : t, n.replace(/^\//, "");
}
function ps() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var n = [],
    s = [];
  return e.forEach(function (e) {
    !0 === e.needLogin ? n.push(ds(t, e.path)) : !1 === e.needLogin && s.push(ds(t, e.path));
  }), {
    needLoginPage: n,
    notNeedLoginPage: s
  };
}
function fs(e) {
  return e.split("?")[0].replace(/^\//, "");
}
function gs() {
  return function (e) {
    var t = e && e.$page && e.$page.fullPath || "";
    return t ? ("/" !== t.charAt(0) && (t = "/" + t), t) : t;
  }(function () {
    var e = getCurrentPages();
    return e[e.length - 1];
  }());
}
function ms() {
  return fs(gs());
}
function ys() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!e) return !1;
  if (!(t && t.list && t.list.length)) return !1;
  var n = t.list,
    s = fs(e);
  return n.some(function (e) {
    return e.pagePath === s;
  });
}
var _s = !!_pages.default.uniIdRouter;
var _ref49 = function () {
    var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pages.default,
      _ref8$pages = _ref8.pages,
      t = _ref8$pages === void 0 ? [] : _ref8$pages,
      _ref8$subPackages = _ref8.subPackages,
      n = _ref8$subPackages === void 0 ? [] : _ref8$subPackages,
      _ref8$uniIdRouter = _ref8.uniIdRouter,
      s = _ref8$uniIdRouter === void 0 ? {} : _ref8$uniIdRouter,
      _ref8$tabBar = _ref8.tabBar,
      r = _ref8$tabBar === void 0 ? {} : _ref8$tabBar;
    var i = s.loginPage,
      _s$needLogin = s.needLogin,
      o = _s$needLogin === void 0 ? [] : _s$needLogin,
      _s$resToLogin = s.resToLogin,
      a = _s$resToLogin === void 0 ? !0 : _s$resToLogin,
      _ps = ps(t),
      c = _ps.needLoginPage,
      u = _ps.notNeedLoginPage,
      _ref9 = function () {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var t = [],
          n = [];
        return e.forEach(function (e) {
          var s = e.root,
            _e$pages = e.pages,
            r = _e$pages === void 0 ? [] : _e$pages,
            _ps2 = ps(r, s),
            i = _ps2.needLoginPage,
            o = _ps2.notNeedLoginPage;
          t.push.apply(t, (0, _toConsumableArray2.default)(i)), n.push.apply(n, (0, _toConsumableArray2.default)(o));
        }), {
          needLoginPage: t,
          notNeedLoginPage: n
        };
      }(n),
      h = _ref9.needLoginPage,
      l = _ref9.notNeedLoginPage;
    return {
      loginPage: i,
      routerNeedLogin: o,
      resToLogin: a,
      needLoginPage: [].concat((0, _toConsumableArray2.default)(c), (0, _toConsumableArray2.default)(h)),
      notNeedLoginPage: [].concat((0, _toConsumableArray2.default)(u), (0, _toConsumableArray2.default)(l)),
      loginPageInTabBar: ys(i, r)
    };
  }(),
  ws = _ref49.loginPage,
  vs = _ref49.routerNeedLogin,
  Is = _ref49.resToLogin,
  Ss = _ref49.needLoginPage,
  Ts = _ref49.notNeedLoginPage,
  bs = _ref49.loginPageInTabBar;
if (Ss.indexOf(ws) > -1) throw new Error("Login page [".concat(ws, "] should not be \"needLogin\", please check your pages.json"));
function Es(e) {
  var t = ms();
  if ("/" === e.charAt(0)) return e;
  var _e$split = e.split("?"),
    _e$split2 = (0, _slicedToArray2.default)(_e$split, 2),
    n = _e$split2[0],
    s = _e$split2[1],
    r = n.replace(/^\//, "").split("/"),
    i = t.split("/");
  i.pop();
  for (var _e24 = 0; _e24 < r.length; _e24++) {
    var _t17 = r[_e24];
    ".." === _t17 ? i.pop() : "." !== _t17 && i.push(_t17);
  }
  return "" === i[0] && i.shift(), "/" + i.join("/") + (s ? "?" + s : "");
}
function ks(e) {
  var t = fs(Es(e));
  return !(Ts.indexOf(t) > -1) && (Ss.indexOf(t) > -1 || vs.some(function (t) {
    return function (e, t) {
      return new RegExp(t).test(e);
    }(e, t);
  }));
}
function Ps(_ref31) {
  var e = _ref31.redirect;
  var t = fs(e),
    n = fs(ws);
  return ms() !== n && t !== n;
}
function Cs() {
  var _ref33 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref33.api,
    t = _ref33.redirect;
  if (!t || !Ps({
    redirect: t
  })) return;
  var n = function (e, t) {
    return "/" !== e.charAt(0) && (e = "/" + e), t ? e.indexOf("?") > -1 ? e + "&uniIdRedirectUrl=".concat(encodeURIComponent(t)) : e + "?uniIdRedirectUrl=".concat(encodeURIComponent(t)) : e;
  }(ws, t);
  bs ? "navigateTo" !== e && "redirectTo" !== e || (e = "switchTab") : "switchTab" === e && (e = "navigateTo");
  var s = {
    navigateTo: uni.navigateTo,
    redirectTo: uni.redirectTo,
    switchTab: uni.switchTab,
    reLaunch: uni.reLaunch
  };
  setTimeout(function () {
    s[e]({
      url: n
    });
  }, 0);
}
function As() {
  var _ref50 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref50.url;
  var t = {
      abortLoginPageJump: !1,
      autoToLoginPage: !1
    },
    n = function () {
      var _se4 = se(),
        e = _se4.token,
        t = _se4.tokenExpired;
      var n;
      if (e) {
        if (t < Date.now()) {
          var _e25 = "uni-id-token-expired";
          n = {
            errCode: _e25,
            errMsg: ls[_e25]
          };
        }
      } else {
        var _e26 = "uni-id-check-token-failed";
        n = {
          errCode: _e26,
          errMsg: ls[_e26]
        };
      }
      return n;
    }();
  if (ks(e) && n) {
    n.uniIdRedirectUrl = e;
    if (z(H.NEED_LOGIN).length > 0) return setTimeout(function () {
      Y(H.NEED_LOGIN, n);
    }, 0), t.abortLoginPageJump = !0, t;
    t.autoToLoginPage = !0;
  }
  return t;
}
function Os() {
  !function () {
    var e = gs(),
      _As = As({
        url: e
      }),
      t = _As.abortLoginPageJump,
      n = _As.autoToLoginPage;
    t || n && Cs({
      api: "redirectTo",
      redirect: e
    });
  }();
  var e = ["navigateTo", "redirectTo", "reLaunch", "switchTab"];
  var _loop3 = function _loop3(_t18) {
    var n = e[_t18];
    uni.addInterceptor(n, {
      invoke: function invoke(e) {
        var _As2 = As({
            url: e.url
          }),
          t = _As2.abortLoginPageJump,
          s = _As2.autoToLoginPage;
        return t ? e : s ? (Cs({
          api: n,
          redirect: Es(e.url)
        }), !1) : e;
      }
    });
  };
  for (var _t18 = 0; _t18 < e.length; _t18++) {
    _loop3(_t18);
  }
}
function xs() {
  this.onResponse(function (e) {
    var t = e.type,
      n = e.content;
    var s = !1;
    switch (t) {
      case "cloudobject":
        s = function (e) {
          if ("object" != (0, _typeof2.default)(e)) return !1;
          var _ref51 = e || {},
            t = _ref51.errCode;
          return t in ls;
        }(n);
        break;
      case "clientdb":
        s = function (e) {
          if ("object" != (0, _typeof2.default)(e)) return !1;
          var _ref52 = e || {},
            t = _ref52.errCode;
          return t in hs;
        }(n);
    }
    s && function () {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = z(H.NEED_LOGIN);
      Z().then(function () {
        var n = gs();
        if (n && Ps({
          redirect: n
        })) return t.length > 0 ? Y(H.NEED_LOGIN, Object.assign({
          uniIdRedirectUrl: n
        }, e)) : void (ws && Cs({
          api: "navigateTo",
          redirect: n
        }));
      });
    }(n);
  });
}
function Ns(e) {
  !function (e) {
    e.onResponse = function (e) {
      V(H.RESPONSE, e);
    }, e.offResponse = function (e) {
      G(H.RESPONSE, e);
    };
  }(e), function (e) {
    e.onNeedLogin = function (e) {
      V(H.NEED_LOGIN, e);
    }, e.offNeedLogin = function (e) {
      G(H.NEED_LOGIN, e);
    }, _s && (U(Yt).needLoginInit || (U(Yt).needLoginInit = !0, Z().then(function () {
      Os.call(e);
    }), Is && xs.call(e)));
  }(e), function (e) {
    e.onRefreshToken = function (e) {
      V(H.REFRESH_TOKEN, e);
    }, e.offRefreshToken = function (e) {
      G(H.REFRESH_TOKEN, e);
    };
  }(e);
}
var Rs;
var Ls = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  Us = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
function Ds() {
  var e = se().token || "",
    t = e.split(".");
  if (!e || 3 !== t.length) return {
    uid: null,
    role: [],
    permission: [],
    tokenExpired: 0
  };
  var n;
  try {
    n = JSON.parse((s = t[1], decodeURIComponent(Rs(s).split("").map(function (e) {
      return "%" + ("00" + e.charCodeAt(0).toString(16)).slice(-2);
    }).join(""))));
  } catch (e) {
    throw new Error("获取当前用户信息出错，详细错误信息为：" + e.message);
  }
  var s;
  return n.tokenExpired = 1e3 * n.exp, delete n.exp, delete n.iat, n;
}
Rs = "function" != typeof atob ? function (e) {
  if (e = String(e).replace(/[\t\n\f\r ]+/g, ""), !Us.test(e)) throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
  var t;
  e += "==".slice(2 - (3 & e.length));
  for (var n, s, r = "", i = 0; i < e.length;) {
    t = Ls.indexOf(e.charAt(i++)) << 18 | Ls.indexOf(e.charAt(i++)) << 12 | (n = Ls.indexOf(e.charAt(i++))) << 6 | (s = Ls.indexOf(e.charAt(i++))), r += 64 === n ? String.fromCharCode(t >> 16 & 255) : 64 === s ? String.fromCharCode(t >> 16 & 255, t >> 8 & 255) : String.fromCharCode(t >> 16 & 255, t >> 8 & 255, 255 & t);
  }
  return r;
} : atob;
var Ms = n(function (e, t) {
    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var n = "chooseAndUploadFile:ok",
      s = "chooseAndUploadFile:fail";
    function r(e, t) {
      return e.tempFiles.forEach(function (e, n) {
        e.name || (e.name = e.path.substring(e.path.lastIndexOf("/") + 1)), t && (e.fileType = t), e.cloudPath = Date.now() + "_" + n + e.name.substring(e.name.lastIndexOf("."));
      }), e.tempFilePaths || (e.tempFilePaths = e.tempFiles.map(function (e) {
        return e.path;
      })), e;
    }
    function i(e, t, _ref53) {
      var s = _ref53.onChooseFile,
        r = _ref53.onUploadProgress;
      return t.then(function (e) {
        if (s) {
          var _t19 = s(e);
          if (void 0 !== _t19) return Promise.resolve(_t19).then(function (t) {
            return void 0 === t ? e : t;
          });
        }
        return e;
      }).then(function (t) {
        return !1 === t ? {
          errMsg: n,
          tempFilePaths: [],
          tempFiles: []
        } : function (e, t) {
          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;
          var r = arguments.length > 3 ? arguments[3] : undefined;
          (t = Object.assign({}, t)).errMsg = n;
          var i = t.tempFiles,
            o = i.length;
          var a = 0;
          return new Promise(function (n) {
            for (; a < s;) {
              c();
            }
            function c() {
              var s = a++;
              if (s >= o) return void (!i.find(function (e) {
                return !e.url && !e.errMsg;
              }) && n(t));
              var u = i[s];
              e.uploadFile({
                provider: u.provider,
                filePath: u.path,
                cloudPath: u.cloudPath,
                fileType: u.fileType,
                cloudPathAsRealPath: u.cloudPathAsRealPath,
                onUploadProgress: function onUploadProgress(e) {
                  e.index = s, e.tempFile = u, e.tempFilePath = u.path, r && r(e);
                }
              }).then(function (e) {
                u.url = e.fileID, s < o && c();
              }).catch(function (e) {
                u.errMsg = e.errMsg || e.message, s < o && c();
              });
            }
          });
        }(e, t, 5, r);
      });
    }
    t.initChooseAndUploadFile = function (e) {
      return function () {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
          type: "all"
        };
        return "image" === t.type ? i(e, function (e) {
          var t = e.count,
            n = e.sizeType,
            _e$sourceType = e.sourceType,
            i = _e$sourceType === void 0 ? ["album", "camera"] : _e$sourceType,
            o = e.extension;
          return new Promise(function (e, a) {
            uni.chooseImage({
              count: t,
              sizeType: n,
              sourceType: i,
              extension: o,
              success: function success(t) {
                e(r(t, "image"));
              },
              fail: function fail(e) {
                a({
                  errMsg: e.errMsg.replace("chooseImage:fail", s)
                });
              }
            });
          });
        }(t), t) : "video" === t.type ? i(e, function (e) {
          var t = e.camera,
            n = e.compressed,
            i = e.maxDuration,
            _e$sourceType2 = e.sourceType,
            o = _e$sourceType2 === void 0 ? ["album", "camera"] : _e$sourceType2,
            a = e.extension;
          return new Promise(function (e, c) {
            uni.chooseVideo({
              camera: t,
              compressed: n,
              maxDuration: i,
              sourceType: o,
              extension: a,
              success: function success(t) {
                var n = t.tempFilePath,
                  s = t.duration,
                  i = t.size,
                  o = t.height,
                  a = t.width;
                e(r({
                  errMsg: "chooseVideo:ok",
                  tempFilePaths: [n],
                  tempFiles: [{
                    name: t.tempFile && t.tempFile.name || "",
                    path: n,
                    size: i,
                    type: t.tempFile && t.tempFile.type || "",
                    width: a,
                    height: o,
                    duration: s,
                    fileType: "video",
                    cloudPath: ""
                  }]
                }, "video"));
              },
              fail: function fail(e) {
                c({
                  errMsg: e.errMsg.replace("chooseVideo:fail", s)
                });
              }
            });
          });
        }(t), t) : i(e, function (e) {
          var t = e.count,
            n = e.extension;
          return new Promise(function (e, i) {
            var o = uni.chooseFile;
            if ("undefined" != typeof wx && "function" == typeof wx.chooseMessageFile && (o = wx.chooseMessageFile), "function" != typeof o) return i({
              errMsg: s + " 请指定 type 类型，该平台仅支持选择 image 或 video。"
            });
            o({
              type: "all",
              count: t,
              extension: n,
              success: function success(t) {
                e(r(t));
              },
              fail: function fail(e) {
                i({
                  errMsg: e.errMsg.replace("chooseFile:fail", s)
                });
              }
            });
          });
        }(t), t);
      };
    };
  }),
  qs = t(Ms);
var Fs = {
  auto: "auto",
  onready: "onready",
  manual: "manual"
};
function Ks(e) {
  return {
    props: {
      localdata: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      options: {
        type: [Object, Array],
        default: function _default() {
          return {};
        }
      },
      spaceInfo: {
        type: Object,
        default: function _default() {
          return {};
        }
      },
      collection: {
        type: [String, Array],
        default: ""
      },
      action: {
        type: String,
        default: ""
      },
      field: {
        type: String,
        default: ""
      },
      orderby: {
        type: String,
        default: ""
      },
      where: {
        type: [String, Object],
        default: ""
      },
      pageData: {
        type: String,
        default: "add"
      },
      pageCurrent: {
        type: Number,
        default: 1
      },
      pageSize: {
        type: Number,
        default: 20
      },
      getcount: {
        type: [Boolean, String],
        default: !1
      },
      gettree: {
        type: [Boolean, String],
        default: !1
      },
      gettreepath: {
        type: [Boolean, String],
        default: !1
      },
      startwith: {
        type: String,
        default: ""
      },
      limitlevel: {
        type: Number,
        default: 10
      },
      groupby: {
        type: String,
        default: ""
      },
      groupField: {
        type: String,
        default: ""
      },
      distinct: {
        type: [Boolean, String],
        default: !1
      },
      foreignKey: {
        type: String,
        default: ""
      },
      loadtime: {
        type: String,
        default: "auto"
      },
      manual: {
        type: Boolean,
        default: !1
      }
    },
    data: function data() {
      return {
        mixinDatacomLoading: !1,
        mixinDatacomHasMore: !1,
        mixinDatacomResData: [],
        mixinDatacomErrorMessage: "",
        mixinDatacomPage: {},
        mixinDatacomError: null
      };
    },
    created: function created() {
      var _this24 = this;
      this.mixinDatacomPage = {
        current: this.pageCurrent,
        size: this.pageSize,
        count: 0
      }, this.$watch(function () {
        var e = [];
        return ["pageCurrent", "pageSize", "localdata", "collection", "action", "field", "orderby", "where", "getont", "getcount", "gettree", "groupby", "groupField", "distinct"].forEach(function (t) {
          e.push(_this24[t]);
        }), e;
      }, function (e, t) {
        if (_this24.loadtime === Fs.manual) return;
        var n = !1;
        var s = [];
        for (var _r9 = 2; _r9 < e.length; _r9++) {
          e[_r9] !== t[_r9] && (s.push(e[_r9]), n = !0);
        }
        e[0] !== t[0] && (_this24.mixinDatacomPage.current = _this24.pageCurrent), _this24.mixinDatacomPage.size = _this24.pageSize, _this24.onMixinDatacomPropsChange(n, s);
      });
    },
    methods: {
      onMixinDatacomPropsChange: function onMixinDatacomPropsChange(e, t) {},
      mixinDatacomEasyGet: function mixinDatacomEasyGet() {
        var _this25 = this;
        var _ref54 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref54$getone = _ref54.getone,
          e = _ref54$getone === void 0 ? !1 : _ref54$getone,
          t = _ref54.success,
          n = _ref54.fail;
        this.mixinDatacomLoading || (this.mixinDatacomLoading = !0, this.mixinDatacomErrorMessage = "", this.mixinDatacomError = null, this.mixinDatacomGet().then(function (n) {
          _this25.mixinDatacomLoading = !1;
          var _n$result = n.result,
            s = _n$result.data,
            r = _n$result.count;
          _this25.getcount && (_this25.mixinDatacomPage.count = r), _this25.mixinDatacomHasMore = s.length < _this25.pageSize;
          var i = e ? s.length ? s[0] : void 0 : s;
          _this25.mixinDatacomResData = i, t && t(i);
        }).catch(function (e) {
          _this25.mixinDatacomLoading = !1, _this25.mixinDatacomErrorMessage = e, _this25.mixinDatacomError = e, n && n(e);
        }));
      },
      mixinDatacomGet: function mixinDatacomGet() {
        var _n17;
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var n;
        t = t || {}, n = "undefined" != typeof __uniX && __uniX ? e.databaseForJQL(this.spaceInfo) : e.database(this.spaceInfo);
        var s = t.action || this.action;
        s && (n = n.action(s));
        var r = t.collection || this.collection;
        n = Array.isArray(r) ? (_n17 = n).collection.apply(_n17, (0, _toConsumableArray2.default)(r)) : n.collection(r);
        var i = t.where || this.where;
        i && Object.keys(i).length && (n = n.where(i));
        var o = t.field || this.field;
        o && (n = n.field(o));
        var a = t.foreignKey || this.foreignKey;
        a && (n = n.foreignKey(a));
        var c = t.groupby || this.groupby;
        c && (n = n.groupBy(c));
        var u = t.groupField || this.groupField;
        u && (n = n.groupField(u));
        !0 === (void 0 !== t.distinct ? t.distinct : this.distinct) && (n = n.distinct());
        var h = t.orderby || this.orderby;
        h && (n = n.orderBy(h));
        var l = void 0 !== t.pageCurrent ? t.pageCurrent : this.mixinDatacomPage.current,
          d = void 0 !== t.pageSize ? t.pageSize : this.mixinDatacomPage.size,
          p = void 0 !== t.getcount ? t.getcount : this.getcount,
          f = void 0 !== t.gettree ? t.gettree : this.gettree,
          g = void 0 !== t.gettreepath ? t.gettreepath : this.gettreepath,
          m = {
            getCount: p
          },
          y = {
            limitLevel: void 0 !== t.limitlevel ? t.limitlevel : this.limitlevel,
            startWith: void 0 !== t.startwith ? t.startwith : this.startwith
          };
        return f && (m.getTree = y), g && (m.getTreePath = y), n = n.skip(d * (l - 1)).limit(d).get(m), n;
      }
    }
  };
}
function js(e) {
  return function (t) {
    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    n = function (e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return e.customUI = t.customUI || e.customUI, e.parseSystemError = t.parseSystemError || e.parseSystemError, Object.assign(e.loadingOptions, t.loadingOptions), Object.assign(e.errorOptions, t.errorOptions), "object" == (0, _typeof2.default)(t.secretMethods) && (e.secretMethods = t.secretMethods), e;
    }({
      customUI: !1,
      loadingOptions: {
        title: "加载中...",
        mask: !0
      },
      errorOptions: {
        type: "modal",
        retry: !1
      }
    }, n);
    var _n18 = n,
      s = _n18.customUI,
      r = _n18.loadingOptions,
      i = _n18.errorOptions,
      o = _n18.parseSystemError,
      a = !s;
    return new Proxy({}, {
      get: function get(s, c) {
        switch (c) {
          case "toString":
            return "[object UniCloudObject]";
          case "toJSON":
            return {};
        }
        return function () {
          var _ref55 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            e = _ref55.fn,
            t = _ref55.interceptorName,
            n = _ref55.getCallbackArgs;
          return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee64() {
            var _len3,
              s,
              _key3,
              r,
              i,
              o,
              _args = arguments;
            return _regenerator.default.wrap(function _callee64$(_context64) {
              while (1) {
                switch (_context64.prev = _context64.next) {
                  case 0:
                    for (_len3 = _args.length, s = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                      s[_key3] = _args[_key3];
                    }
                    r = n ? n({
                      params: s
                    }) : {};
                    _context64.prev = 2;
                    _context64.next = 5;
                    return j($(t, "invoke"), _objectSpread({}, r));
                  case 5:
                    _context64.next = 7;
                    return e.apply(void 0, s);
                  case 7:
                    i = _context64.sent;
                    _context64.next = 10;
                    return j($(t, "success"), _objectSpread(_objectSpread({}, r), {}, {
                      result: i
                    }));
                  case 10:
                    return _context64.abrupt("return", i);
                  case 13:
                    _context64.prev = 13;
                    _context64.t0 = _context64["catch"](2);
                    o = _context64.t0;
                    _context64.next = 18;
                    return j($(t, "fail"), _objectSpread(_objectSpread({}, r), {}, {
                      error: o
                    }));
                  case 18:
                    throw o;
                  case 19:
                    _context64.prev = 19;
                    _context64.next = 22;
                    return j($(t, "complete"), o ? _objectSpread(_objectSpread({}, r), {}, {
                      error: o
                    }) : _objectSpread(_objectSpread({}, r), {}, {
                      result: i
                    }));
                  case 22:
                    return _context64.finish(19);
                  case 23:
                  case "end":
                    return _context64.stop();
                }
              }
            }, _callee64, null, [[2, 13, 19, 23]]);
          }));
        }({
          fn: function () {
            var _s18 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee66() {
              var h,
                _len4,
                u,
                _key4,
                d,
                p,
                _ref57,
                f,
                g,
                m,
                y,
                _e27,
                _yield,
                _t20,
                _n19,
                _args4 = arguments;
              return _regenerator.default.wrap(function _callee66$(_context66) {
                while (1) {
                  switch (_context66.prev = _context66.next) {
                    case 0:
                      a && uni.showLoading({
                        title: r.title,
                        mask: r.mask
                      });
                      for (_len4 = _args4.length, u = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                        u[_key4] = _args4[_key4];
                      }
                      d = {
                        name: t,
                        type: l.OBJECT,
                        data: {
                          method: c,
                          params: u
                        }
                      };
                      "object" == (0, _typeof2.default)(n.secretMethods) && function (e, t) {
                        var n = t.data.method,
                          s = e.secretMethods || {},
                          r = s[n] || s["*"];
                        r && (t.secretType = r);
                      }(n, d);
                      p = !1;
                      _context66.prev = 5;
                      _context66.next = 8;
                      return e.callFunction(d);
                    case 8:
                      h = _context66.sent;
                      _context66.next = 14;
                      break;
                    case 11:
                      _context66.prev = 11;
                      _context66.t0 = _context66["catch"](5);
                      p = !0, h = {
                        result: new te(_context66.t0)
                      };
                    case 14:
                      _ref57 = h.result || {}, f = _ref57.errSubject, g = _ref57.errCode, m = _ref57.errMsg, y = _ref57.newToken;
                      if (!(a && uni.hideLoading(), y && y.token && y.tokenExpired && (re(y), Y(H.REFRESH_TOKEN, _objectSpread({}, y))), g)) {
                        _context66.next = 39;
                        break;
                      }
                      _e27 = m;
                      if (!(p && o)) {
                        _context66.next = 24;
                        break;
                      }
                      _context66.next = 20;
                      return o({
                        objectName: t,
                        methodName: c,
                        params: u,
                        errSubject: f,
                        errCode: g,
                        errMsg: m
                      });
                    case 20:
                      _context66.t1 = _context66.sent.errMsg;
                      if (_context66.t1) {
                        _context66.next = 23;
                        break;
                      }
                      _context66.t1 = m;
                    case 23:
                      _e27 = _context66.t1;
                    case 24:
                      if (!a) {
                        _context66.next = 37;
                        break;
                      }
                      if (!("toast" === i.type)) {
                        _context66.next = 29;
                        break;
                      }
                      uni.showToast({
                        title: _e27,
                        icon: "none"
                      });
                      _context66.next = 37;
                      break;
                    case 29:
                      if (!("modal" !== i.type)) {
                        _context66.next = 31;
                        break;
                      }
                      throw new Error("Invalid errorOptions.type: ".concat(i.type));
                    case 31:
                      _context66.next = 33;
                      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee65() {
                        var _ref59,
                          e,
                          t,
                          n,
                          s,
                          r,
                          _args2 = arguments;
                        return _regenerator.default.wrap(function _callee65$(_context65) {
                          while (1) {
                            switch (_context65.prev = _context65.next) {
                              case 0:
                                _ref59 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, e = _ref59.title, t = _ref59.content, n = _ref59.showCancel, s = _ref59.cancelText, r = _ref59.confirmText;
                                return _context65.abrupt("return", new Promise(function (i, o) {
                                  uni.showModal({
                                    title: e,
                                    content: t,
                                    showCancel: n,
                                    cancelText: s,
                                    confirmText: r,
                                    success: function success(e) {
                                      i(e);
                                    },
                                    fail: function fail() {
                                      i({
                                        confirm: !1,
                                        cancel: !0
                                      });
                                    }
                                  });
                                }));
                              case 2:
                              case "end":
                                return _context65.stop();
                            }
                          }
                        }, _callee65);
                      }))({
                        title: "提示",
                        content: _e27,
                        showCancel: i.retry,
                        cancelText: "取消",
                        confirmText: i.retry ? "重试" : "确定"
                      });
                    case 33:
                      _yield = _context66.sent;
                      _t20 = _yield.confirm;
                      if (!(i.retry && _t20)) {
                        _context66.next = 37;
                        break;
                      }
                      return _context66.abrupt("return", s.apply(void 0, u));
                    case 37:
                      _n19 = new te({
                        subject: f,
                        code: g,
                        message: m,
                        requestId: h.requestId
                      });
                      throw _n19.detail = h.result, Y(H.RESPONSE, {
                        type: J.CLOUD_OBJECT,
                        content: _n19
                      }), _n19;
                    case 39:
                      return _context66.abrupt("return", (Y(H.RESPONSE, {
                        type: J.CLOUD_OBJECT,
                        content: h.result
                      }), h.result));
                    case 40:
                    case "end":
                      return _context66.stop();
                  }
                }
              }, _callee66, null, [[5, 11]]);
            }));
            function s() {
              return _s18.apply(this, arguments);
            }
            return s;
          }(),
          interceptorName: "callObject",
          getCallbackArgs: function getCallbackArgs() {
            var _ref60 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              e = _ref60.params;
            return {
              objectName: t,
              methodName: c,
              params: e
            };
          }
        });
      }
    });
  };
}
function $s(e) {
  return U(Qt.replace("{spaceId}", e.config.spaceId));
}
function Bs() {
  return _Bs.apply(this, arguments);
}
function _Bs() {
  _Bs = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee71() {
    var _ref70,
      e,
      _ref70$callLoginByWei,
      t,
      n,
      s,
      r,
      _args10 = arguments;
    return _regenerator.default.wrap(function _callee71$(_context71) {
      while (1) {
        switch (_context71.prev = _context71.next) {
          case 0:
            _ref70 = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {}, e = _ref70.openid, _ref70$callLoginByWei = _ref70.callLoginByWeixin, t = _ref70$callLoginByWei === void 0 ? !1 : _ref70$callLoginByWei;
            n = $s(this);
            if (!("mp-weixin" !== C)) {
              _context71.next = 4;
              break;
            }
            throw new Error("[SecureNetwork] API `initSecureNetworkByWeixin` is not supported on platform `".concat(C, "`"));
          case 4:
            if (!(e && t)) {
              _context71.next = 6;
              break;
            }
            throw new Error("[SecureNetwork] openid and callLoginByWeixin cannot be passed at the same time");
          case 6:
            if (!e) {
              _context71.next = 8;
              break;
            }
            return _context71.abrupt("return", (n.mpWeixinOpenid = e, {}));
          case 8:
            _context71.next = 10;
            return new Promise(function (e, t) {
              uni.login({
                success: function success(t) {
                  e(t.code);
                },
                fail: function fail(e) {
                  t(new Error(e.errMsg));
                }
              });
            });
          case 10:
            s = _context71.sent;
            r = this.importObject("uni-id-co", {
              customUI: !0
            });
            _context71.next = 14;
            return r.secureNetworkHandshakeByWeixin({
              code: s,
              callLoginByWeixin: t
            });
          case 14:
            n.mpWeixinCode = s;
            return _context71.abrupt("return", {
              code: s
            });
          case 16:
          case "end":
            return _context71.stop();
        }
      }
    }, _callee71, this);
  }));
  return _Bs.apply(this, arguments);
}
function Ws(_x52) {
  return _Ws.apply(this, arguments);
}
function _Ws() {
  _Ws = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee72(e) {
    var t;
    return _regenerator.default.wrap(function _callee72$(_context72) {
      while (1) {
        switch (_context72.prev = _context72.next) {
          case 0:
            t = $s(this);
            return _context72.abrupt("return", (t.initPromise || (t.initPromise = Bs.call(this, e).then(function (e) {
              return e;
            }).catch(function (e) {
              throw delete t.initPromise, e;
            })), t.initPromise));
          case 2:
          case "end":
            return _context72.stop();
        }
      }
    }, _callee72, this);
  }));
  return _Ws.apply(this, arguments);
}
function Hs(e) {
  return function () {
    var _ref61 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      t = _ref61.openid,
      _ref61$callLoginByWei = _ref61.callLoginByWeixin,
      n = _ref61$callLoginByWei === void 0 ? !1 : _ref61$callLoginByWei;
    return Ws.call(e, {
      openid: t,
      callLoginByWeixin: n
    });
  };
}
function Js(e) {
  !function (e) {
    ue = e;
  }(e);
}
function zs(e) {
  var t = {
    getSystemInfo: uni.getSystemInfo,
    getPushClientId: uni.getPushClientId
  };
  return function (n) {
    return new Promise(function (s, r) {
      t[e](_objectSpread(_objectSpread({}, n), {}, {
        success: function success(e) {
          s(e);
        },
        fail: function fail(e) {
          r(e);
        }
      }));
    });
  };
}
var Vs = /*#__PURE__*/function (_S) {
  (0, _inherits2.default)(Vs, _S);
  var _super11 = _createSuper(Vs);
  function Vs() {
    var _this26;
    (0, _classCallCheck2.default)(this, Vs);
    _this26 = _super11.call(this), _this26._uniPushMessageCallback = _this26._receivePushMessage.bind((0, _assertThisInitialized2.default)(_this26)), _this26._currentMessageId = -1, _this26._payloadQueue = [];
    return _this26;
  }
  (0, _createClass2.default)(Vs, [{
    key: "init",
    value: function init() {
      var _this27 = this;
      return Promise.all([zs("getSystemInfo")(), zs("getPushClientId")()]).then(function () {
        var _ref62 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [],
          _ref63 = (0, _slicedToArray2.default)(_ref62, 2),
          _ref63$ = _ref63[0];
        _ref63$ = _ref63$ === void 0 ? {} : _ref63$;
        var e = _ref63$.appId,
          _ref63$2 = _ref63[1];
        _ref63$2 = _ref63$2 === void 0 ? {} : _ref63$2;
        var t = _ref63$2.cid;
        if (!e) throw new Error("Invalid appId, please check the manifest.json file");
        if (!t) throw new Error("Invalid push client id");
        _this27._appId = e, _this27._pushClientId = t, _this27._seqId = Date.now() + "-" + Math.floor(9e5 * Math.random() + 1e5), _this27.emit("open"), _this27._initMessageListener();
      }, function (e) {
        throw _this27.emit("error", e), _this27.close(), e;
      });
    }
  }, {
    key: "open",
    value: function () {
      var _open = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee67() {
        return _regenerator.default.wrap(function _callee67$(_context67) {
          while (1) {
            switch (_context67.prev = _context67.next) {
              case 0:
                return _context67.abrupt("return", this.init());
              case 1:
              case "end":
                return _context67.stop();
            }
          }
        }, _callee67, this);
      }));
      function open() {
        return _open.apply(this, arguments);
      }
      return open;
    }()
  }, {
    key: "_isUniCloudSSE",
    value: function _isUniCloudSSE(e) {
      if ("receive" !== e.type) return !1;
      var t = e && e.data && e.data.payload;
      return !(!t || "UNI_CLOUD_SSE" !== t.channel || t.seqId !== this._seqId);
    }
  }, {
    key: "_receivePushMessage",
    value: function _receivePushMessage(e) {
      if (!this._isUniCloudSSE(e)) return;
      var t = e && e.data && e.data.payload,
        n = t.action,
        s = t.messageId,
        r = t.message;
      this._payloadQueue.push({
        action: n,
        messageId: s,
        message: r
      }), this._consumMessage();
    }
  }, {
    key: "_consumMessage",
    value: function _consumMessage() {
      var _this28 = this;
      for (;;) {
        var _e28 = this._payloadQueue.find(function (e) {
          return e.messageId === _this28._currentMessageId + 1;
        });
        if (!_e28) break;
        this._currentMessageId++, this._parseMessagePayload(_e28);
      }
    }
  }, {
    key: "_parseMessagePayload",
    value: function _parseMessagePayload(e) {
      var t = e.action,
        n = e.messageId,
        s = e.message;
      "end" === t ? this._end({
        messageId: n,
        message: s
      }) : "message" === t && this._appendMessage({
        messageId: n,
        message: s
      });
    }
  }, {
    key: "_appendMessage",
    value: function _appendMessage() {
      var _ref64 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref64.messageId,
        t = _ref64.message;
      this.emit("message", t);
    }
  }, {
    key: "_end",
    value: function _end() {
      var _ref65 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref65.messageId,
        t = _ref65.message;
      this.emit("end", t), this.close();
    }
  }, {
    key: "_initMessageListener",
    value: function _initMessageListener() {
      uni.onPushMessage(this._uniPushMessageCallback);
    }
  }, {
    key: "_destroy",
    value: function _destroy() {
      uni.offPushMessage(this._uniPushMessageCallback);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        appId: this._appId,
        pushClientId: this._pushClientId,
        seqId: this._seqId
      };
    }
  }, {
    key: "close",
    value: function close() {
      this._destroy(), this.emit("close");
    }
  }]);
  return Vs;
}(S);
function Gs(_x53) {
  return _Gs.apply(this, arguments);
}
function _Gs() {
  _Gs = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee73(e) {
    var _ae2, _e33, _t22, t, _t$debugInfo, n, s, _yield$At2, r, i, o;
    return _regenerator.default.wrap(function _callee73$(_context73) {
      while (1) {
        switch (_context73.prev = _context73.next) {
          case 0:
            if (b) {
              _context73.next = 2;
              break;
            }
            return _context73.abrupt("return", Promise.resolve());
          case 2:
            if ("app" === C) {
              _ae2 = ae(), _e33 = _ae2.osName, _t22 = _ae2.osVersion;
              "ios" === _e33 && function (e) {
                if (!e || "string" != typeof e) return 0;
                var t = e.match(/^(\d+)./);
                return t && t[1] ? parseInt(t[1]) : 0;
              }(_t22) >= 14 && console.warn("iOS 14及以上版本连接uniCloud本地调试服务需要允许客户端查找并连接到本地网络上的设备（仅开发期间需要，发行后不需要）");
            }
            t = e.__dev__;
            if (t.debugInfo) {
              _context73.next = 6;
              break;
            }
            return _context73.abrupt("return");
          case 6:
            _t$debugInfo = t.debugInfo;
            n = _t$debugInfo.address;
            s = _t$debugInfo.servePort;
            _context73.next = 11;
            return At(n, s);
          case 11:
            _yield$At2 = _context73.sent;
            r = _yield$At2.address;
            if (!r) {
              _context73.next = 15;
              break;
            }
            return _context73.abrupt("return", (t.localAddress = r, void (t.localPort = s)));
          case 15:
            i = console["app" === C ? "error" : "warn"];
            o = "";
            if (!("remote" === t.debugInfo.initialLaunchType ? (t.debugInfo.forceRemote = !0, o = "当前客户端和HBuilderX不在同一局域网下（或其他网络原因无法连接HBuilderX），uniCloud本地调试服务不对当前客户端生效。\n- 如果不使用uniCloud本地调试服务，请直接忽略此信息。\n- 如需使用uniCloud本地调试服务，请将客户端与主机连接到同一局域网下并重新运行到客户端。") : o = "无法连接uniCloud本地调试服务，请检查当前客户端是否与主机在同一局域网下。\n- 如需使用uniCloud本地调试服务，请将客户端与主机连接到同一局域网下并重新运行到客户端。", o += "\n- 如果在HBuilderX开启的状态下切换过网络环境，请重启HBuilderX后再试\n- 检查系统防火墙是否拦截了HBuilderX自带的nodejs\n- 检查是否错误的使用拦截器修改uni.request方法的参数", "web" === C && (o += "\n- 部分浏览器开启节流模式之后访问本地地址受限，请检查是否启用了节流模式"), 0 === C.indexOf("mp-") && (o += "\n- 小程序中如何使用uniCloud，请参考：https://uniapp.dcloud.net.cn/uniCloud/publish.html#useinmp"), !t.debugInfo.forceRemote)) {
              _context73.next = 19;
              break;
            }
            throw new Error(o);
          case 19:
            i(o);
          case 20:
          case "end":
            return _context73.stop();
        }
      }
    }, _callee73);
  }));
  return _Gs.apply(this, arguments);
}
function Ys(e) {
  e._initPromiseHub || (e._initPromiseHub = new I({
    createPromise: function createPromise() {
      var t = Promise.resolve();
      var n;
      n = 1, t = new Promise(function (e) {
        setTimeout(function () {
          e();
        }, n);
      });
      var s = e.auth();
      return t.then(function () {
        return s.getLoginState();
      }).then(function (e) {
        return e ? Promise.resolve() : s.signInAnonymously();
      });
    }
  }));
}
var Qs = {
  tcb: Pt,
  tencent: Pt,
  aliyun: pe,
  private: Nt,
  dcloud: Nt,
  alipay: $t
};
var Xs = new ( /*#__PURE__*/function () {
  function _class5() {
    (0, _classCallCheck2.default)(this, _class5);
  }
  (0, _createClass2.default)(_class5, [{
    key: "init",
    value: function init(e) {
      var t = {};
      var n = Qs[e.provider];
      if (!n) throw new Error("未提供正确的provider参数");
      t = n.init(e), b && function (e) {
        if (!b) return;
        var t = {};
        e.__dev__ = t, t.debugLog = b && ("web" === C && navigator.userAgent.indexOf("HBuilderX") > 0 || "app" === C || "mp-harmony" === C);
        var n = A;
        n && !n.code && (t.debugInfo = n);
        var s = new I({
          createPromise: function createPromise() {
            return Gs(e);
          }
        });
        t.initLocalNetwork = function () {
          return s.exec();
        };
      }(t), Ys(t), Vn(t), function (e) {
        var t = e.uploadFile;
        e.uploadFile = function (e) {
          return t.call(this, e);
        };
      }(t), function (e) {
        e.database = function (t) {
          if (t && Object.keys(t).length > 0) return e.init(t).database();
          if (this._database) return this._database;
          var n = os(as, {
            uniClient: e
          });
          return this._database = n, n;
        }, e.databaseForJQL = function (t) {
          if (t && Object.keys(t).length > 0) return e.init(t).databaseForJQL();
          if (this._databaseForJQL) return this._databaseForJQL;
          var n = os(as, {
            uniClient: e,
            isJQL: !0
          });
          return this._databaseForJQL = n, n;
        };
      }(t), function (e) {
        e.getCurrentUserInfo = Ds, e.chooseAndUploadFile = qs.initChooseAndUploadFile(e), Object.assign(e, {
          get mixinDatacom() {
            return Ks(e);
          }
        }), e.SSEChannel = Vs, e.initSecureNetworkByWeixin = Hs(e), e.setCustomClientInfo = Js, e.importObject = js(e);
      }(t);
      return ["callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "chooseAndUploadFile"].forEach(function (e) {
        if (!t[e]) return;
        var n = t[e];
        t[e] = function () {
          return n.apply(t, Array.from(arguments));
        }, t[e] = function (e, t) {
          return function (n) {
            var _this29 = this;
            var s = !1;
            if ("callFunction" === t) {
              var _e29 = n && n.type || l.DEFAULT;
              s = _e29 !== l.DEFAULT;
            }
            var r = "callFunction" === t && !s,
              i = this._initPromiseHub.exec();
            n = n || {};
            var _ee2 = ee(n),
              o = _ee2.success,
              a = _ee2.fail,
              c = _ee2.complete,
              u = i.then(function () {
                return s ? Promise.resolve() : j($(t, "invoke"), n);
              }).then(function () {
                return e.call(_this29, n);
              }).then(function (e) {
                return s ? Promise.resolve(e) : j($(t, "success"), e).then(function () {
                  return j($(t, "complete"), e);
                }).then(function () {
                  return r && Y(H.RESPONSE, {
                    type: J.CLOUD_FUNCTION,
                    content: e
                  }), Promise.resolve(e);
                });
              }, function (e) {
                return s ? Promise.reject(e) : j($(t, "fail"), e).then(function () {
                  return j($(t, "complete"), e);
                }).then(function () {
                  return Y(H.RESPONSE, {
                    type: J.CLOUD_FUNCTION,
                    content: e
                  }), Promise.reject(e);
                });
              });
            if (!(o || a || c)) return u;
            u.then(function (e) {
              o && o(e), c && c(e), r && Y(H.RESPONSE, {
                type: J.CLOUD_FUNCTION,
                content: e
              });
            }, function (e) {
              a && a(e), c && c(e), r && Y(H.RESPONSE, {
                type: J.CLOUD_FUNCTION,
                content: e
              });
            });
          };
        }(t[e], e).bind(t);
      }), t.init = this.init, t;
    }
  }]);
  return _class5;
}())();
exports.uniCloud = Xs;
(function () {
  var e = O;
  var t = {};
  if (e && 1 === e.length) t = e[0], exports.uniCloud = Xs = Xs.init(t), Xs._isDefault = !0;else {
    var _t21 = ["auth", "callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "database", "getCurrentUSerInfo", "importObject"];
    var _n20;
    _n20 = e && e.length > 0 ? "应用有多个服务空间，请通过uniCloud.init方法指定要使用的服务空间" : x ? "应用未关联服务空间，请在uniCloud目录右键关联服务空间" : "uni-app cli项目内使用uniCloud需要使用HBuilderX的运行菜单运行项目，且需要在uniCloud目录关联服务空间", _t21.forEach(function (e) {
      Xs[e] = function () {
        return console.error(_n20), Promise.reject(new te({
          code: "SYS_ERR",
          message: _n20
        }));
      };
    });
  }
  if (Object.assign(Xs, {
    get mixinDatacom() {
      return Ks(Xs);
    }
  }), Ns(Xs), Xs.addInterceptor = F, Xs.removeInterceptor = K, Xs.interceptObject = B, b && "web" === C && (window.uniCloud = Xs), "app" === C && (uni.__uniCloud = Xs), "app" === C || "web" === C) {
    var _e30 = D();
    _e30.uniCloud = Xs, _e30.UniCloudError = te;
  }
})();
var Zs = Xs;
exports.default = Zs;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3), __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 28:
/*!************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/@babel/runtime/regenerator/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ 29)();
module.exports = runtime;

/***/ }),

/***/ 29:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
function _regeneratorRuntime() {
  "use strict";

  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return e;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function define(t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function value(t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) {
              if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            }
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(_typeof(e) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) {
      r.push(n);
    }
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) {
        "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
      }
    },
    stop: function stop() {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function complete(t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function finish(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    "catch": function _catch(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 30:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 31:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 32:
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 16);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 322:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/file_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
/**
 * Notes: 文件处理相关函数
 * Ver : CCMiniCloud Framework 2.7.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2022-02-05 04:00:00
 */
var pageHelper = __webpack_require__(/*! ./page_helper.js */ 64);
var timeHelper = __webpack_require__(/*! ./time_helper.js */ 72);
function openFile(_x) {
  return _openFile.apply(this, arguments);
} // directName:是否用name作为文件名
function _openFile() {
  _openFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileNode) {
    var url, type, name, ext;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = fileNode.path;
            type = fileNode.type;
            name = fileNode.name;
            ext = url.toLowerCase().substring(url.lastIndexOf('.') + 1);
            if (ext == 'doc' || ext == 'docx' || ext == 'xls' || ext == 'xlsx' || ext == 'ppt' || ext == 'pptx' || ext == 'pdf') {
              openDoc(name, url, '.' + ext, true);
            } else if (type == 'image') {
              uni.previewImage({
                current: url,
                // 当前显示图片的http链接
                urls: [url]
              });
            } else if (type == 'video') {
              uni.previewMedia({
                current: 0,
                // 当前显示图片的http链接
                sources: [{
                  url: url,
                  // 需要预览的视频http链接列表
                  type: 'video'
                }]
              });
            } else {
              pageHelper.showModal('不支持预览此文件');
            }
          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _openFile.apply(this, arguments);
}
function openDoc(_x2, _x3) {
  return _openDoc.apply(this, arguments);
}
function _openDoc() {
  _openDoc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, url) {
    var ext,
      directName,
      cloudHelper,
      filePath,
      _args2 = arguments;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            ext = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : '.xlsx';
            directName = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : false;
            if (!(!url.includes('cloud://') && (url.includes('tmp') || url.includes('temp') || url.includes('wxfile')))) {
              _context2.next = 7;
              break;
            }
            // 本地临时文件直接打开
            uni.openDocument({
              showMenu: true,
              filePath: url,
              success: function success(res) {
                console.log('打开文档成功');
              }
            });
            return _context2.abrupt("return");
          case 7:
            if (!url.includes('cloud://')) {
              _context2.next = 12;
              break;
            }
            cloudHelper = __webpack_require__(/*! ./cloud_helper.js */ 68);
            _context2.next = 11;
            return cloudHelper.getTempFileURLOne(url);
          case 11:
            url = _context2.sent;
          case 12:
            uni.showLoading({
              title: '文件下载中'
            });
            filePath = directName ? uni.env.USER_DATA_PATH + '/' + name : uni.env.USER_DATA_PATH + '/' + name + timeHelper.time('YMDhms') + ext;
            uni.downloadFile({
              url: url,
              //fileID:' ',
              filePath: filePath,
              success: function success(res) {
                uni.hideLoading();
                if (res.statusCode != 200) {
                  return pageHelper.showModal('打开文件失败，请重试或者采取别的下载方式');
                }
                var filePath = res.filePath;
                uni.openDocument({
                  showMenu: true,
                  filePath: filePath,
                  success: function success(res) {
                    console.log('打开文档成功');
                  }
                });
              },
              fail: function fail(err) {
                uni.hideLoading();
                console.log(err);
                pageHelper.showModal('打开文件失败，请重试或者采取别的下载方式');
              }
            });
          case 15:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _openDoc.apply(this, arguments);
}
module.exports = {
  openDoc: openDoc,
  openFile: openFile
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 33:
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ 30);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 331:
/*!************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/meet_biz.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 预约模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-12-10 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var pageHelper = __webpack_require__(/*! ../../../helper/page_helper.js */ 64);
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var projectSetting = __webpack_require__(/*! ../public/project_setting.js */ 75);
var MeetBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(MeetBiz, _BaseBiz);
  var _super = _createSuper(MeetBiz);
  function MeetBiz() {
    _classCallCheck(this, MeetBiz);
    return _super.apply(this, arguments);
  }
  _createClass(MeetBiz, null, [{
    key: "subscribeMessageMeet",
    value: function () {
      var _subscribeMessageMeet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(callback) {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                uni.requestSubscribeMessage({
                  tmplIds: ['RYDxYPJynjoRcC9lLYGM8P1nuQr68f5sd7mQftVULgk', 'OTw2KKPEt_OVteo8yP10sLN8mWhMHwX9SRv8yVXgy28'],
                  complete: function complete() {
                    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
                      return _regeneratorRuntime.wrap(function _callee$(_context) {
                        while (1) {
                          switch (_context.prev = _context.next) {
                            case 0:
                              if (!callback) {
                                _context.next = 3;
                                break;
                              }
                              _context.next = 3;
                              return callback();
                            case 3:
                            case "end":
                              return _context.stop();
                          }
                        }
                      }, _callee);
                    }))();
                  }
                });
              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      function subscribeMessageMeet(_x) {
        return _subscribeMessageMeet.apply(this, arguments);
      }
      return subscribeMessageMeet;
    }() /** 取得分类 */
  }, {
    key: "getCateList",
    value: function getCateList() {
      var cateList = projectSetting.MEET_CATE;
      var arr = [];
      for (var k = 0; k < cateList.length; k++) {
        arr.push({
          label: cateList[k].title,
          type: 'cateId',
          val: cateList[k].id,
          //for options
          value: cateList[k].id //for list
        });
      }

      return arr;
    }
  }, {
    key: "setCateTitle",
    value: function setCateTitle() {
      return BaseBiz.setCateTitle(projectSetting.MEET_CATE);
    }
  }]);
  return MeetBiz;
}(BaseBiz);
module.exports = MeetBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 34:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 35:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ 34);
var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 16);
var isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ 36);
var construct = __webpack_require__(/*! ./construct.js */ 15);
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 36:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 37:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/pages.json?{"type":"origin-pages-json"} ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  "pages": [{
    "path": "projects/worktrain/pages/default/index/default_index",
    "style": {
      "usingComponents": {
        "menuTpl": "../../tpls/menu_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationStyle": "custom"
    }
  }, {
    "path": "projects/worktrain/pages/about/list/about_list",
    "style": {
      "usingComponents": {
        "About_index": "../index/about_index"
      },
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/about/index/about_index",
    "style": {
      "usingComponents": {
        "About_tpl": "../../../../../tpls/project/about_tpl"
      },
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/search/search",
    "style": {
      "usingComponents": {
        "Search_tpl": "../../../../tpls/project/search_tpl"
      },
      "navigationBarTitleText": "搜索"
    }
  }, {
    "path": "projects/worktrain/pages/my/index/my_index",
    "style": {
      "usingComponents": {
        "menuTpl": "../../tpls/menu_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "个人中心"
    }
  }, {
    "path": "projects/worktrain/pages/my/reg/my_reg",
    "style": {
      "usingComponents": {
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "User_form": "../edit/user_form"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "注册"
    }
  }, {
    "path": "projects/worktrain/pages/my/edit/my_edit",
    "style": {
      "usingComponents": {
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "User_form": "./user_form"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "个人资料"
    }
  }, {
    "path": "projects/worktrain/pages/my/foot/my_foot",
    "style": {
      "usingComponents": {
        "My_foot_tpl": "../../../../../tpls/project/my_foot_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "历史浏览"
    }
  }, {
    "path": "projects/worktrain/pages/my/fav/my_fav",
    "style": {
      "usingComponents": {
        "My_fav_tpl": "../../../../../tpls/project/my_fav_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "我的收藏"
    }
  }, {
    "path": "projects/worktrain/pages/news/index/news_index",
    "style": {
      "usingComponents": {
        "newsIndexTpl": "../../../../../tpls/project/news_index_tpl",
        "menuTpl": "../../tpls/menu_tpl"
      },
      "disableScroll": true,
      "navigationBarTitleText": "公告"
    }
  }, {
    "path": "projects/worktrain/pages/news/detail/news_detail",
    "style": {
      "usingComponents": {
        "cmpt-detail": "/cmpts/biz/detail/detail_cmpt"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "详细内容"
    }
  }, {
    "path": "projects/worktrain/pages/news/cate1/news_cate1",
    "style": {
      "usingComponents": {
        "newsIndexTpl": "../../../../../tpls/project/news_index_tpl",
        "menuTpl": "../../tpls/menu_tpl"
      },
      "disableScroll": true,
      "navigationBarTitleText": "资讯"
    }
  }, {
    "path": "projects/worktrain/pages/news/cate2/news_cate2",
    "style": {
      "usingComponents": {
        "newsIndexTpl": "../../../../../tpls/project/news_index_tpl",
        "menuTpl": "../../tpls/menu_tpl"
      },
      "disableScroll": true,
      "navigationBarTitleText": "资讯"
    }
  }, {
    "path": "projects/worktrain/pages/admin/news/list/admin_news_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../../tpls/public/list_load_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "disableScroll": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/news/add/admin_news_add",
    "style": {
      "usingComponents": {
        "cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "Admin_news_form_tpl": "../admin_news_form_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/news/edit/admin_news_edit",
    "style": {
      "usingComponents": {
        "cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "Admin_news_form_tpl": "../admin_news_form_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/setup/about/admin_setup_about",
    "style": {
      "usingComponents": {
        "cmpt-editor": "/cmpts/public/editor/editor_cmpt"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "编辑"
    }
  }, {
    "path": "projects/worktrain/pages/admin/setup/about_list/admin_setup_about_list",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "单页文章"
    }
  }, {
    "path": "projects/worktrain/pages/admin/setup/qr/admin_setup_qr",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "小程序码"
    }
  }, {
    "path": "projects/worktrain/pages/admin/index/home/admin_home",
    "style": {
      "usingComponents": {
        "cmpt-foot": "/cmpts/biz/foot/foot_cmpt"
      },
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "后台管理"
    }
  }, {
    "path": "projects/worktrain/pages/admin/index/login/admin_login",
    "style": {
      "usingComponents": {
        "cmpt-foot": "/cmpts/biz/foot/foot_cmpt"
      },
      "disableScroll": true,
      "navigationBarBackgroundColor": "#ffffff",
      "navigationBarTextStyle": "black"
    }
  }, {
    "path": "projects/worktrain/pages/admin/content/admin_content",
    "style": {
      "usingComponents": {
        "cmpt-editor": "/cmpts/public/editor/editor_cmpt"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "后台-详细内容编辑"
    }
  }, {
    "path": "projects/worktrain/pages/admin/mgr/log/admin_log_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../../tpls/public/list_load_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "disableScroll": true,
      "navigationBarTitleText": "后台-操作日志"
    }
  }, {
    "path": "projects/worktrain/pages/admin/mgr/edit/admin_mgr_edit",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "修改管理员"
    }
  }, {
    "path": "projects/worktrain/pages/admin/mgr/list/admin_mgr_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../../tpls/public/list_load_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "管理员管理"
    }
  }, {
    "path": "projects/worktrain/pages/admin/mgr/add/admin_mgr_add",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "添加管理员"
    }
  }, {
    "path": "projects/worktrain/pages/admin/mgr/pwd/admin_mgr_pwd",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "管理员密码修改"
    }
  }, {
    "path": "projects/worktrain/pages/admin/user/list/admin_user_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../../tpls/public/list_load_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "disableScroll": true,
      "navigationBarTitleText": "用户管理"
    }
  }, {
    "path": "projects/worktrain/pages/admin/user/detail/admin_user_detail",
    "style": {
      "usingComponents": {
        "adminFormsDetailTpl": "../../../../../../tpls/public/admin_forms_detail_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "用户详情"
    }
  }, {
    "path": "projects/worktrain/pages/admin/user/export/admin_user_export",
    "style": {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "用户资料导出"
    }
  }, {
    "path": "projects/worktrain/pages/meet/index/meet_index",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../tpls/public/list_load_tpl"
      },
      "disableScroll": true,
      "navigationBarTitleText": "预约"
    }
  }, {
    "path": "projects/worktrain/pages/meet/calendar/meet_calendar",
    "style": {
      "usingComponents": {
        "cmpt-calendar": "/cmpts/public/calendar/calendar_comm/calendar_comm_cmpt",
        "menuTpl": "../../tpls/menu_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约日历"
    }
  }, {
    "path": "projects/worktrain/pages/meet/join/meet_join",
    "style": {
      "usingComponents": {
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约登记"
    }
  }, {
    "path": "projects/worktrain/pages/meet/detail/meet_detail",
    "style": {
      "usingComponents": {
        "cmpt-detail": "/cmpts/biz/detail/detail_cmpt"
      },
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约"
    }
  }, {
    "path": "projects/worktrain/pages/meet/my_join_list/meet_my_join_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../tpls/public/list_load_tpl"
      },
      "disableScroll": true,
      "navigationBarTitleText": "我的预约"
    }
  }, {
    "path": "projects/worktrain/pages/meet/my_join_detail/meet_my_join_detail",
    "style": {
      "usingComponents": {},
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "我的预约详情"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/add/admin_meet_add",
    "style": {
      "usingComponents": {
        "cmpt-form-set": "/cmpts/public/form/form_set/form_set_cmpt",
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
        "Admin_meet_form_tpl": "../add/admin_meet_form_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/edit/admin_meet_edit",
    "style": {
      "usingComponents": {
        "cmpt-form-set": "/cmpts/public/form/form_set/form_set_cmpt",
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
        "Admin_meet_form_tpl": "../add/admin_meet_form_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/export/admin_join_export",
    "style": {
      "usingComponents": {
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约名单导出"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/join/admin_meet_join",
    "style": {
      "usingComponents": {
        "Admin_meet_join_tpl": "./admin_meet_join_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "分时段预约名单"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/list/admin_meet_list",
    "style": {
      "usingComponents": {
        "listLoadTpl": "../../../../../../tpls/public/list_load_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "disableScroll": true
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/record/admin_meet_record",
    "style": {
      "usingComponents": {
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "Admin_meet_record_tpl": "./admin_meet_record_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约名单统计"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/scan/admin_meet_scan",
    "style": {
      "usingComponents": {
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "Admin_meet_scan_tpl": "./admin_meet_scan_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "管理员扫码核销"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/temp/admin_meet_temp",
    "style": {
      "usingComponents": {
        "Admin_meet_temp_tpl": "./admin_meet_temp_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "时间模板选择"
    }
  }, {
    "path": "projects/worktrain/pages/admin/meet/time/admin_meet_time",
    "style": {
      "usingComponents": {
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
        "cmpt-calendar": "/cmpts/public/calendar/calendar_meet/calendar_meet_cmpt",
        "Admin_meet_time_form_tpl": "../../../admin/meet/time/admin_meet_time_form_tpl"
      },
      "navigationBarBackgroundColor": "#2499f2",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "时间设置"
    }
  }, {
    "path": "projects/worktrain/pages/work/index/home/work_home",
    "style": {
      "usingComponents": {},
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "老师平台"
    }
  }, {
    "path": "projects/worktrain/pages/work/index/login/work_login",
    "style": {
      "usingComponents": {},
      "disableScroll": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTitleText": "老师平台",
      "navigationBarTextStyle": "white"
    }
  }, {
    "path": "projects/worktrain/pages/work/index/pwd/work_pwd",
    "style": {
      "usingComponents": {},
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "修改密码"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/edit/work_meet_edit",
    "style": {
      "usingComponents": {
        "cmpt-form-set": "/cmpts/public/form/form_set/form_set_cmpt",
        "cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
        "Admin_meet_form_tpl": "../../../admin/meet/add/admin_meet_form_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "预约设置与时段排期"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/time/work_meet_time",
    "style": {
      "usingComponents": {
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
        "cmpt-calendar": "/cmpts/public/calendar/calendar_meet/calendar_meet_cmpt",
        "Admin_meet_time_form_tpl": "../../../admin/meet/time/admin_meet_time_form_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "排期时段设置"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/temp/work_meet_temp",
    "style": {
      "usingComponents": {
        "Admin_meet_temp_tpl": "../../../admin/meet/temp/admin_meet_temp_tpl"
      },
      "enablePullDownRefresh": true,
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "时间模板选择"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/record/work_meet_record",
    "style": {
      "usingComponents": {
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "Admin_meet_record_tpl": "../../../admin/meet/record/admin_meet_record_tpl"
      },
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "预约名单统计"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/join/work_meet_join",
    "style": {
      "usingComponents": {
        "Admin_meet_join_tpl": "../../../admin/meet/join/admin_meet_join_tpl"
      },
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "navigationBarTitleText": "分时段预约名单"
    }
  }, {
    "path": "projects/worktrain/pages/work/meet/scan/work_meet_scan",
    "style": {
      "usingComponents": {
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "Admin_meet_scan_tpl": "../../../admin/meet/scan/admin_meet_scan_tpl"
      },
      "navigationBarBackgroundColor": "#1C9399",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true,
      "navigationBarTitleText": "扫码核销"
    }
  }, {
    "path": "cmpts/public/form/form_set/field/form_set_field",
    "style": {
      "usingComponents": {
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt"
      },
      "navigationBarBackgroundColor": "#ffffff",
      "navigationBarTextStyle": "black",
      "enablePullDownRefresh": true,
      "backgroundTextStyle": "dark",
      "navigationBarTitleText": "后台-字段添加"
    }
  }, {
    "path": "cmpts/public/form/form_show/content/form_show_content",
    "style": {
      "usingComponents": {
        "cmpt-editor": "/cmpts/public/editor/editor_cmpt"
      },
      "navigationBarTitleText": "详细内容"
    }
  }, {
    "path": "pages/test1/test1",
    "style": {
      "usingComponents": {
        "cmpt-car-number": "/cmpts/public/car_number/car_number_cmpt",
        "cmpt-customer-nav": "/cmpts/public/custom_nav/custom_nav_cmpt",
        "cmpt-swiper": "/cmpts/public/swiper/swiper_cmpt",
        "cmpt-date-select": "/cmpts/public/calendar/date_select/date_select_cmpt",
        "cmpt-time-select": "/cmpts/public/calendar/time_select/time_select_cmpt",
        "cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
        "cmpt-poster": "/cmpts/public/poster/poster_cmpt",
        "cmpt-picker": "/cmpts/public/picker/picker_cmpt",
        "cmpt-checkbox": "/cmpts/public/checkbox/checkbox_cmpt",
        "cmpt-editor": "/cmpts/public/editor/editor_cmpt",
        "cmpt-table": "/cmpts/public/table/table_cmpt",
        "cmpt-file-upload": "/cmpts/public/file/file_upload_cmpt",
        "cmpt-ex-form": "/cmpts/public/form/form_show/form_show_cmpt",
        "cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt"
      }
    }
  }],
  "tabBar": {
    "custom": false,
    "backgroundColor": "#FFFFFF",
    "color": "#999999",
    "selectedColor": "#2B72D4",
    "list": [{
      "pagePath": "projects/worktrain/pages/default/index/default_index",
      "text": "首页",
      "iconPath": "static/projects/worktrain/images/tabbar/home.png",
      "selectedIconPath": "static/projects/worktrain/images/tabbar/home_cur.png"
    }, {
      "pagePath": "projects/worktrain/pages/news/index/news_index",
      "text": "公告通知",
      "iconPath": "static/projects/worktrain/images/tabbar/news.png",
      "selectedIconPath": "static/projects/worktrain/images/tabbar/news_cur.png"
    }, {
      "pagePath": "projects/worktrain/pages/meet/calendar/meet_calendar",
      "text": "预约日历",
      "iconPath": "static/projects/worktrain/images/tabbar/day.png",
      "selectedIconPath": "static/projects/worktrain/images/tabbar/day_cur.png"
    }, {
      "pagePath": "projects/worktrain/pages/my/index/my_index",
      "text": "我的",
      "iconPath": "static/projects/worktrain/images/tabbar/my.png",
      "selectedIconPath": "static/projects/worktrain/images/tabbar/my_cur.png"
    }]
  },
  "permission": {
    "scope.userLocation": {
      "desc": "获取你当前位置信息用于小程序位置接口的效果展示"
    }
  },
  "sitemapLocation": "sitemap.json",
  "easycom": {
    "autoscan": true,
    "custom": {
      "^cmpt-comm-list$": "@/cmpts/public/list/comm_list_cmpt",
      "^cmpt-picker$": "@/cmpts/public/picker/picker_cmpt",
      "^cmpt-modal$": "@/cmpts/public/modal/modal_cmpt"
    }
  },
  "globalStyle": {
    "backgroundColor": "#f1f1f1",
    "backgroundTextStyle": "dark",
    "navigationBarBackgroundColor": "#2B72D4",
    "navigationBarTitleText": "培训老师预约小程序",
    "navigationBarTextStyle": "white"
  },
  "subPackages": []
};
exports.default = _default;

/***/ }),

/***/ 374:
/*!*************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/lib/tools/qrcode_lib.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//---------------------------------------------------------------------
/*
 * @demoURL: https://github.com/Pudon/weapp-qrcode
 */
//---------------------------------------------------------------------
/**
 * qrcode
 * @param typeNumber 1 to 40 Version
 * @param errorCorrectLevel 'L','M','Q','H'
 */
var qrcode = function qrcode(typeNumber, errorCorrectLevel) {
  var PAD0 = 236;
  var PAD1 = 17;
  var _typeNumber = typeNumber;
  var _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];
  var _modules = null;
  var _moduleCount = 0;
  var _dataCache = null;
  var _dataList = new Array();
  var _this = {};
  var makeImpl = function makeImpl(test, maskPattern) {
    _moduleCount = _typeNumber * 4 + 17;
    _modules = function (moduleCount) {
      var modules = new Array(moduleCount);
      for (var row = 0; row < moduleCount; row += 1) {
        modules[row] = new Array(moduleCount);
        for (var col = 0; col < moduleCount; col += 1) {
          modules[row][col] = null;
        }
      }
      return modules;
    }(_moduleCount);
    setupPositionProbePattern(0, 0);
    setupPositionProbePattern(_moduleCount - 7, 0);
    setupPositionProbePattern(0, _moduleCount - 7);
    setupPositionAdjustPattern();
    setupTimingPattern();
    setupTypeInfo(test, maskPattern);
    if (_typeNumber >= 7) {
      setupTypeNumber(test);
    }
    if (_dataCache == null) {
      _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);
    }
    mapData(_dataCache, maskPattern);
  };
  var setupPositionProbePattern = function setupPositionProbePattern(row, col) {
    for (var r = -1; r <= 7; r += 1) {
      if (row + r <= -1 || _moduleCount <= row + r) {
        continue;
      }
      for (var c = -1; c <= 7; c += 1) {
        if (col + c <= -1 || _moduleCount <= col + c) {
          continue;
        }
        if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
          _modules[row + r][col + c] = true;
        } else {
          _modules[row + r][col + c] = false;
        }
      }
    }
  };
  var getBestMaskPattern = function getBestMaskPattern() {
    var minLostPoint = 0;
    var pattern = 0;
    for (var i = 0; i < 8; i += 1) {
      makeImpl(true, i);
      var lostPoint = QRUtil.getLostPoint(_this);
      if (i == 0 || minLostPoint > lostPoint) {
        minLostPoint = lostPoint;
        pattern = i;
      }
    }
    return pattern;
  };
  var setupTimingPattern = function setupTimingPattern() {
    for (var r = 8; r < _moduleCount - 8; r += 1) {
      if (_modules[r][6] != null) {
        continue;
      }
      _modules[r][6] = r % 2 == 0;
    }
    for (var c = 8; c < _moduleCount - 8; c += 1) {
      if (_modules[6][c] != null) {
        continue;
      }
      _modules[6][c] = c % 2 == 0;
    }
  };
  var setupPositionAdjustPattern = function setupPositionAdjustPattern() {
    var pos = QRUtil.getPatternPosition(_typeNumber);
    for (var i = 0; i < pos.length; i += 1) {
      for (var j = 0; j < pos.length; j += 1) {
        var row = pos[i];
        var col = pos[j];
        if (_modules[row][col] != null) {
          continue;
        }
        for (var r = -2; r <= 2; r += 1) {
          for (var c = -2; c <= 2; c += 1) {
            if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
              _modules[row + r][col + c] = true;
            } else {
              _modules[row + r][col + c] = false;
            }
          }
        }
      }
    }
  };
  var setupTypeNumber = function setupTypeNumber(test) {
    var bits = QRUtil.getBCHTypeNumber(_typeNumber);
    for (var i = 0; i < 18; i += 1) {
      var mod = !test && (bits >> i & 1) == 1;
      _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;
    }
    for (var i = 0; i < 18; i += 1) {
      var mod = !test && (bits >> i & 1) == 1;
      _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
    }
  };
  var setupTypeInfo = function setupTypeInfo(test, maskPattern) {
    var data = _errorCorrectLevel << 3 | maskPattern;
    var bits = QRUtil.getBCHTypeInfo(data);

    // vertical
    for (var i = 0; i < 15; i += 1) {
      var mod = !test && (bits >> i & 1) == 1;
      if (i < 6) {
        _modules[i][8] = mod;
      } else if (i < 8) {
        _modules[i + 1][8] = mod;
      } else {
        _modules[_moduleCount - 15 + i][8] = mod;
      }
    }

    // horizontal
    for (var i = 0; i < 15; i += 1) {
      var mod = !test && (bits >> i & 1) == 1;
      if (i < 8) {
        _modules[8][_moduleCount - i - 1] = mod;
      } else if (i < 9) {
        _modules[8][15 - i - 1 + 1] = mod;
      } else {
        _modules[8][15 - i - 1] = mod;
      }
    }

    // fixed module
    _modules[_moduleCount - 8][8] = !test;
  };
  var mapData = function mapData(data, maskPattern) {
    var inc = -1;
    var row = _moduleCount - 1;
    var bitIndex = 7;
    var byteIndex = 0;
    var maskFunc = QRUtil.getMaskFunction(maskPattern);
    for (var col = _moduleCount - 1; col > 0; col -= 2) {
      if (col == 6) {
        col -= 1;
      }
      while (true) {
        for (var c = 0; c < 2; c += 1) {
          if (_modules[row][col - c] == null) {
            var dark = false;
            if (byteIndex < data.length) {
              dark = (data[byteIndex] >>> bitIndex & 1) == 1;
            }
            var mask = maskFunc(row, col - c);
            if (mask) {
              dark = !dark;
            }
            _modules[row][col - c] = dark;
            bitIndex -= 1;
            if (bitIndex == -1) {
              byteIndex += 1;
              bitIndex = 7;
            }
          }
        }
        row += inc;
        if (row < 0 || _moduleCount <= row) {
          row -= inc;
          inc = -inc;
          break;
        }
      }
    }
  };
  var createBytes = function createBytes(buffer, rsBlocks) {
    var offset = 0;
    var maxDcCount = 0;
    var maxEcCount = 0;
    var dcdata = new Array(rsBlocks.length);
    var ecdata = new Array(rsBlocks.length);
    for (var r = 0; r < rsBlocks.length; r += 1) {
      var dcCount = rsBlocks[r].dataCount;
      var ecCount = rsBlocks[r].totalCount - dcCount;
      maxDcCount = Math.max(maxDcCount, dcCount);
      maxEcCount = Math.max(maxEcCount, ecCount);
      dcdata[r] = new Array(dcCount);
      for (var i = 0; i < dcdata[r].length; i += 1) {
        dcdata[r][i] = 255 & buffer.getBuffer()[i + offset];
      }
      offset += dcCount;
      var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
      var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);
      var modPoly = rawPoly.mod(rsPoly);
      ecdata[r] = new Array(rsPoly.getLength() - 1);
      for (var i = 0; i < ecdata[r].length; i += 1) {
        var modIndex = i + modPoly.getLength() - ecdata[r].length;
        ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;
      }
    }
    var totalCodeCount = 0;
    for (var i = 0; i < rsBlocks.length; i += 1) {
      totalCodeCount += rsBlocks[i].totalCount;
    }
    var data = new Array(totalCodeCount);
    var index = 0;
    for (var i = 0; i < maxDcCount; i += 1) {
      for (var r = 0; r < rsBlocks.length; r += 1) {
        if (i < dcdata[r].length) {
          data[index] = dcdata[r][i];
          index += 1;
        }
      }
    }
    for (var i = 0; i < maxEcCount; i += 1) {
      for (var r = 0; r < rsBlocks.length; r += 1) {
        if (i < ecdata[r].length) {
          data[index] = ecdata[r][i];
          index += 1;
        }
      }
    }
    return data;
  };
  var createData = function createData(typeNumber, errorCorrectLevel, dataList) {
    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
    var buffer = qrBitBuffer();
    for (var i = 0; i < dataList.length; i += 1) {
      var data = dataList[i];
      buffer.put(data.getMode(), 4);
      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));
      data.write(buffer);
    }

    // calc num max data.
    var totalDataCount = 0;
    for (var i = 0; i < rsBlocks.length; i += 1) {
      totalDataCount += rsBlocks[i].dataCount;
    }
    if (buffer.getLengthInBits() > totalDataCount * 8) {
      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');
    }

    // end code
    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
      buffer.put(0, 4);
    }

    // padding
    while (buffer.getLengthInBits() % 8 != 0) {
      buffer.putBit(false);
    }

    // padding
    while (true) {
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(PAD0, 8);
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(PAD1, 8);
    }
    return createBytes(buffer, rsBlocks);
  };
  _this.addData = function (data) {
    var newData = qr8BitByte(data);
    _dataList.push(newData);
    _dataCache = null;
  };
  _this.isDark = function (row, col) {
    if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {
      throw new Error(row + ',' + col);
    }
    return _modules[row][col];
  };
  _this.getModuleCount = function () {
    return _moduleCount;
  };
  _this.make = function () {
    makeImpl(false, getBestMaskPattern());
  };
  _this.createTableTag = function (cellSize, margin) {
    cellSize = cellSize || 2;
    margin = typeof margin == 'undefined' ? cellSize * 4 : margin;
    var qrHtml = '';
    qrHtml += '<table style="';
    qrHtml += ' border-width: 0px; border-style: none;';
    qrHtml += ' border-collapse: collapse;';
    qrHtml += ' padding: 0px; margin: ' + margin + 'px;';
    qrHtml += '">';
    qrHtml += '<tbody>';
    for (var r = 0; r < _this.getModuleCount(); r += 1) {
      qrHtml += '<tr>';
      for (var c = 0; c < _this.getModuleCount(); c += 1) {
        qrHtml += '<td style="';
        qrHtml += ' border-width: 0px; border-style: none;';
        qrHtml += ' border-collapse: collapse;';
        qrHtml += ' padding: 0px; margin: 0px;';
        qrHtml += ' width: ' + cellSize + 'px;';
        qrHtml += ' height: ' + cellSize + 'px;';
        qrHtml += ' background-color: ';
        qrHtml += _this.isDark(r, c) ? '#000000' : '#ffffff';
        qrHtml += ';';
        qrHtml += '"/>';
      }
      qrHtml += '</tr>';
    }
    qrHtml += '</tbody>';
    qrHtml += '</table>';
    return qrHtml;
  };
  _this.createImgTag = function (cellSize, margin, size) {
    cellSize = cellSize || 2;
    margin = typeof margin == 'undefined' ? cellSize * 4 : margin;
    var min = margin;
    var max = _this.getModuleCount() * cellSize + margin;
    return createImgTag(size, size, function (x, y) {
      if (min <= x && x < max && min <= y && y < max) {
        var c = Math.floor((x - min) / cellSize);
        var r = Math.floor((y - min) / cellSize);
        return _this.isDark(r, c) ? 0 : 1;
      } else {
        return 1;
      }
    });
  };
  return _this;
};

//---------------------------------------------------------------------
// qrcode.stringToBytes
//---------------------------------------------------------------------

qrcode.stringToBytes = function (s) {
  var bytes = new Array();
  for (var i = 0; i < s.length; i += 1) {
    var c = s.charCodeAt(i);
    bytes.push(c & 255);
  }
  return bytes;
};

//---------------------------------------------------------------------
// qrcode.createStringToBytes
//---------------------------------------------------------------------

/**
 * @param unicodeData base64 string of byte array.
 * [16bit Unicode],[16bit Bytes], ...
 * @param numChars
 */
qrcode.createStringToBytes = function (unicodeData, numChars) {
  // create conversion map.

  var unicodeMap = function () {
    var bin = base64DecodeInputStream(unicodeData);
    var read = function read() {
      var b = bin.read();
      if (b == -1) {
        throw new Error();
      }
      return b;
    };
    var count = 0;
    var unicodeMap = {};
    while (true) {
      var b0 = bin.read();
      if (b0 == -1) {
        break;
      }
      var b1 = read();
      var b2 = read();
      var b3 = read();
      var k = String.fromCharCode(b0 << 8 | b1);
      var v = b2 << 8 | b3;
      unicodeMap[k] = v;
      count += 1;
    }
    if (count != numChars) {
      throw new Error(count + ' != ' + numChars);
    }
    return unicodeMap;
  }();
  var unknownChar = '?'.charCodeAt(0);
  return function (s) {
    var bytes = new Array();
    for (var i = 0; i < s.length; i += 1) {
      var c = s.charCodeAt(i);
      if (c < 128) {
        bytes.push(c);
      } else {
        var b = unicodeMap[s.charAt(i)];
        if (typeof b == 'number') {
          if ((b & 255) == b) {
            // 1byte
            bytes.push(b);
          } else {
            // 2bytes
            bytes.push(b >>> 8);
            bytes.push(b & 255);
          }
        } else {
          bytes.push(unknownChar);
        }
      }
    }
    return bytes;
  };
};

//---------------------------------------------------------------------
// QRMode
//---------------------------------------------------------------------

var QRMode = {
  MODE_NUMBER: 1,
  MODE_ALPHA_NUM: 2,
  MODE_8BIT_BYTE: 4,
  MODE_KANJI: 8
};

//---------------------------------------------------------------------
// QRErrorCorrectLevel
//---------------------------------------------------------------------

var QRErrorCorrectLevel = {
  L: 1,
  M: 0,
  Q: 3,
  H: 2
};

//---------------------------------------------------------------------
// QRMaskPattern
//---------------------------------------------------------------------

var QRMaskPattern = {
  PATTERN000: 0,
  PATTERN001: 1,
  PATTERN010: 2,
  PATTERN011: 3,
  PATTERN100: 4,
  PATTERN101: 5,
  PATTERN110: 6,
  PATTERN111: 7
};

//---------------------------------------------------------------------
// QRUtil
//---------------------------------------------------------------------

var QRUtil = function () {
  var PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];
  var G15 = 1280 | 32 | 16 | 4 | 2 | 1;
  var G18 = 6144 | 1024 | 512 | 256 | 32 | 4 | 1;
  var G15_MASK = 20480 | 1024 | 16 | 2;
  var _this = {};
  var getBCHDigit = function getBCHDigit(data) {
    var digit = 0;
    while (data != 0) {
      digit += 1;
      data >>>= 1;
    }
    return digit;
  };
  _this.getBCHTypeInfo = function (data) {
    var d = data << 10;
    while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {
      d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);
    }
    return (data << 10 | d) ^ G15_MASK;
  };
  _this.getBCHTypeNumber = function (data) {
    var d = data << 12;
    while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {
      d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);
    }
    return data << 12 | d;
  };
  _this.getPatternPosition = function (typeNumber) {
    return PATTERN_POSITION_TABLE[typeNumber - 1];
  };
  _this.getMaskFunction = function (maskPattern) {
    switch (maskPattern) {
      case QRMaskPattern.PATTERN000:
        return function (i, j) {
          return (i + j) % 2 == 0;
        };
      case QRMaskPattern.PATTERN001:
        return function (i, j) {
          return i % 2 == 0;
        };
      case QRMaskPattern.PATTERN010:
        return function (i, j) {
          return j % 3 == 0;
        };
      case QRMaskPattern.PATTERN011:
        return function (i, j) {
          return (i + j) % 3 == 0;
        };
      case QRMaskPattern.PATTERN100:
        return function (i, j) {
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
        };
      case QRMaskPattern.PATTERN101:
        return function (i, j) {
          return i * j % 2 + i * j % 3 == 0;
        };
      case QRMaskPattern.PATTERN110:
        return function (i, j) {
          return (i * j % 2 + i * j % 3) % 2 == 0;
        };
      case QRMaskPattern.PATTERN111:
        return function (i, j) {
          return (i * j % 3 + (i + j) % 2) % 2 == 0;
        };
      default:
        throw new Error('bad maskPattern:' + maskPattern);
    }
  };
  _this.getErrorCorrectPolynomial = function (errorCorrectLength) {
    var a = qrPolynomial([1], 0);
    for (var i = 0; i < errorCorrectLength; i += 1) {
      a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0));
    }
    return a;
  };
  _this.getLengthInBits = function (mode, type) {
    if (1 <= type && type < 10) {
      // 1 - 9

      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 10;
        case QRMode.MODE_ALPHA_NUM:
          return 9;
        case QRMode.MODE_8BIT_BYTE:
          return 8;
        case QRMode.MODE_KANJI:
          return 8;
        default:
          throw new Error('mode:' + mode);
      }
    } else if (type < 27) {
      // 10 - 26

      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 12;
        case QRMode.MODE_ALPHA_NUM:
          return 11;
        case QRMode.MODE_8BIT_BYTE:
          return 16;
        case QRMode.MODE_KANJI:
          return 10;
        default:
          throw new Error('mode:' + mode);
      }
    } else if (type < 41) {
      // 27 - 40

      switch (mode) {
        case QRMode.MODE_NUMBER:
          return 14;
        case QRMode.MODE_ALPHA_NUM:
          return 13;
        case QRMode.MODE_8BIT_BYTE:
          return 16;
        case QRMode.MODE_KANJI:
          return 12;
        default:
          throw new Error('mode:' + mode);
      }
    } else {
      throw new Error('type:' + type);
    }
  };
  _this.getLostPoint = function (qrcode) {
    var moduleCount = qrcode.getModuleCount();
    var lostPoint = 0;

    // LEVEL1

    for (var row = 0; row < moduleCount; row += 1) {
      for (var col = 0; col < moduleCount; col += 1) {
        var sameCount = 0;
        var dark = qrcode.isDark(row, col);
        for (var r = -1; r <= 1; r += 1) {
          if (row + r < 0 || moduleCount <= row + r) {
            continue;
          }
          for (var c = -1; c <= 1; c += 1) {
            if (col + c < 0 || moduleCount <= col + c) {
              continue;
            }
            if (r == 0 && c == 0) {
              continue;
            }
            if (dark == qrcode.isDark(row + r, col + c)) {
              sameCount += 1;
            }
          }
        }
        if (sameCount > 5) {
          lostPoint += 3 + sameCount - 5;
        }
      }
    }
    // LEVEL2

    for (var row = 0; row < moduleCount - 1; row += 1) {
      for (var col = 0; col < moduleCount - 1; col += 1) {
        var count = 0;
        if (qrcode.isDark(row, col)) {
          count += 1;
        }
        if (qrcode.isDark(row + 1, col)) {
          count += 1;
        }
        if (qrcode.isDark(row, col + 1)) {
          count += 1;
        }
        if (qrcode.isDark(row + 1, col + 1)) {
          count += 1;
        }
        if (count == 0 || count == 4) {
          lostPoint += 3;
        }
      }
    }

    // LEVEL3

    for (var row = 0; row < moduleCount; row += 1) {
      for (var col = 0; col < moduleCount - 6; col += 1) {
        if (qrcode.isDark(row, col) && !qrcode.isDark(row, col + 1) && qrcode.isDark(row, col + 2) && qrcode.isDark(row, col + 3) && qrcode.isDark(row, col + 4) && !qrcode.isDark(row, col + 5) && qrcode.isDark(row, col + 6)) {
          lostPoint += 40;
        }
      }
    }
    for (var col = 0; col < moduleCount; col += 1) {
      for (var row = 0; row < moduleCount - 6; row += 1) {
        if (qrcode.isDark(row, col) && !qrcode.isDark(row + 1, col) && qrcode.isDark(row + 2, col) && qrcode.isDark(row + 3, col) && qrcode.isDark(row + 4, col) && !qrcode.isDark(row + 5, col) && qrcode.isDark(row + 6, col)) {
          lostPoint += 40;
        }
      }
    }

    // LEVEL4

    var darkCount = 0;
    for (var col = 0; col < moduleCount; col += 1) {
      for (var row = 0; row < moduleCount; row += 1) {
        if (qrcode.isDark(row, col)) {
          darkCount += 1;
        }
      }
    }
    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
    lostPoint += ratio * 10;
    return lostPoint;
  };
  return _this;
}();

//---------------------------------------------------------------------
// QRMath
//---------------------------------------------------------------------

var QRMath = function () {
  var EXP_TABLE = new Array(256);
  var LOG_TABLE = new Array(256);

  // initialize tables
  for (var i = 0; i < 8; i += 1) {
    EXP_TABLE[i] = 1 << i;
  }
  for (var i = 8; i < 256; i += 1) {
    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];
  }
  for (var i = 0; i < 255; i += 1) {
    LOG_TABLE[EXP_TABLE[i]] = i;
  }
  var _this = {};
  _this.glog = function (n) {
    if (n < 1) {
      throw new Error('glog(' + n + ')');
    }
    return LOG_TABLE[n];
  };
  _this.gexp = function (n) {
    while (n < 0) {
      n += 255;
    }
    while (n >= 256) {
      n -= 255;
    }
    return EXP_TABLE[n];
  };
  return _this;
}();

//---------------------------------------------------------------------
// qrPolynomial
//---------------------------------------------------------------------

function qrPolynomial(num, shift) {
  if (typeof num.length == 'undefined') {
    throw new Error(num.length + '/' + shift);
  }
  var _num = function () {
    var offset = 0;
    while (offset < num.length && num[offset] == 0) {
      offset += 1;
    }
    var _num = new Array(num.length - offset + shift);
    for (var i = 0; i < num.length - offset; i += 1) {
      _num[i] = num[i + offset];
    }
    return _num;
  }();
  var _this = {};
  _this.getAt = function (index) {
    return _num[index];
  };
  _this.getLength = function () {
    return _num.length;
  };
  _this.multiply = function (e) {
    var num = new Array(_this.getLength() + e.getLength() - 1);
    for (var i = 0; i < _this.getLength(); i += 1) {
      for (var j = 0; j < e.getLength(); j += 1) {
        num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)));
      }
    }
    return qrPolynomial(num, 0);
  };
  _this.mod = function (e) {
    if (_this.getLength() - e.getLength() < 0) {
      return _this;
    }
    var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0));
    var num = new Array(_this.getLength());
    for (var i = 0; i < _this.getLength(); i += 1) {
      num[i] = _this.getAt(i);
    }
    for (var i = 0; i < e.getLength(); i += 1) {
      num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);
    }

    // recursive call
    return qrPolynomial(num, 0).mod(e);
  };
  return _this;
}
//---------------------------------------------------------------------
// QRRSBlock
//---------------------------------------------------------------------

var QRRSBlock = function () {
  // [1: [L, M, Q, H], ..]
  var RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];
  var qrRSBlock = function qrRSBlock(totalCount, dataCount) {
    var _this = {};
    _this.totalCount = totalCount;
    _this.dataCount = dataCount;
    return _this;
  };
  var _this = {};
  var getRsBlockTable = function getRsBlockTable(typeNumber, errorCorrectLevel) {
    switch (errorCorrectLevel) {
      case QRErrorCorrectLevel.L:
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
      case QRErrorCorrectLevel.M:
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
      case QRErrorCorrectLevel.Q:
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
      case QRErrorCorrectLevel.H:
        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
      default:
        return undefined;
    }
  };
  _this.getRSBlocks = function (typeNumber, errorCorrectLevel) {
    var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);
    if (typeof rsBlock == 'undefined') {
      throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);
    }
    var length = rsBlock.length / 3;
    var list = new Array();
    for (var i = 0; i < length; i += 1) {
      var count = rsBlock[i * 3 + 0];
      var totalCount = rsBlock[i * 3 + 1];
      var dataCount = rsBlock[i * 3 + 2];
      for (var j = 0; j < count; j += 1) {
        list.push(qrRSBlock(totalCount, dataCount));
      }
    }
    return list;
  };
  return _this;
}();

//---------------------------------------------------------------------
// qrBitBuffer
//---------------------------------------------------------------------

var qrBitBuffer = function qrBitBuffer() {
  var _buffer = new Array();
  var _length = 0;
  var _this = {};
  _this.getBuffer = function () {
    return _buffer;
  };
  _this.getAt = function (index) {
    var bufIndex = Math.floor(index / 8);
    return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
  };
  _this.put = function (num, length) {
    for (var i = 0; i < length; i += 1) {
      _this.putBit((num >>> length - i - 1 & 1) == 1);
    }
  };
  _this.getLengthInBits = function () {
    return _length;
  };
  _this.putBit = function (bit) {
    var bufIndex = Math.floor(_length / 8);
    if (_buffer.length <= bufIndex) {
      _buffer.push(0);
    }
    if (bit) {
      _buffer[bufIndex] |= 128 >>> _length % 8;
    }
    _length += 1;
  };
  return _this;
};

//---------------------------------------------------------------------
// qr8BitByte
//---------------------------------------------------------------------

var qr8BitByte = function qr8BitByte(data) {
  var _mode = QRMode.MODE_8BIT_BYTE;
  var _data = data;
  var _parsedData = [];
  var _this = {};

  // Added to support UTF-8 Characters
  for (var i = 0, l = _data.length; i < l; i++) {
    var byteArray = [];
    var code = _data.charCodeAt(i);
    if (code > 65536) {
      byteArray[0] = 240 | (code & 1835008) >>> 18;
      byteArray[1] = 128 | (code & 258048) >>> 12;
      byteArray[2] = 128 | (code & 4032) >>> 6;
      byteArray[3] = 128 | code & 63;
    } else if (code > 2048) {
      byteArray[0] = 224 | (code & 61440) >>> 12;
      byteArray[1] = 128 | (code & 4032) >>> 6;
      byteArray[2] = 128 | code & 63;
    } else if (code > 128) {
      byteArray[0] = 192 | (code & 1984) >>> 6;
      byteArray[1] = 128 | code & 63;
    } else {
      byteArray[0] = code;
    }

    // Fix Unicode corruption bug
    _parsedData.push(byteArray);
  }
  _parsedData = Array.prototype.concat.apply([], _parsedData);
  if (_parsedData.length != _data.length) {
    _parsedData.unshift(191);
    _parsedData.unshift(187);
    _parsedData.unshift(239);
  }
  var _bytes = _parsedData;
  _this.getMode = function () {
    return _mode;
  };
  _this.getLength = function (buffer) {
    return _bytes.length;
  };
  _this.write = function (buffer) {
    for (var i = 0; i < _bytes.length; i += 1) {
      buffer.put(_bytes[i], 8);
    }
  };
  return _this;
};

//=====================================================================
// GIF Support etc.
//

//---------------------------------------------------------------------
// byteArrayOutputStream
//---------------------------------------------------------------------

var byteArrayOutputStream = function byteArrayOutputStream() {
  var _bytes = new Array();
  var _this = {};
  _this.writeByte = function (b) {
    _bytes.push(b & 255);
  };
  _this.writeShort = function (i) {
    _this.writeByte(i);
    _this.writeByte(i >>> 8);
  };
  _this.writeBytes = function (b, off, len) {
    off = off || 0;
    len = len || b.length;
    for (var i = 0; i < len; i += 1) {
      _this.writeByte(b[i + off]);
    }
  };
  _this.writeString = function (s) {
    for (var i = 0; i < s.length; i += 1) {
      _this.writeByte(s.charCodeAt(i));
    }
  };
  _this.toByteArray = function () {
    return _bytes;
  };
  _this.toString = function () {
    var s = '';
    s += '[';
    for (var i = 0; i < _bytes.length; i += 1) {
      if (i > 0) {
        s += ',';
      }
      s += _bytes[i];
    }
    s += ']';
    return s;
  };
  return _this;
};

//---------------------------------------------------------------------
// base64EncodeOutputStream
//---------------------------------------------------------------------

var base64EncodeOutputStream = function base64EncodeOutputStream() {
  var _buffer = 0;
  var _buflen = 0;
  var _length = 0;
  var _base64 = '';
  var _this = {};
  var writeEncoded = function writeEncoded(b) {
    _base64 += String.fromCharCode(encode(b & 63));
  };
  var encode = function encode(n) {
    if (n < 0) {
      // error.
    } else if (n < 26) {
      return 65 + n;
    } else if (n < 52) {
      return 97 + (n - 26);
    } else if (n < 62) {
      return 48 + (n - 52);
    } else if (n == 62) {
      return 43;
    } else if (n == 63) {
      return 47;
    }
    throw new Error('n:' + n);
  };
  _this.writeByte = function (n) {
    _buffer = _buffer << 8 | n & 255;
    _buflen += 8;
    _length += 1;
    while (_buflen >= 6) {
      writeEncoded(_buffer >>> _buflen - 6);
      _buflen -= 6;
    }
  };
  _this.flush = function () {
    if (_buflen > 0) {
      writeEncoded(_buffer << 6 - _buflen);
      _buffer = 0;
      _buflen = 0;
    }
    if (_length % 3 != 0) {
      // padding
      var padlen = 3 - _length % 3;
      for (var i = 0; i < padlen; i += 1) {
        _base64 += '=';
      }
    }
  };
  _this.toString = function () {
    return _base64;
  };
  return _this;
};

//---------------------------------------------------------------------
// base64DecodeInputStream
//---------------------------------------------------------------------

var base64DecodeInputStream = function base64DecodeInputStream(str) {
  var _str = str;
  var _pos = 0;
  var _buffer = 0;
  var _buflen = 0;
  var _this = {};
  _this.read = function () {
    while (_buflen < 8) {
      if (_pos >= _str.length) {
        if (_buflen == 0) {
          return -1;
        }
        throw new Error('unexpected end of file./' + _buflen);
      }
      var c = _str.charAt(_pos);
      _pos += 1;
      if (c == '=') {
        _buflen = 0;
        return -1;
      } else if (c.match(/^\s$/)) {
        // ignore if whitespace.
        continue;
      }
      _buffer = _buffer << 6 | decode(c.charCodeAt(0));
      _buflen += 6;
    }
    var n = _buffer >>> _buflen - 8 & 255;
    _buflen -= 8;
    return n;
  };
  var decode = function decode(c) {
    if (65 <= c && c <= 90) {
      return c - 65;
    } else if (97 <= c && c <= 122) {
      return c - 97 + 26;
    } else if (48 <= c && c <= 57) {
      return c - 48 + 52;
    } else if (c == 43) {
      return 62;
    } else if (c == 47) {
      return 63;
    } else {
      throw new Error('c:' + c);
    }
  };
  return _this;
};

//---------------------------------------------------------------------
// gifImage (B/W)
//---------------------------------------------------------------------

var gifImage = function gifImage(width, height) {
  var _width = width;
  var _height = height;
  var _data = new Array(width * height);
  var _this = {};
  _this.setPixel = function (x, y, pixel) {
    _data[y * _width + x] = pixel;
  };
  _this.write = function (out) {
    //---------------------------------
    // GIF Signature

    out.writeString('GIF87a');

    //---------------------------------
    // Screen Descriptor

    out.writeShort(_width);
    out.writeShort(_height);
    out.writeByte(128); // 2bit
    out.writeByte(0);
    out.writeByte(0);

    //---------------------------------
    // Global Color Map

    // black
    out.writeByte(0);
    out.writeByte(0);
    out.writeByte(0);

    // white
    out.writeByte(255);
    out.writeByte(255);
    out.writeByte(255);

    //---------------------------------
    // Image Descriptor

    out.writeString(',');
    out.writeShort(0);
    out.writeShort(0);
    out.writeShort(_width);
    out.writeShort(_height);
    out.writeByte(0);

    //---------------------------------
    // Local Color Map

    //---------------------------------
    // Raster Data

    var lzwMinCodeSize = 2;
    var raster = getLZWRaster(lzwMinCodeSize);
    out.writeByte(lzwMinCodeSize);
    var offset = 0;
    while (raster.length - offset > 255) {
      out.writeByte(255);
      out.writeBytes(raster, offset, 255);
      offset += 255;
    }
    out.writeByte(raster.length - offset);
    out.writeBytes(raster, offset, raster.length - offset);
    out.writeByte(0);

    //---------------------------------
    // GIF Terminator
    out.writeString(';');
  };
  var bitOutputStream = function bitOutputStream(out) {
    var _out = out;
    var _bitLength = 0;
    var _bitBuffer = 0;
    var _this = {};
    _this.write = function (data, length) {
      if (data >>> length != 0) {
        throw new Error('length over');
      }
      while (_bitLength + length >= 8) {
        _out.writeByte(255 & (data << _bitLength | _bitBuffer));
        length -= 8 - _bitLength;
        data >>>= 8 - _bitLength;
        _bitBuffer = 0;
        _bitLength = 0;
      }
      _bitBuffer = data << _bitLength | _bitBuffer;
      _bitLength = _bitLength + length;
    };
    _this.flush = function () {
      if (_bitLength > 0) {
        _out.writeByte(_bitBuffer);
      }
    };
    return _this;
  };
  var getLZWRaster = function getLZWRaster(lzwMinCodeSize) {
    var clearCode = 1 << lzwMinCodeSize;
    var endCode = (1 << lzwMinCodeSize) + 1;
    var bitLength = lzwMinCodeSize + 1;

    // Setup LZWTable
    var table = lzwTable();
    for (var i = 0; i < clearCode; i += 1) {
      table.add(String.fromCharCode(i));
    }
    table.add(String.fromCharCode(clearCode));
    table.add(String.fromCharCode(endCode));
    var byteOut = byteArrayOutputStream();
    var bitOut = bitOutputStream(byteOut);

    // clear code
    bitOut.write(clearCode, bitLength);
    var dataIndex = 0;
    var s = String.fromCharCode(_data[dataIndex]);
    dataIndex += 1;
    while (dataIndex < _data.length) {
      var c = String.fromCharCode(_data[dataIndex]);
      dataIndex += 1;
      if (table.contains(s + c)) {
        s = s + c;
      } else {
        bitOut.write(table.indexOf(s), bitLength);
        if (table.size() < 4095) {
          if (table.size() == 1 << bitLength) {
            bitLength += 1;
          }
          table.add(s + c);
        }
        s = c;
      }
    }
    bitOut.write(table.indexOf(s), bitLength);

    // end code
    bitOut.write(endCode, bitLength);
    bitOut.flush();
    return byteOut.toByteArray();
  };
  var lzwTable = function lzwTable() {
    var _map = {};
    var _size = 0;
    var _this = {};
    _this.add = function (key) {
      if (_this.contains(key)) {
        throw new Error('dup key:' + key);
      }
      _map[key] = _size;
      _size += 1;
    };
    _this.size = function () {
      return _size;
    };
    _this.indexOf = function (key) {
      return _map[key];
    };
    _this.contains = function (key) {
      return typeof _map[key] != 'undefined';
    };
    return _this;
  };
  return _this;
};
var createImgTag = function createImgTag(width, height, getPixel, alt) {
  var gif = gifImage(width, height);
  for (var y = 0; y < height; y += 1) {
    for (var x = 0; x < width; x += 1) {
      gif.setPixel(x, y, getPixel(x, y));
    }
  }
  var b = byteArrayOutputStream();
  gif.write(b);
  var base64 = base64EncodeOutputStream();
  var bytes = b.toByteArray();
  for (var i = 0; i < bytes.length; i += 1) {
    base64.writeByte(bytes[i]);
  }
  base64.flush();
  var img = '';
  img += 'data:image/gif;base64,';
  img += base64;
  return img;
};

//---------------------------------------------------------------------
// returns qrcode function.

var drawImg = function drawImg(text, options) {
  options = options || {};
  var typeNumber = options.typeNumber || 4;
  var errorCorrectLevel = options.errorCorrectLevel || 'M';
  var size = options.size || 500;
  var qr;
  try {
    qr = qrcode(typeNumber, errorCorrectLevel || 'M');
    qr.addData(text);
    qr.make();
  } catch (e) {
    console.log('CatchClause', e);
    console.log('CatchClause', e);
    if (typeNumber >= 40) {
      throw new Error('Text too long to encode');
    } else {
      return drawImg(text, {
        size: size,
        errorCorrectLevel: errorCorrectLevel,
        typeNumber: typeNumber + 1
      });
    }
  }

  // calc cellsize and margin
  var cellsize = parseInt(size / qr.getModuleCount());
  var margin = parseInt((size - qr.getModuleCount() * cellsize) / 2);
  return qr.createImgTag(cellsize, margin, size);
};
module.exports = {
  drawImg: drawImg
};

/***/ }),

/***/ 38:
/*!****************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/pages.json?{"type":"stat"} ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  "appid": "__UNI__17290FF"
};
exports.default = _default;

/***/ }),

/***/ 383:
/*!******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/admin_meet_biz.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes:预约后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var timeHelper = __webpack_require__(/*! ../../../helper/time_helper.js */ 72);
var projectSetting = __webpack_require__(/*! ../public/project_setting.js */ 75);
var MeetBiz = __webpack_require__(/*! ./meet_biz.js */ 331);
var formSetHelper = __webpack_require__(/*! ../../../cmpts/public/form/form_set_helper.js */ 384);
var AdminMeetBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(AdminMeetBiz, _BaseBiz);
  var _super = _createSuper(AdminMeetBiz);
  function AdminMeetBiz() {
    _classCallCheck(this, AdminMeetBiz);
    return _super.apply(this, arguments);
  }
  _createClass(AdminMeetBiz, null, [{
    key: "getCateName",
    value: function getCateName(cateId) {
      var cateList = projectSetting.MEET_CATE;
      for (var k = 0; k < cateList.length; k++) {
        if (cateList[k].id == cateId) {
          return cateList[k].title;
        }
      }
      return '';
    }

    // 计算剩余天数
  }, {
    key: "getLeaveDay",
    value: function getLeaveDay(days) {
      var now = timeHelper.time('Y-M-D');
      var count = 0;
      for (var k = 0; k < days.length; k++) {
        if (days[k].day >= now) {
          count++;
        }
      }
      return count;
    }

    // 格式化日期字段，
  }, {
    key: "getNewTimeNode",
    value: function getNewTimeNode(day) {
      var timeTemp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var node = dataHelper.deepClone(timeTemp || projectSetting.MEET_NEW_NODE);
      day = day.replace(/-/g, '');
      node.mark = 'T' + day + 'AAA' + dataHelper.genRandomAlpha(10).toUpperCase();
      return node;
    }

    /** 表单初始化相关数据 */
  }, {
    key: "initFormData",
    value: function () {
      var _initFormData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var cateIdOptions;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                cateIdOptions = MeetBiz.getCateList();
                return _context.abrupt("return", {
                  // 选项数据
                  cateIdOptions: cateIdOptions,
                  fields: projectSetting.MEET_FIELDS,
                  // 表单数据
                  formTitle: '',
                  formCateId: cateIdOptions.length == 1 ? cateIdOptions[0].val : '',
                  formOrder: 9999,
                  formCancelSet: 1,
                  formForms: [],
                  formDaysSet: [],
                  // 时间设置

                  formPhone: '',
                  formPassword: '',
                  formJoinForms: formSetHelper.initFields(projectSetting.MEET_JOIN_FIELDS)
                });
              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function initFormData() {
        return _initFormData.apply(this, arguments);
      }
      return initFormData;
    }()
  }, {
    key: "getDaysTimeOptions",
    value: function getDaysTimeOptions() {
      var HourArr = [];
      var clockArr = [];
      var k = 0;
      for (k = 0; k <= 23; k++) {
        var node = {};
        node.label = k + '点';
        node.val = k < 10 ? '0' + k : k;
        HourArr.push(node);
      }
      for (k = 0; k < 59;) {
        var _node = {};
        _node.label = k + '分';
        _node.val = k < 10 ? '0' + k : k;
        clockArr.push(_node);
        k += 5;
        if (k == 60) {
          _node = {};
          _node.label = '59分';
          _node.val = '59';
          clockArr.push(_node);
        }
      }
      return [HourArr, clockArr];
    }
  }]);
  return AdminMeetBiz;
}(BaseBiz);
/** 表单校验  */
AdminMeetBiz.CHECK_FORM = {
  title: 'formTitle|must|string|min:2|max:50|name=名称',
  cateId: 'formCateId|must|id|name=分类',
  order: 'formOrder|must|int|min:0|max:9999|name=排序号',
  cancelSet: 'formCancelSet|must|int|name=取消设置',
  daysSet: 'formDaysSet|must|array|name=预约时间设置',
  phone: 'formPhone|must|string|len:11|name=老师登录手机',
  password: 'formPassword|string|min:6|max:30|name=老师登录密码',
  forms: 'formForms|array',
  joinForms: 'formJoinForms|must|array|name=用户填写项目'
};
module.exports = AdminMeetBiz;

/***/ }),

/***/ 384:
/*!**************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/form/form_set_helper.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 配置格式
 * mark
 * title:
 * type:
 * desc:
 * min:
 * max:
 * must:
 * checkBoxLimit:2
 * onlySet:{mode:'all',cnt:-1}
 * selectOptions:['','']
 * def 默认值
 * edit 是否可删除本字段
 * disabled 是否可修改
 * ext 扩展属性
 */
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var pageHelper = __webpack_require__(/*! ../../../helper/page_helper.js */ 64);
var helper = __webpack_require__(/*! ../../../helper/helper.js */ 65);
var validate = __webpack_require__(/*! ../../../helper/validate.js */ 123);
function initFieldOne(field) {
  return initFields([field])[0];
}
function initFields() {
  var defaultFields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var fields = dataHelper.deepClone(defaultFields);
  if (fields && Array.isArray(fields)) {
    for (var k = 0; k < fields.length; k++) {
      var curForm = fields[k];
      // 补充编号
      if (!curForm['mark']) {
        curForm['mark'] = mark();
      }

      // 常规属性
      if (!helper.isDefined(curForm['type'])) {
        curForm['type'] = 'text';
      }
      if (!helper.isDefined(curForm['title'])) {
        curForm['title'] = '姓名';
      }
      if (!helper.isDefined(curForm['desc'])) {
        curForm['desc'] = '';
      }
      if (!helper.isDefined(curForm['must'])) {
        curForm['must'] = false;
      }
      if (!helper.isDefined(curForm['def'])) {
        curForm['def'] = null;
      } //默认值
      if (!helper.isDefined(curForm['edit'])) {
        curForm['edit'] = true;
      } //是否可编辑删除本字段
      if (!helper.isDefined(curForm['disabled'])) {
        curForm['disabled'] = false;
      } //是否可修改

      // 扩展属性
      if (!helper.isDefined(curForm['ext'])) {
        curForm['ext'] = {};
      }

      // 默认长度
      var max = 50;
      var min = 0;
      switch (fields[k].type) {
        case 'textarea':
          max = 500;
          break;
        case 'carnumber':
          min = 7;
          max = 8;
          break;
        case 'image':
          max = 8;
          break;
        case 'file':
          max = 5;
          break;
        case 'digit':
        case 'int':
          max = 10;
          break;
      }

      // 长度
      if (!helper.isDefined(curForm['max'])) {
        curForm['max'] = max;
      }
      if (!helper.isDefined(curForm['min'])) {
        curForm['min'] = min;
      }

      // 固定长度
      if (helper.isDefined(curForm['len'])) {
        curForm['max'] = curForm['len'];
        curForm['min'] = curForm['len'];
        delete curForm['len'];
      }

      // 图片张数不超过8
      if (fields[k].type == 'image') {
        if (curForm['max'] > 8) {
          curForm['max'] = 8;
        }
        if (curForm['min'] > 8) {
          curForm['min'] = 8;
        }
      }
      if (fields[k].type == 'mobile') {
        curForm['max'] = 11;
        curForm['min'] = 11;
      }

      // 唯一性
      if (!helper.isDefined(curForm['onlySet'])) {
        curForm['onlySet'] = {
          mode: 'all',
          cnt: -1
        };
      }

      // 可选项
      if (!helper.isDefined(curForm['selectOptions'])) {
        if (fields[k].type == 'select' || fields[k].type == 'checkbox' || fields[k].type == 'radio') {
          curForm['selectOptions'] = ['是', '否'];
        } else {
          curForm['selectOptions'] = ['', ''];
        }
      }
      if (!helper.isDefined(curForm['checkBoxLimit'])) {
        curForm['checkBoxLimit'] = 2;
      }
    }
  }
  return fields || [{
    mark: mark(),
    type: 'text',
    title: '姓名',
    desc: '您的姓名',
    must: true,
    min: 0,
    max: 30,
    onlySet: {
      mode: 'all',
      cnt: -1
    },
    selectOptions: ['', ''],
    checkBoxLimit: 2,
    def: null,
    edit: false,
    disabled: false
  }];
}

// 函数参数必须是字符串，因为二代身份证号码是十八位，而在javascript中，十八位的数值会超出计算范围，造成不精确的结果，导致最后两位和计算的值不一致，从而该函数出现错误。
// 详情查看javascript的数值范围
function checkIDCard(idcode) {
  if (idcode.length != 18) {
    return false;
  }

  // 加权因子
  var weight_factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
  // 校验码
  var check_code = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];
  var code = idcode + '';
  var last = idcode[17]; //最后一位

  var seventeen = code.substring(0, 17);

  // ISO 7064:1983.MOD 11-2
  // 判断最后一位校验码是否正确
  var arr = seventeen.split('');
  var len = arr.length;
  var num = 0;
  for (var i = 0; i < len; i++) {
    num = num + arr[i] * weight_factor[i];
  }

  // 获取余数
  var resisue = num % 11;
  var last_no = check_code[resisue];

  // 格式的正则
  // 正则思路
  /*
  第一位不可能是0
  第二位到第六位可以是0-9
  第七位到第十位是年份，所以七八位为19或者20
  十一位和十二位是月份，这两位是01-12之间的数值
  十三位和十四位是日期，是从01-31之间的数值
  十五，十六，十七都是数字0-9
  十八位可能是数字0-9，也可能是X
  */
  var idcard_patter = /^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/;

  // 判断格式是否正确
  var format = idcard_patter.test(idcode);

  // 返回验证结果，校验码和格式同时正确才算是合法的身份证号码
  return last === last_no && format ? true : false;
}

// 必填提示
function getMustHint(type) {
  if (type == 'image' || type == 'file') {
    return '请上传';
  }
  var arr = ['select', 'date', 'month', 'hourminute', 'time', 'checkbox', 'radio', 'switch', 'area'];
  if (arr.includes(type)) {
    return '请选择';
  } else {
    return '请填写';
  }
}

// form 数据校验
function checkForm(fields, forms, that) {
  for (var k = 0; k < fields.length; k++) {
    delete fields[k].focus;
  }
  for (var _k = 0; _k < fields.length; _k++) {
    var type = fields[_k].type;
    var title = '「' + fields[_k].title + '」';
    var val = forms[_k].val;

    // 必填
    var hintOprt = getMustHint(type); //提示动作

    if (fields[_k].must && type != 'switch' && (!helper.isDefined(val) || val.length == 0)) {
      fields[_k].focus = hintOprt + title;
      pageHelper.anchor('form' + forms[_k].mark, that);
      return pageHelper.showModal(hintOprt + '' + title);
    }

    // 填写后，字符串最大长度
    if (val.length > 0 && (type == 'text' || type == 'textarea' || type == 'carnumber' || type == 'int' || type == 'digit')) {
      if (fields[_k].max == fields[_k].min) {
        var len = fields[_k].max;
        if (val.length != len) {
          fields[_k].focus = title + ' 字数必须为' + len + '位';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 字数必须为' + len + '位');
        }
      } else {
        if (val.length > fields[_k].max) {
          fields[_k].focus = title + ' 字数不能多于' + fields[_k].max + '位';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 字数不能多于' + fields[_k].max + '位');
        }
        if (val.length < fields[_k].min) {
          fields[_k].focus = title + ' 字数不能少于' + fields[_k].min + '位';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 字数不能少于' + fields[_k].min + '位');
        }
      }
    }

    // 传图后，字符串最大长度
    if (val.length > 0 && type == 'image') {
      if (fields[_k].max == fields[_k].min) {
        var _len = fields[_k].max;
        if (val.length != _len) {
          fields[_k].focus = title + ' 张数必须为' + _len + '张';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 张数必须为' + _len + '张');
        }
      } else {
        if (val.length > fields[_k].max) {
          fields[_k].focus = title + ' 张数不能多于' + fields[_k].max + '张';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 张数不能多于' + fields[_k].max + '张');
        }
        if (val.length < fields[_k].min) {
          fields[_k].focus = title + ' 张数不能少于' + fields[_k].min + '张';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 张数不能少于' + fields[_k].min + '张');
        }
      }
    }

    // 传文件，字符串最大长度
    if (val.length > 0 && type == 'file') {
      if (fields[_k].max == fields[_k].min) {
        var _len2 = fields[_k].max;
        if (val.length != _len2) {
          fields[_k].focus = title + ' 个数必须为' + _len2 + '个';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 个数必须为' + _len2 + '个');
        }
      } else {
        if (val.length > fields[_k].max) {
          fields[_k].focus = title + ' 个数不能多于' + fields[_k].max + '个';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 个数不能多于' + fields[_k].max + '个');
        }
        if (val.length < fields[_k].min) {
          fields[_k].focus = title + ' 个数不能少于' + fields[_k].min + '个';
          pageHelper.anchor('form' + forms[_k].mark, that);
          return pageHelper.showModal(title + ' 个数不能少于' + fields[_k].min + '个');
        }
      }
    }
    switch (type) {
      case 'rows':
        {
          // 多条目的数据校验
          var ret = that.zpSelectComponent('#rows' + _k).checkForms();
          if (ret !== true) {
            return;
          }
          break;
        }
      case 'tag':
        {
          // 标签格式化
          forms[_k].val = dataHelper.fmtTag(val);
          break;
        }
      case 'mobile':
        {
          if (val.length > 0 && val.length != 11) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'switch':
        {
          // TODO 是否要做判断
          break;
        }
      case 'idcard':
        {
          if (val.length > 0 && !checkIDCard(val)) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'checkbox':
        {
          if (val.length > 0 && val.length < fields[_k].checkBoxLimit) {
            fields[_k].focus = title + ' 至少选中' + fields[_k].checkBoxLimit + '项';
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal(title + ' 至少选中' + fields[_k].checkBoxLimit + '项');
          }
          break;
        }
      case 'date':
        {
          if (validate.checkDate(val)) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'year':
        {
          if (validate.checkYear(val)) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'month':
        {
          if (validate.checkYearMonth(val)) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'hourminute':
        {
          if (validate.checkHourMinute(val)) {
            fields[_k].focus = '请填写正确的 ' + title;
            pageHelper.anchor('form' + forms[_k].mark, that);
            return pageHelper.showModal('请填写正确的 ' + title);
          }
          break;
        }
      case 'int':
        {
          if (validate.checkInt(val)) {
            fields[_k].focus = title + '必须为数字';
            return pageHelper.showModal(title + '必须为数字');
          }
          break;
        }
      case 'digit':
        {
          if (validate.checkDigit(val)) {
            fields[_k].focus = title + '必须为数字或小数';
            return pageHelper.showModal(title + '必须为数字或小数');
          }
          break;
        }
    }
  }
  return true;
}
function mark() {
  return dataHelper.genRandomAlpha(10).toUpperCase();
}
function getTypeOptions() {
  //return dataHelper.getSelectOptions('text=单行文本,select=单项选择,checkbox=多项选择,switch=开关选择,carnumber=车牌,textarea=多行文本,idcard=身份证号码,mobile=手机号码,date=日期 (年 月 日),month=月份,year=年份,hourminute=时间点,area=省市区,int=整数数字,digit=带小数点的数字');

  return dataHelper.getSelectOptions('text=单行文本,select=单项选择,checkbox=多项选择,switch=开关选择,carnumber=车牌,textarea=多行文本,idcard=身份证号码,date=日期 (年 月 日),month=月份,year=年份,hourminute=时间点,area=省市区,int=整数数字,digit=带小数点的数字');
}

// 重复性规则
function getOnlySetOptions() {
  var mode = dataHelper.getSelectOptions('all=本项目全程重复次数,clock=按每一时段限制重复次数,day=按每天限制重复次数');
  var list = [];
  for (var k = 0; k < mode.length; k++) {
    var node = {};
    node.label = mode[k].label;
    node.val = mode[k].val;
    var children = [];
    if (k == 0) {
      children.push({
        label: '不限制重复次数',
        val: -1
      });
    }
    for (var j = 1; j <= 30; j++) {
      var childNode = {};
      if (j == 1) {
        childNode.label = '仅可填写' + j + '次';
      } else {
        childNode.label = '可重复' + j + '次';
      }
      childNode.val = j;
      children.push(childNode);
    }
    node.children = children;
    list.push(node);
  }
  return list;
}

// 重复性规则的表述
function getOnlySetDesc(rule) {
  var ret = '';
  switch (rule.mode) {
    case 'all':
      ret = rule.cnt > 0 ? '本项目全程可重复' + rule.cnt + '次' : '本项目全程不限制重复次数';
      break;
    case 'day':
      ret = '每天可重复' + rule.cnt + '次';
      break;
    case 'clock':
      ret = '每一时段可重复' + rule.cnt + '次';
      break;
  }
  if (rule.cnt == 1) {
    ret = ret.replace(/可重复/g, '仅可填写');
  }
  return ret;
}
module.exports = {
  checkForm: checkForm,
  mark: mark,
  initFieldOne: initFieldOne,
  initFields: initFields,
  getTypeOptions: getTypeOptions,
  getOnlySetOptions: getOnlySetOptions,
  getOnlySetDesc: getOnlySetDesc
};

/***/ }),

/***/ 4:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 409:
/*!****************************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/pages/admin/meet/join/admin_meet_join_bh.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../../../../../helper/page_helper.js */ 64);
var cacheHelper = __webpack_require__(/*! ../../../../../../helper/cache_helper.js */ 66);
var helper = __webpack_require__(/*! ../../../../../../helper/helper.js */ 65);
var timeHelper = __webpack_require__(/*! ../../../../../../helper/time_helper.js */ 72);
var cloudHelper = __webpack_require__(/*! ../../../../../../helper/cloud_helper.js */ 68);
var CACHE_CANCEL_REASON = 'JOIN_CANCEL_REASON';
var CACHE_REFUSE_REASON = 'JOIN_REFUSE_REASON';
module.exports = {
  data: function data() {
    return {
      oprt: 'admin',
      isLoad: false,
      isAllFold: true,
      parentDayIdx: 0,
      parentTimeIdx: 0,
      menuIdx: 0,
      meetId: '',
      mark: '',
      title: '',
      titleEn: '',
      cancelModalShow: false,
      cancelAllModalShow: false,
      refuseModalShow: false,
      formReason: '',
      curIdx: -1
    };
  },
  methods: {
    _init: function _init(options) {
      var _this = this;
      // 附加参数
      if (options && options.meetId && options.mark) {
        //设置搜索菜单
        this._getSearchMenu();
        this.setData({
          meetId: options.meetId,
          mark: options.mark,
          parentDayIdx: options.dayidx,
          parentTimeIdx: options.timeidx,
          time: options.time,
          _params: {
            meetId: options.meetId,
            mark: options.mark
          }
        }, function () {
          _this.setData({
            isLoad: true
          });
        });
      }
      if (options && options.title) {
        var title = decodeURIComponent(options.title);
        this.setData({
          title: title,
          titleEn: options.title
        });
        uni.setNavigationBarTitle({
          title: '分时段预约名单 - ' + title
        });
      }
    },
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    url: function () {
      var _url = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                pageHelper.url(e, this);
              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function url(_x) {
        return _url.apply(this, arguments);
      }
      return url;
    }(),
    bindUnFoldTap: function bindUnFoldTap(e) {
      var idx = pageHelper.dataset(e, 'idx');
      var dataList = this.dataList;
      dataList.list[idx].fold = false;
      this.setData({
        dataList: dataList
      });
    },
    bindFoldTap: function bindFoldTap(e) {
      var idx = pageHelper.dataset(e, 'idx');
      var dataList = this.dataList;
      dataList.list[idx].fold = true;
      this.setData({
        dataList: dataList
      });
    },
    bindFoldAllTap: function bindFoldAllTap(e) {
      var dataList = this.dataList;
      for (var k = 0; k < dataList.list.length; k++) {
        dataList.list[k].fold = true;
      }
      this.setData({
        isAllFold: true,
        dataList: dataList
      });
    },
    bindUnFoldAllTap: function bindUnFoldAllTap(e) {
      var dataList = this.dataList;
      for (var k = 0; k < dataList.list.length; k++) {
        dataList.list[k].fold = false;
      }
      this.setData({
        isAllFold: false,
        dataList: dataList
      });
    },
    bindCopyTap: function bindCopyTap(e) {
      var idx = pageHelper.dataset(e, 'idx');
      var forms = this.dataList.list[idx].JOIN_FORMS;
      var ret = '';
      ret += "\u9879\u76EE\uFF1A".concat(this.dataList.list[idx].JOIN_MEET_TITLE, "\r");
      ret += "\u65F6\u6BB5\uFF1A".concat(this.dataList.list[idx].JOIN_MEET_DAY, " ").concat(this.dataList.list[idx].JOIN_MEET_TIME_START, "\uFF5E").concat(this.dataList.list[idx].JOIN_MEET_TIME_END, "\r");
      for (var k = 0; k < forms.length; k++) {
        ret += forms[k].title + '：' + forms[k].val + '\r';
      }
      uni.setClipboardData({
        data: ret,
        success: function success(res) {
          uni.getClipboardData({
            success: function success(res) {
              pageHelper.showSuccToast('已复制到剪贴板');
            }
          });
        }
      });
    },
    bindCancelTap: function bindCancelTap(e) {
      this.setData({
        formReason: cacheHelper.get(CACHE_CANCEL_REASON) || '',
        curIdx: pageHelper.dataset(e, 'idx'),
        cancelModalShow: true
      });
    },
    bindCancelAllTap: function bindCancelAllTap(e) {
      this.setData({
        formReason: '',
        cancelAllModalShow: true
      });
    },
    bindRefuseTap: function bindRefuseTap(e) {
      this.setData({
        formReason: cacheHelper.get(CACHE_REFUSE_REASON) || '',
        curIdx: pageHelper.dataset(e, 'idx'),
        refuseModalShow: true
      });
    },
    bindCancelCmpt: function () {
      var _bindCancelCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        var e;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                e = {
                  currentTarget: {
                    dataset: {
                      status: 99,
                      idx: this.curIdx
                    }
                  }
                };
                cacheHelper.set(CACHE_CANCEL_REASON, this.formReason, 31536000);
                _context2.next = 4;
                return this.bindStatusTap(e);
              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function bindCancelCmpt() {
        return _bindCancelCmpt.apply(this, arguments);
      }
      return bindCancelCmpt;
    }(),
    bindCancelAllCmpt: function () {
      var _bindCancelAllCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
        var _this2 = this;
        var params, opt;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                params = {
                  reason: this.formReason,
                  meetId: this.meetId,
                  timeMark: this.mark
                };
                opt = {
                  title: '预约记录取消中'
                };
                _context3.next = 5;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_cancel_time_join', params, opt).then(function (res) {
                  var callback = function callback() {
                    var parent = pageHelper.getPrevPage(2);
                    if (parent) {
                      var daysSet = parent.data.daysSet;
                      daysSet[_this2.parentDayIdx].times[_this2.parentTimeIdx].stat = res.data;
                      parent.setData({
                        daysSet: daysSet
                      });
                    }
                    uni.redirectTo({
                      url: "".concat(_this2.oprt, "_meet_join?meetId=").concat(_this2.meetId, "&mark=").concat(_this2.mark, "&title=").concat(_this2.titleEn, "&time=").concat(_this2.time, "&dayidx=").concat(_this2.parentDayIdx, "&timeidx=").concat(_this2.parentTimeIdx)
                    });
                  };
                  pageHelper.showSuccToast('取消成功', 1500, callback);
                });
              case 5:
                _context3.next = 12;
                break;
              case 7:
                _context3.prev = 7;
                _context3.t0 = _context3["catch"](0);
                console.log('CatchClause', _context3.t0);
                console.log('CatchClause', _context3.t0);
                console.log(_context3.t0);
              case 12:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 7]]);
      }));
      function bindCancelAllCmpt() {
        return _bindCancelAllCmpt.apply(this, arguments);
      }
      return bindCancelAllCmpt;
    }(),
    bindRefuseCmpt: function () {
      var _bindRefuseCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
        var e;
        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                e = {
                  currentTarget: {
                    dataset: {
                      status: 8,
                      idx: this.curIdx
                    }
                  }
                };
                cacheHelper.set(CACHE_REFUSE_REASON, this.formReason, 31536000);
                _context4.next = 4;
                return this.bindStatusTap(e);
              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function bindRefuseCmpt() {
        return _bindRefuseCmpt.apply(this, arguments);
      }
      return bindRefuseCmpt;
    }(),
    bindCheckinTap: function () {
      var _bindCheckinTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {
        var _this3 = this;
        var flag, callback;
        return _regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                flag = Number(pageHelper.dataset(e, 'flag'));
                callback = /*#__PURE__*/function () {
                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
                    var idx, dataList, joinId, params, opts;
                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {
                      while (1) {
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            idx = Number(pageHelper.dataset(e, 'idx'));
                            dataList = _this3.dataList;
                            joinId = dataList.list[idx]._id;
                            params = {
                              joinId: joinId,
                              flag: flag
                            };
                            opts = {
                              title: '处理中'
                            };
                            _context5.prev = 5;
                            _context5.next = 8;
                            return cloudHelper.callCloudSumbit(_this3.oprt + '/join_checkin', params, opts).then(function (res) {
                              var cb = function cb() {
                                var sortIndex = _this3.zpSelectComponent('#cmpt-comm-list').getSortIndex();
                                if (sortIndex >= 10 && !_this3.search) {
                                  // 全部或者检索的结果
                                  dataList.list.splice(idx, 1);
                                  dataList.total--;
                                } else {
                                  dataList.list[idx].JOIN_IS_CHECKIN = flag;
                                  dataList.list[idx].JOIN_CHECKIN_TIME = timeHelper.time('Y-M-D h:m:s');
                                }
                                _this3.setData({
                                  dataList: dataList
                                });
                              };
                              pageHelper.showSuccToast('操作成功', 1000, cb);
                            });
                          case 8:
                            _context5.next = 15;
                            break;
                          case 10:
                            _context5.prev = 10;
                            _context5.t0 = _context5["catch"](5);
                            console.log('CatchClause', _context5.t0);
                            console.log('CatchClause', _context5.t0);
                            console.error(_context5.t0);
                          case 15:
                          case "end":
                            return _context5.stop();
                        }
                      }
                    }, _callee5, null, [[5, 10]]);
                  }));
                  return function callback() {
                    return _ref.apply(this, arguments);
                  };
                }();
                if (flag == 1) pageHelper.showConfirm('确认「核销」？', callback);else if (flag == 0) {
                  pageHelper.showConfirm('确认「取消核销」？', callback);
                }
              case 3:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));
      function bindCheckinTap(_x2) {
        return _bindCheckinTap.apply(this, arguments);
      }
      return bindCheckinTap;
    }(),
    bindDelTap: function () {
      var _bindDelTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(e) {
        var _this4 = this;
        var callback;
        return _regeneratorRuntime.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                callback = /*#__PURE__*/function () {
                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {
                    var idx, dataList, joinId, params, opts;
                    return _regeneratorRuntime.wrap(function _callee7$(_context7) {
                      while (1) {
                        switch (_context7.prev = _context7.next) {
                          case 0:
                            idx = Number(pageHelper.dataset(e, 'idx'));
                            dataList = _this4.dataList;
                            joinId = dataList.list[idx]._id;
                            params = {
                              joinId: joinId
                            };
                            opts = {
                              title: '删除中'
                            };
                            _context7.prev = 5;
                            _context7.next = 8;
                            return cloudHelper.callCloudSumbit(_this4.oprt + '/join_del', params, opts).then(function (res) {
                              var cb = function cb() {
                                var dataList = _this4.dataList;
                                dataList.list.splice(idx, 1);
                                dataList.total--;
                                _this4.setData({
                                  dataList: dataList
                                });
                                var parent = pageHelper.getPrevPage(2);
                                if (parent) {
                                  var daysSet = parent.data.daysSet;
                                  daysSet[_this4.parentDayIdx].times[_this4.parentTimeIdx].stat = res.data;
                                  parent.setData({
                                    daysSet: daysSet
                                  });
                                }
                              };
                              pageHelper.showSuccToast('删除成功', 1000, cb);
                            });
                          case 8:
                            _context7.next = 15;
                            break;
                          case 10:
                            _context7.prev = 10;
                            _context7.t0 = _context7["catch"](5);
                            console.log('CatchClause', _context7.t0);
                            console.log('CatchClause', _context7.t0);
                            console.error(_context7.t0);
                          case 15:
                          case "end":
                            return _context7.stop();
                        }
                      }
                    }, _callee7, null, [[5, 10]]);
                  }));
                  return function callback() {
                    return _ref2.apply(this, arguments);
                  };
                }();
                pageHelper.showConfirm('确认删除该预约记录？ 删除后用户将无法查询到本预约记录', callback);
              case 2:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8);
      }));
      function bindDelTap(_x3) {
        return _bindDelTap.apply(this, arguments);
      }
      return bindDelTap;
    }(),
    bindStatusTap: function () {
      var _bindStatusTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(e) {
        var _this5 = this;
        var status, oldStatus, callback;
        return _regeneratorRuntime.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                status = Number(pageHelper.dataset(e, 'status'));
                oldStatus = Number(pageHelper.dataset(e, 'old'));
                callback = /*#__PURE__*/function () {
                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {
                    var idx, dataList, joinId, params, opts;
                    return _regeneratorRuntime.wrap(function _callee9$(_context9) {
                      while (1) {
                        switch (_context9.prev = _context9.next) {
                          case 0:
                            idx = Number(pageHelper.dataset(e, 'idx'));
                            dataList = _this5.dataList;
                            joinId = dataList.list[idx]._id;
                            params = {
                              joinId: joinId,
                              status: status,
                              reason: _this5.formReason
                            };
                            opts = {
                              title: '处理中'
                            };
                            _context9.prev = 5;
                            _context9.next = 8;
                            return cloudHelper.callCloudSumbit(_this5.oprt + '/join_status', params, opts).then(function (res) {
                              pageHelper.showSuccToast('操作成功', 1000);
                              var sortIndex = _this5.zpSelectComponent('#cmpt-comm-list').getSortIndex();
                              if (sortIndex != -1 && sortIndex != 5 && !_this5.search) {
                                // 全部或者检索的结果
                                dataList.list.splice(idx, 1);
                                dataList.total--;
                              } else {
                                dataList.list[idx].JOIN_REASON = _this5.formReason;
                                dataList.list[idx].JOIN_STATUS = status;
                                dataList.list[idx].JOIN_IS_CHECKIN = 0;
                              }
                              _this5.setData({
                                cancelModalShow: false,
                                refuseModalShow: false,
                                formReason: '',
                                curIdx: -1,
                                dataList: dataList
                              });
                              var parent = pageHelper.getPrevPage(2);
                              if (parent) {
                                var daysSet = parent.data.daysSet;
                                daysSet[_this5.parentDayIdx].times[_this5.parentTimeIdx].stat = res.data;
                                parent.setData({
                                  daysSet: daysSet
                                });
                              }
                            });
                          case 8:
                            _context9.next = 15;
                            break;
                          case 10:
                            _context9.prev = 10;
                            _context9.t0 = _context9["catch"](5);
                            console.log('CatchClause', _context9.t0);
                            console.log('CatchClause', _context9.t0);
                            console.error(_context9.t0);
                          case 15:
                          case "end":
                            return _context9.stop();
                        }
                      }
                    }, _callee9, null, [[5, 10]]);
                  }));
                  return function callback() {
                    return _ref3.apply(this, arguments);
                  };
                }();
                _context10.t0 = status;
                _context10.next = _context10.t0 === 99 ? 6 : _context10.t0 === 1 ? 9 : 11;
                break;
              case 6:
                _context10.next = 8;
                return callback();
              case 8:
                return _context10.abrupt("break", 11);
              case 9:
                if (oldStatus == 10) pageHelper.showConfirm('确认变更为「预约成功」？', callback);else if (oldStatus == 99) {
                  pageHelper.showConfirm('确认恢复为「预约成功」状态？', callback);
                }
                return _context10.abrupt("break", 11);
              case 11:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));
      function bindStatusTap(_x4) {
        return _bindStatusTap.apply(this, arguments);
      }
      return bindStatusTap;
    }(),
    bindCommListCmpt: function bindCommListCmpt(e) {
      if (helper.isDefined(e.detail.search)) {
        this.setData({
          search: '',
          sortType: ''
        });
      } else {
        var dataList = e.detail.dataList;
        if (dataList) {
          for (var k = 0; k < dataList.list.length; k++) {
            dataList.list[k].fold = this.isAllFold;
          }
        }
        this.setData({
          dataList: dataList
        });
        if (e.detail.sortType) {
          this.setData({
            sortType: e.detail.sortType
          });
        }
      }
    },
    // 修改与展示状态菜单
    _getSearchMenu: function _getSearchMenu() {
      var sortItems = [];
      var sortMenus = [{
        label: '全部',
        type: '',
        value: ''
      }, {
        label: "\u6210\u529F",
        type: 'status',
        value: 1
      }, {
        label: "\u5DF2\u53D6\u6D88",
        type: 'status',
        value: 1099
      }, {
        label: "\u5DF2\u6838\u9500",
        type: 'checkin',
        value: 1
      }, {
        label: "\u672A\u6838\u9500",
        type: 'checkin',
        value: 0
      }];
      this.setData({
        sortItems: sortItems,
        sortMenus: sortMenus
      });
    },
    bindClearReasonTap: function bindClearReasonTap(e) {
      this.setData({
        formReason: ''
      });
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 42:
/*!********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/setting/setting.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  //### 环境相关
  CLOUD_ID: 'tcb-zz6pckedn3bishi-6cu741161bd8',
  //云服务id ,本地测试环境

  // #### 版本信息
  VER: 'build 2023.10.01',
  COMPANY: '联系作者',
  // #### 系统参数
  IS_SUB: false,
  //分包模式
  IS_DEMO: false,
  //是否演示版

  MOBILE_CHECK: false,
  //手机号码是否真实性校验

  //#################
  IMG_UPLOAD_SIZE: 20,
  //图片上传大小M兆

  // #### 缓存相关
  CACHE_IS_LIST: true,
  //列表是否缓存
  CACHE_LIST_TIME: 1800 //列表缓存时间秒
};

/***/ }),

/***/ 426:
/*!********************************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/pages/admin/meet/record/admin_meet_record_bh.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../../../../../helper/page_helper.js */ 64);
var cloudHelper = __webpack_require__(/*! ../../../../../../helper/cloud_helper.js */ 68);
var timeHelper = __webpack_require__(/*! ../../../../../../helper/time_helper.js */ 72);
module.exports = {
  data: function data() {
    return {
      oprt: 'admin',
      isLoad: false,
      now: timeHelper.time('Y-M-D'),
      searchDayStart: '',
      searchDayEnd: '',
      daysSet: null,
      title: '',
      titleEn: ''
    };
  },
  methods: {
    _init: function _init(options) {
      var _this = this;
      var searchDayStart = timeHelper.time('Y-M-D');
      var searchDayEnd = timeHelper.time('Y-M-D');
      this.setData({
        searchDayStart: searchDayStart,
        searchDayEnd: searchDayEnd
      }, function () {
        _this._loadDetail();
      });
      if (options && options.title) {
        var title = decodeURIComponent(options.title);
        this.setData({
          title: title,
          titleEn: options.title
        });
        uni.setNavigationBarTitle({
          title: '预约名单统计  '
        });
      }
    },
    _loadDetail: function () {
      var _loadDetail2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var _this2 = this;
        var meetId, params, opt;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                meetId = this.meetId;
                if (meetId) {
                  _context.next = 3;
                  break;
                }
                return _context.abrupt("return");
              case 3:
                params = {
                  meetId: meetId,
                  start: this.searchDayStart,
                  end: this.searchDayEnd
                };
                opt = {
                  title: 'bar'
                };
                _context.prev = 5;
                this.setData({
                  daysSet: null
                });
                _context.next = 9;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_day_list', params, opt).then(function (res) {
                  _this2.setData({
                    isLoad: true,
                    daysSet: res.data
                  });
                });
              case 9:
                _context.next = 16;
                break;
              case 11:
                _context.prev = 11;
                _context.t0 = _context["catch"](5);
                console.log('CatchClause', _context.t0);
                console.log('CatchClause', _context.t0);
                console.error(_context.t0);
              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[5, 11]]);
      }));
      function _loadDetail() {
        return _loadDetail2.apply(this, arguments);
      }
      return _loadDetail;
    }(),
    bindSearchTomorrowTap: function bindSearchTomorrowTap(e) {
      var _this3 = this;
      this.setData({
        searchDayStart: timeHelper.time('Y-M-D', 86400),
        searchDayEnd: timeHelper.time('Y-M-D', 86400)
      }, function () {
        _this3._loadDetail();
      });
    },
    bindSearchYesterdayTap: function bindSearchYesterdayTap(e) {
      var _this4 = this;
      this.setData({
        searchDayStart: timeHelper.time('Y-M-D', -86400),
        searchDayEnd: timeHelper.time('Y-M-D', -86400)
      }, function () {
        _this4._loadDetail();
      });
    },
    bindSearchTodayTap: function bindSearchTodayTap(e) {
      var _this5 = this;
      this.setData({
        searchDayStart: timeHelper.time('Y-M-D'),
        searchDayEnd: timeHelper.time('Y-M-D')
      }, function () {
        _this5._loadDetail();
      });
    },
    onPageScroll: function onPageScroll(e) {
      if (e.scrollTop > 100) {
        this.setData({
          topShow: true
        });
      } else {
        this.setData({
          topShow: false
        });
      }
    },
    bindTopTap: function bindTopTap() {
      uni.pageScrollTo({
        scrollTop: 0
      });
    },
    bindSearchTap: function bindSearchTap(e) {
      this._loadDetail();
    },
    url: function url(e) {
      pageHelper.url(e, this);
    },
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function () {
      var _onPullDownRefresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._loadDetail();
              case 2:
                uni.stopPullDownRefresh();
              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function onPullDownRefresh() {
        return _onPullDownRefresh.apply(this, arguments);
      }
      return onPullDownRefresh;
    }(),
    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function onReachBottom() {}
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 435:
/*!****************************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/pages/admin/meet/scan/admin_meet_scan_bh.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../../../../../helper/page_helper.js */ 64);
var cloudHelper = __webpack_require__(/*! ../../../../../../helper/cloud_helper.js */ 68);
module.exports = {
  data: function data() {
    return {
      oprt: 'admin',
      isLoad: true,
      title: ''
    };
  },
  methods: {
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    bindScanTap: function bindScanTap(e) {
      var meetId = this.meetId;
      var that = this;
      uni.scanCode({
        success: function success(res) {
          return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
            var code, params, options;
            return _regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (!(!res || !res.result || !res.result.includes('meet=') || res.result.length != 20)) {
                      _context.next = 3;
                      break;
                    }
                    pageHelper.showModal('错误的预约码，请重新扫码');
                    return _context.abrupt("return");
                  case 3:
                    code = res.result.replace('meet=', '');
                    params = {
                      meetId: meetId,
                      code: code
                    };
                    options = {
                      title: '预约码核销中'
                    };
                    _context.next = 8;
                    return cloudHelper.callCloudSumbit(that.oprt + '/join_scan', params, options).then(function (res) {
                      pageHelper.showModal('核销成功');
                    }).catch(function (err) {
                      console.log(err);
                    });
                  case 8:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        fail: function fail(err) {
          if (err && err.errMsg == 'scanCode:fail') {
            pageHelper.showModal('预约码核销错误，请重新扫码');
          }
        }
      });
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 444:
/*!****************************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/pages/admin/meet/temp/admin_meet_temp_bh.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../../../../../helper/page_helper.js */ 64);
var cloudHelper = __webpack_require__(/*! ../../../../../../helper/cloud_helper.js */ 68);
var AdminMeetBiz = __webpack_require__(/*! ../../../../biz/admin_meet_biz.js */ 383);
module.exports = {
  data: function data() {
    return {
      oprt: 'admin',
      isLoad: false,
      temps: [],
      curIdx: -1,
      curTimeModalShow: false,
      curTimeIsLimit: false,
      // 当前操作是否限制人数
      curTimeLimit: 50 // 当前时段人数限制
    };
  },

  methods: {
    switchModel: function switchModel(e) {
      pageHelper.switchModel(this, e, 'bool');
    },
    bindAllLimitSetCmpt: function () {
      var _bindAllLimitSetCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {
        var _this = this;
        var temp, opts, params;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(this.curIdx <= -1)) {
                  _context.next = 2;
                  break;
                }
                return _context.abrupt("return");
              case 2:
                temp = this.temps[this.curIdx];
                _context.prev = 3;
                opts = {
                  title: '批量修改中'
                };
                params = {
                  id: temp._id,
                  limit: this.curTimeLimit,
                  isLimit: this.curTimeIsLimit
                };
                _context.next = 8;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_temp_edit', params, opts).then(function (res) {
                  _this.setData({
                    temps: res.data,
                    curTimeModalShow: false,
                    curTimeIsLimit: false,
                    curTimeLimit: 50
                  });
                  pageHelper.showSuccToast('修改成功');
                });
              case 8:
                _context.next = 15;
                break;
              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](3);
                console.log('CatchClause', _context.t0);
                console.log('CatchClause', _context.t0);
                console.log(_context.t0);
              case 15:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 10]]);
      }));
      function bindAllLimitSetCmpt(_x) {
        return _bindAllLimitSetCmpt.apply(this, arguments);
      }
      return bindAllLimitSetCmpt;
    }(),
    _loadList: function () {
      var _loadList2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        var _this2 = this;
        var opts;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                opts = {
                  title: 'bar'
                };
                _context2.next = 4;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_temp_list', {}, opts).then(function (res) {
                  _this2.setData({
                    isLoad: res.data.length == 0 ? null : true,
                    temps: res.data
                  });
                });
              case 4:
                _context2.next = 11;
                break;
              case 6:
                _context2.prev = 6;
                _context2.t0 = _context2["catch"](0);
                console.log('CatchClause', _context2.t0);
                console.log('CatchClause', _context2.t0);
                console.log(_context2.t0);
              case 11:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[0, 6]]);
      }));
      function _loadList() {
        return _loadList2.apply(this, arguments);
      }
      return _loadList;
    }(),
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    onPullDownRefresh: function () {
      var _onPullDownRefresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this._loadList();
              case 2:
                uni.stopPullDownRefresh();
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function onPullDownRefresh() {
        return _onPullDownRefresh.apply(this, arguments);
      }
      return onPullDownRefresh;
    }(),
    bindSelectTap: function bindSelectTap(e) {
      var curIdx = pageHelper.dataset(e, 'idx');
      var temps = this.temps[curIdx].TEMP_TIMES;
      var name = this.temps[curIdx].TEMP_NAME;
      var parent = pageHelper.getPrevPage(2);
      if (!parent) {
        return;
      }
      var days = parent.data.days;
      var day = days[parent.data.curIdx].day;
      var callback = function callback() {
        var times = [];
        for (var k = 0; k < temps.length; k++) {
          var node = AdminMeetBiz.getNewTimeNode(day);
          node.start = temps[k].start;
          node.end = temps[k].end;
          node.limit = temps[k].limit;
          node.isLimit = temps[k].isLimit;
          times.push(node);
        }
        days[parent.data.curIdx].times = times;
        parent.setData({
          days: days
        });
        uni.navigateBack();
      };
      pageHelper.showConfirm('确认要选用模板 「' + name + '」配置到日期 「' + day + '」下吗?', callback);
    },
    _delTemp: function () {
      var _delTemp2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(curIdx, id) {
        var _this3 = this;
        var opts, params;
        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.prev = 0;
                opts = {
                  title: '删除中'
                };
                params = {
                  id: id
                };
                _context4.next = 5;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_temp_del', params, opts).then(function (res) {
                  var temps = _this3.temps;
                  temps.splice(curIdx, 1);
                  _this3.setData({
                    temps: temps
                  });
                  if (temps.length == 0) {
                    _this3.setData({
                      isLoad: null
                    });
                  }
                });
              case 5:
                _context4.next = 12;
                break;
              case 7:
                _context4.prev = 7;
                _context4.t0 = _context4["catch"](0);
                console.log('CatchClause', _context4.t0);
                console.log('CatchClause', _context4.t0);
                console.log(_context4.t0);
              case 12:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[0, 7]]);
      }));
      function _delTemp(_x2, _x3) {
        return _delTemp2.apply(this, arguments);
      }
      return _delTemp;
    }(),
    bindOprtTap: function bindOprtTap(e) {
      var _this4 = this;
      var curIdx = pageHelper.dataset(e, 'idx');
      var itemList = ['删除模板', '批量设置人数上限'];
      uni.showActionSheet({
        itemList: itemList,
        success: function () {
          var _success = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(res) {
            var idx, temps, name, callback;
            return _regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    idx = res.tapIndex;
                    if (idx == 0) {
                      // 删除
                      temps = _this4.temps;
                      name = temps[curIdx].TEMP_NAME;
                      callback = function callback() {
                        _this4._delTemp(curIdx, temps[curIdx]._id);
                      };
                      pageHelper.showConfirm('确认要删除模板 「' + name + '」吗?', callback);
                    }
                    if (idx == 1) {
                      _this4.setData({
                        curIdx: curIdx,
                        curTimeModalShow: true
                      });
                    }
                  case 3:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }));
          function success(_x4) {
            return _success.apply(this, arguments);
          }
          return success;
        }(),
        fail: function fail(res) {}
      });
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 45:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    if(typeof renderjs.beforeCreate === 'function'){
			renderjs.beforeCreate = [renderjs.beforeCreate]
		}
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 453:
/*!****************************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/pages/admin/meet/time/admin_meet_time_bh.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var AdminBiz = __webpack_require__(/*! ../../../../../../comm/biz/admin_biz.js */ 113);
var pageHelper = __webpack_require__(/*! ../../../../../../helper/page_helper.js */ 64);
var dataHelper = __webpack_require__(/*! ../../../../../../helper/data_helper.js */ 69);
var timeHelper = __webpack_require__(/*! ../../../../../../helper/time_helper.js */ 72);
var cloudHelper = __webpack_require__(/*! ../../../../../../helper/cloud_helper.js */ 68);
var AdminMeetBiz = __webpack_require__(/*! ../../../../biz/admin_meet_biz.js */ 383);
var projectSetting = __webpack_require__(/*! ../../../../public/project_setting.js */ 75);
module.exports = {
  data: function data() {
    return {
      oprt: 'admin',
      daysTimeOptions: AdminMeetBiz.getDaysTimeOptions(),
      multiDoDay: [],
      //当前选择

      hasDays: [],
      //超时有数据(simple)
      lastHasDays: [],
      //超时有数据(full)
      hasJoinDays: [],
      //未超时有预约

      days: [],
      curIdx: -1,
      // 当前操作的日子索引
      curTimesIdx: -1,
      // 当前操作的时段索引

      curTimeLimitModalShow: false,
      curTimeIsLimit: false,
      // 当前操作是否限制人数
      curTimeLimit: 50,
      // 当前时段人数限制

      saveTempModalShow: false,
      formTempName: '',
      cancelModalShow: false,
      //删除对话框
      formReason: '' //取消理由
    };
  },

  methods: {
    _init: function _init() {
      var parent = pageHelper.getPrevPage(2);
      if (parent) {
        var formDaysSet = parent.data.formDaysSet;
        var days = [];
        var lastHasDays = [];
        var hasJoinDays = [];
        var now = timeHelper.time('Y-M-D');
        for (var k = 0; k < formDaysSet.length; k++) {
          //已超时无法编辑, 有数据显示form
          if (formDaysSet[k].day < now) {
            lastHasDays.push(formDaysSet[k]);
          } else {
            days.push(formDaysSet[k]);
            if (this._checkHasJoinCnt(formDaysSet[k].times)) {
              hasJoinDays.push(formDaysSet[k].day);
            }
          }
        }
        this.setData({
          hasDays: dataHelper.getArrByKey(lastHasDays, 'day'),
          lastHasDays: lastHasDays,
          hasJoinDays: hasJoinDays,
          days: days
        });
        this._syncCalData();
      }
    },
    _setHasJoinDays: function _setHasJoinDays() {
      var days = this.days;
      var now = timeHelper.time('Y-M-D');
      var hasJoinDays = [];
      for (var k = 0; k < days.length; k++) {
        if (days[k].day < now) {
          continue;
        } else {
          if (this._checkHasJoinCnt(days[k].times)) {
            hasJoinDays.push(days[k].day);
          }
        }
      }
      this.setData({
        hasJoinDays: hasJoinDays
      });
    },
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    model: function model(e) {
      pageHelper.model(this, e);
    },
    // 判断含有预约的日期
    _checkHasJoinCnt: function _checkHasJoinCnt(times) {
      if (!times) {
        return false;
      }
      for (var k = 0; k < times.length; k++) {
        if (times[k].stat.succCnt) {
          return true;
        }
      }
      return false;
    },
    _syncCalData: function _syncCalData(e) {
      // 同步日历选中
      var days = this.days;
      var multiDoDay = dataHelper.getArrByKey(days, 'day');
      this.setData({
        multiDoDay: multiDoDay
      });
    },
    bindTimeAddTap: function bindTimeAddTap(e) {
      var idx = pageHelper.dataset(e, 'idx');
      var days = this.days;
      if (days[idx].times.length >= 20) {
        return pageHelper.showModal('最多可以添加20个时段');
      }
      days[idx].times.push(AdminMeetBiz.getNewTimeNode(days[idx].day));
      this.setData({
        days: days
      });
    },
    bindCancelMeetJoinCmpt: function () {
      var _bindCancelMeetJoinCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {
        var _this = this;
        var curIdx, curTimesIdx, days, parent, params, opt;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                //取消已有预约
                curIdx = this.curIdx;
                curTimesIdx = this.curTimesIdx;
                days = this.days;
                _context.prev = 3;
                parent = pageHelper.getPrevPage(2);
                if (parent) {
                  _context.next = 7;
                  break;
                }
                return _context.abrupt("return");
              case 7:
                params = {
                  reason: this.formReason,
                  meetId: parent.data.id,
                  timeMark: days[curIdx].times[curTimesIdx].mark
                };
                opt = {
                  title: '预约记录取消中'
                };
                _context.next = 11;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_cancel_time_join', params, opt).then(function (res) {
                  var callback = function callback() {
                    days[curIdx].times.splice(curTimesIdx, 1);
                    _this.setData({
                      days: days,
                      cancelModalShow: false,
                      formReason: ''
                    });
                    _this._setHasJoinDays();
                  };
                  pageHelper.showSuccToast('取消成功', 1500, callback);
                });
              case 11:
                _context.next = 18;
                break;
              case 13:
                _context.prev = 13;
                _context.t0 = _context["catch"](3);
                console.log('CatchClause', _context.t0);
                console.log('CatchClause', _context.t0);
                console.log(_context.t0);
              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 13]]);
      }));
      function bindCancelMeetJoinCmpt(_x) {
        return _bindCancelMeetJoinCmpt.apply(this, arguments);
      }
      return bindCancelMeetJoinCmpt;
    }(),
    bindTimeDelTap: function bindTimeDelTap(e) {
      var _this2 = this;
      var idx = pageHelper.dataset(e, 'idx');
      var timesIdx = pageHelper.dataset(e, 'timesidx');
      var days = this.days;
      var node = days[idx].times[timesIdx];
      if (node.stat.succCnt) {
        var callback = /*#__PURE__*/function () {
          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
            return _regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _this2.setData({
                      formReason: '',
                      curIdx: idx,
                      curTimesIdx: timesIdx,
                      cancelModalShow: true //显示对话框
                    });
                  case 1:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          return function callback() {
            return _ref.apply(this, arguments);
          };
        }();
        pageHelper.showConfirm('该时段已有「' + node.stat.succCnt + '人」预约，若选择删除则将取消所有预约，请仔细确认！ 若不想取消，可以选择停止该时段', callback);
      } else {
        var _callback = function _callback() {
          days[idx].times.splice(timesIdx, 1);
          _this2.setData({
            days: days
          });
        };
        pageHelper.showConfirm('是否要删除该时间段？', _callback);
      }
    },
    bindTimeStatusSwitch: function bindTimeStatusSwitch(e) {
      var _this3 = this;
      var idx = pageHelper.dataset(e, 'idx');
      var timesIdx = pageHelper.dataset(e, 'timesidx');
      var days = this.days;
      var status = days[idx].times[timesIdx].status;
      if (status == 0) {
        days[idx].times[timesIdx].status = 1;
        this.setData({
          days: days
        });
      } else {
        var yes = function yes() {
          days[idx].times[timesIdx].status = 0;
          _this3.setData({
            days: days
          });
        };
        pageHelper.showConfirm('是否要停止该时间段的预约？停止后，已有预约记录仍将保留', yes);
      }
    },
    bindDaysTimeStartCmpt: function bindDaysTimeStartCmpt(e) {
      var start = e.detail.join(':');
      var idx = pageHelper.dataset(e, 'idx');
      var timesIdx = pageHelper.dataset(e, 'timesidx');
      var days = this.days;
      var end = days[idx].times[timesIdx].end;
      if (start >= end) {
        return pageHelper.showModal('开始时间不能大于等于结束时间');
      }
      days[idx].times[timesIdx].start = start;
      this.setData({
        days: days
      });
    },
    bindDaysTimeEndCmpt: function bindDaysTimeEndCmpt(e) {
      var end = e.detail.join(':');
      var idx = pageHelper.dataset(e, 'idx');
      var timesIdx = pageHelper.dataset(e, 'timesidx');
      var days = this.days;
      var start = days[idx].times[timesIdx].start;
      if (start >= end) {
        return pageHelper.showModal('开始时间不能大于等于结束时间');
      }
      days[idx].times[timesIdx].end = end;
      this.setData({
        days: days
      });
    },
    switchModel: function switchModel(e) {
      pageHelper.switchModel(this, e, 'bool');
    },
    bindSaveTempCmpt: function () {
      var _bindSaveTempCmpt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {
        var _this4 = this;
        var name, days, times, temps, k, node, opt, params;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                name = this.formTempName;
                if (!(name.length <= 0)) {
                  _context3.next = 4;
                  break;
                }
                return _context3.abrupt("return", pageHelper.showNoneToast('请填写模板名称'));
              case 4:
                if (!(name.length > 20)) {
                  _context3.next = 6;
                  break;
                }
                return _context3.abrupt("return", pageHelper.showNoneToast('模板名称不能超过20个字哦'));
              case 6:
                days = this.days;
                times = days[this.curIdx].times;
                if (!(times.length <= 0)) {
                  _context3.next = 10;
                  break;
                }
                return _context3.abrupt("return", pageHelper.showNoneToast('至少需要包含一个时段'));
              case 10:
                if (!(times.length > 20)) {
                  _context3.next = 12;
                  break;
                }
                return _context3.abrupt("return", pageHelper.showNoneToast('时段不能超过20个'));
              case 12:
                temps = [];
                for (k = 0; k < times.length; k++) {
                  node = {};
                  node.start = times[k].start;
                  node.end = times[k].end;
                  node.isLimit = times[k].isLimit;
                  node.limit = times[k].limit;
                  temps.push(node);
                }
                opt = {
                  title: '模板保存中'
                };
                params = {
                  name: name,
                  times: temps
                };
                _context3.next = 18;
                return cloudHelper.callCloudSumbit(this.oprt + '/meet_temp_insert', params, opt).then(function (res) {
                  pageHelper.showSuccToast('保存成功');
                  _this4.setData({
                    saveTempModalShow: false,
                    formTempName: ''
                  });
                });
              case 18:
                _context3.next = 25;
                break;
              case 20:
                _context3.prev = 20;
                _context3.t0 = _context3["catch"](0);
                console.log('CatchClause', _context3.t0);
                console.log('CatchClause', _context3.t0);
                console.log(_context3.t0);
              case 25:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 20]]);
      }));
      function bindSaveTempCmpt(_x2) {
        return _bindSaveTempCmpt.apply(this, arguments);
      }
      return bindSaveTempCmpt;
    }(),
    bindTimeLimitSetCmpt: function bindTimeLimitSetCmpt(e) {
      var days = this.days;
      var idx = this.curIdx;
      var timesIdx = this.curTimesIdx;
      if (this.curTimesIdx == -1) {
        // 全天
        for (var k = 0; k < days[idx].times.length; k++) {
          days[idx].times[k].isLimit = this.curTimeIsLimit;
          days[idx].times[k].limit = this.curTimeLimit;
        }
      } else {
        // 某时间段
        var node = days[idx].times[timesIdx];
        node.isLimit = this.curTimeIsLimit;
        node.limit = this.curTimeLimit;
        days[idx].times[timesIdx] = node;
      }
      this.setData({
        days: days,
        curTimeLimitModalShow: false
      });
    },
    bindShowTimeLimitModalTap: function bindShowTimeLimitModalTap(e) {
      var curIdx = pageHelper.dataset(e, 'idx');
      var curTimesIdx = pageHelper.dataset(e, 'timesidx');
      var days = this.days;
      if (curTimesIdx == -1) {
        // 全天
        this.setData({
          curIdx: curIdx,
          curTimesIdx: -1,
          curTimeIsLimit: false,
          curTimeLimit: 50,
          curTimeLimitModalShow: true
        });
      } else {
        // 时间段
        var node = days[curIdx].times[curTimesIdx];
        var curTimeIsLimit = node.isLimit;
        var curTimeLimit = node.limit;
        this.setData({
          curIdx: curIdx,
          curTimesIdx: curTimesIdx,
          curTimeIsLimit: curTimeIsLimit,
          curTimeLimit: curTimeLimit,
          curTimeLimitModalShow: true
        });
      }
    },
    _selectTemp: function _selectTemp(e) {
      var curIdx = pageHelper.dataset(e, 'idx');
      if (this._checkHasJoinCnt(this.days[curIdx].times)) {
        return pageHelper.showModal('该日已有用户预约，不能选用模板。若确定要选用模板，请先删除有预约的时段');
      }
      this.setData({
        curIdx: curIdx
      });
      uni.navigateTo({
        url: '../temp/' + this.oprt + '_meet_temp'
      });
    },
    url: function url(e) {
      pageHelper.url(e, this);
    },
    _saveTempModal: function _saveTempModal(e) {
      var curIdx = pageHelper.dataset(e, 'idx');
      var days = this.days;
      if (days[curIdx].times.length <= 0) {
        return pageHelper.showModal('该日期下没有设置时段，无法保存为模板，请先添加时段');
      }
      this.setData({
        saveTempModalShow: true,
        curIdx: curIdx
      });
    },
    _copyDaySetToAll: function _copyDaySetToAll(e) {
      var _this5 = this;
      //  复制到所有
      var curIdx = pageHelper.dataset(e, 'idx');
      var days = this.days;
      var day = days[curIdx].day;
      var temps = days[curIdx].times;
      var callback = function callback() {
        for (var k = 0; k < days.length; k++) {
          if (_this5._checkHasJoinCnt(days[k].times)) {
            continue;
          } //自己和有记录不复制

          var times = [];
          for (var j in temps) {
            var node = AdminMeetBiz.getNewTimeNode(days[k].day);
            node.start = temps[j].start;
            node.end = temps[j].end;
            node.limit = temps[j].limit;
            node.isLimit = temps[j].isLimit;
            times.push(node);
          }
          days[k].times = times;
        }
        _this5.setData({
          days: days
        });
      };
      pageHelper.showConfirm('确认将「' + day + '」下的时段设置复制到其他日期下吗? (原有时段将被清除，如已有预约记录则该日的所有时段将不被修改)', callback);
    },
    bindDaySetTap: function () {
      var _bindDaySetTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e) {
        var _this6 = this;
        var itemList;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                itemList = ['选用模板配置', '保存为模板', '删除该日期', '复制到所有日期'];
                uni.showActionSheet({
                  itemList: itemList,
                  success: function () {
                    var _success = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res) {
                      var idx, curIdx, callback;
                      return _regeneratorRuntime.wrap(function _callee4$(_context4) {
                        while (1) {
                          switch (_context4.prev = _context4.next) {
                            case 0:
                              idx = res.tapIndex;
                              if (idx == 0) {
                                // 选用模板配置
                                _this6._selectTemp(e);
                              }
                              if (idx == 1) {
                                // 保存为模板
                                _this6._saveTempModal(e);
                              }
                              if (!(idx == 2)) {
                                _context4.next = 9;
                                break;
                              }
                              //  删除
                              curIdx = pageHelper.dataset(e, 'idx');
                              if (!_this6._checkHasJoinCnt(_this6.days[curIdx].times)) {
                                _context4.next = 7;
                                break;
                              }
                              return _context4.abrupt("return", pageHelper.showModal('该日已有用户预约，不能直接删除。若确定要删除，请先删除有预约的时段'));
                            case 7:
                              callback = function callback() {
                                var days = _this6.days;
                                days.splice(curIdx, 1);
                                _this6.setData({
                                  days: days
                                });
                                _this6._syncCalData();
                              };
                              pageHelper.showConfirm('确认删除该日期吗?', callback);
                            case 9:
                              if (idx == 3) {
                                //复制到所有
                                _this6._copyDaySetToAll(e);
                              }
                            case 10:
                            case "end":
                              return _context4.stop();
                          }
                        }
                      }, _callee4);
                    }));
                    function success(_x4) {
                      return _success.apply(this, arguments);
                    }
                    return success;
                  }(),
                  fail: function fail(res) {}
                });
              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));
      function bindDaySetTap(_x3) {
        return _bindDaySetTap.apply(this, arguments);
      }
      return bindDaySetTap;
    }(),
    bindTimeSetTap: function () {
      var _bindTimeSetTap = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(e) {
        var _this7 = this;
        var itemList;
        return _regeneratorRuntime.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                itemList = ['复制到所有日期', '选用模板配置', '保存为模板'];
                uni.showActionSheet({
                  itemList: itemList,
                  success: function () {
                    var _success2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(res) {
                      var idx;
                      return _regeneratorRuntime.wrap(function _callee6$(_context6) {
                        while (1) {
                          switch (_context6.prev = _context6.next) {
                            case 0:
                              idx = res.tapIndex;
                              if (idx == 0) {
                                // 复制到所有
                                _this7._copyDaySetToAll(e);
                              }
                              if (idx == 1) {
                                // 选用模板配置
                                _this7._selectTemp(e);
                              }
                              if (idx == 2) {
                                // 保存为模板
                                _this7._saveTempModal(e);
                              }
                            case 4:
                            case "end":
                              return _context6.stop();
                          }
                        }
                      }, _callee6);
                    }));
                    function success(_x6) {
                      return _success2.apply(this, arguments);
                    }
                    return success;
                  }(),
                  fail: function fail(res) {}
                });
              case 2:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7);
      }));
      function bindTimeSetTap(_x5) {
        return _bindTimeSetTap.apply(this, arguments);
      }
      return bindTimeSetTap;
    }(),
    bindDataCalendarClickCmpt: function bindDataCalendarClickCmpt(e) {
      // 数据日历点击
      var clickDays = e.detail.days;
      if (!clickDays) {
        return;
      }
      var days = this.days;
      var retDays = [];
      for (var k = 0; k < clickDays.length; k++) {
        var dayExist = false;
        for (var j in days) {
          if (days[j].day == clickDays[k]) {
            // 节点存在
            retDays.push(days[j]);
            dayExist = true;
            break;
          }
        }

        // 节点不存在
        if (!dayExist) {
          var dayDesc = timeHelper.fmtDateCHN(clickDays[k]) + ' (' + timeHelper.week(clickDays[k]) + ')';
          var dayNode = projectSetting.MEET_NEW_NODE_DAY;
          var times = [];
          for (var n = 0; n < dayNode.length; n++) {
            times.push(AdminMeetBiz.getNewTimeNode(clickDays[k], dayNode[n]));
          }
          var node = {
            day: clickDays[k],
            dayDesc: dayDesc,
            times: times
          };
          retDays.push(node);
        }
      }
      this.setData({
        days: retDays
      });
    },
    onPageScroll: function onPageScroll(e) {
      if (e.scrollTop > 100) {
        this.setData({
          topShow: true
        });
      } else {
        this.setData({
          topShow: false
        });
      }
    },
    bindClearReasonTap: function bindClearReasonTap(e) {
      this.setData({
        formReason: ''
      });
    },
    bindTopTap: function bindTopTap() {
      uni.pageScrollTo({
        scrollTop: 0
      });
    },
    bindSaveTap: function bindSaveTap() {
      var parent = pageHelper.getPrevPage(2);
      if (!parent) {
        pageHelper.showNoneToast('前序页面不存在');
        return;
      }
      var days = this.days;
      var getDays = [];
      if (!projectSetting.MEET_CAN_NULL_TIME) {
        // 是否允许无时段日期
        for (var k = 0; k < days.length; k++) {
          if (days[k].times.length > 0) {
            getDays.push(days[k]);
          }
        }
      } else {
        getDays = days;
      }
      var formDaysSet = this.lastHasDays.concat(getDays);
      parent.setData({
        formDaysSet: formDaysSet
      });
      uni.navigateBack();
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 46:
/*!********************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _pageLifetimes = __webpack_require__(/*! ./lifecycle/pageLifetimes */ 47);
var _clone = __webpack_require__(/*! ./methods/clone */ 48);
var _dataset = __webpack_require__(/*! ./methods/dataset */ 49);
var _escape = __webpack_require__(/*! ./methods/escape */ 50);
var _event = __webpack_require__(/*! ./methods/event */ 51);
var _getTabBar = __webpack_require__(/*! ./methods/getTabBar */ 52);
var _relation = __webpack_require__(/*! ./methods/relation */ 53);
var _selectComponent = __webpack_require__(/*! ./methods/selectComponent */ 54);
var _setData = __webpack_require__(/*! ./methods/setData */ 55);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _default = {
  install: function install(Vue, option) {
    Vue.mixin(_objectSpread(_objectSpread({}, _pageLifetimes.pageLifetimes), {}, {
      methods: {
        clone: _clone.clone,
        handleDataset: _dataset.handleDataset,
        escape2Html: _escape.escape2Html,
        html2Escape: _escape.html2Escape,
        parseEventDynamicCode: _event.parseEventDynamicCode,
        getTabBar: _getTabBar.getTabBar,
        getRelationNodes: _relation.getRelationNodes,
        zpSelectComponent: _selectComponent.selectComponent,
        zpSelectAllComponents: _selectComponent.selectAllComponents,
        setData: _setData.setData
      }
    }));
  }
};
exports.default = _default;

/***/ }),

/***/ 47:
/*!**************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/lifecycle/pageLifetimes.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pageLifetimes = void 0;
/**
 * 组件pageLifetimes处理，需在页面生命周期里调用
 * @param {Object} node
 * @param {Object} lifeName
 */
function handlePageLifetime(node, lifeName) {
  node.$children.map(function (child) {
    if (typeof child[lifeName] == 'function') child[lifeName]();
    handlePageLifetime(child, lifeName);
  });
}
var pageLifetimes = {
  onLoad: function onLoad() {
    // uni.onWindowResize(CALLBACK)  监听窗口尺寸变化事件
    // 平台差异说明
    // App	H5	微信小程序	支付宝小程序	百度小程序	抖音小程序	飞书小程序	QQ小程序
    // √	√	√	x	x	x	√	√
  },
  onShow: function onShow() {
    handlePageLifetime(this, "handlePageShow");
  },
  onHide: function onHide() {
    handlePageLifetime(this, "handlePageHide");
  },
  onResize: function onResize() {
    //onResize	监听窗口尺寸变化	App、微信小程序、快手小程序

    handlePageLifetime(this, "handlePageResize");
  }
};
exports.pageLifetimes = pageLifetimes;

/***/ }),

/***/ 48:
/*!****************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/clone.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clone = clone;
/**
 * 用于处理对props进行赋值的情况
 * //简单处理一下就行了
 *
 * @param {*} target
 * @returns
 */
function clone(target) {
  return JSON.parse(JSON.stringify(target));
}

/***/ }),

/***/ 49:
/*!******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/dataset.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.handleDataset = handleDataset;
/**
 * 用于处理dataset
 * 自定义组件的事件里，是获取不到e.currentTarget.dataset的
 * 因此收集data-参数，手动传进去
 *
 * @param {*} event
 * @param {*} dataSet
 */
function handleDataset(event) {
  var dataSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (event && !event.currentTarget) {
    if (dataSet.tagId) {
      event.currentTarget = {
        id: dataSet.tagId
      };
    } else {
      event.currentTarget = {
        dataset: dataSet
      };
    }
  }
}

/***/ }),

/***/ 5:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ 6);
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ 7);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ 10);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 50:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/escape.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.escape2Html = escape2Html;
exports.html2Escape = html2Escape;
/**
 * 转义符换成普通字符
 * @param {*} str
 * @returns
 */
function escape2Html(str) {
  if (!str) return str;
  var arrEntities = {
    'lt': '<',
    'gt': '>',
    'nbsp': ' ',
    'amp': '&',
    'quot': '"'
  };
  return str.replace(/&(lt|gt|nbsp|amp|quot);/ig, function (all, t) {
    return arrEntities[t];
  });
}

/**
 * 普通字符转换成转义符
 * @param {*} sHtml
 * @returns
 */
function html2Escape(sHtml) {
  if (!sHtml) return sHtml;
  return sHtml.replace(/[<>&"]/g, function (c) {
    return {
      '<': '&lt;',
      '>': '&gt;',
      '&': '&amp;',
      '"': '&quot;'
    }[c];
  });
}

/***/ }),

/***/ 51:
/*!****************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/event.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseEventDynamicCode = parseEventDynamicCode;
/**
 * 解析事件里的动态函数名，这种没有()的函数名，在uniapp不被执行
 * 比如：<view bindtap="{{openId==undefined?'denglu':'hy_to'}}">立即</view>
 * @param {*} exp
 */
function parseEventDynamicCode(e, exp) {
  if (typeof this[exp] === 'function') {
    this[exp](e);
  }
}

/***/ }),

/***/ 52:
/*!********************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/getTabBar.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTabBar = getTabBar;
/**
 * 接管getTabBar函数，默认uni-app是没有这个函数的
 * 适用于使用custom-tab-bar自定义导航栏的小程序项目
 * 需注意：
 * 1.custom-tab-bar下面仍是小程序文件
 * 2.pages.json里面需使用条件编译区分好小程序和非小程序的tabBar配置
 */
function getTabBar() {
  return {
    setData: function setData(obj) {
      var _this$$mp, _this$$mp$page, _this$$mp2, _this$$mp2$page;
      if (typeof ((_this$$mp = this.$mp) === null || _this$$mp === void 0 ? void 0 : (_this$$mp$page = _this$$mp.page) === null || _this$$mp$page === void 0 ? void 0 : _this$$mp$page.getTabBar) === 'function' && (_this$$mp2 = this.$mp) !== null && _this$$mp2 !== void 0 && (_this$$mp2$page = _this$$mp2.page) !== null && _this$$mp2$page !== void 0 && _this$$mp2$page.getTabBar()) {
        this.$mp.page.getTabBar().setData(obj);
      } else {
        console.log("当前平台不支持getTabBar()，已稍作处理，详细请参见相关文档。");
      }
    }
  };
}

/***/ }),

/***/ 53:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/relation.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRelationNodes = getRelationNodes;
/**
 * 组件间关系
 * 注意：须与p-f-unicom配合使用！！！
 * @param {*} name
 * @returns
 */
function getRelationNodes(name) {
  if (!this.$unicom) throw "this.getRelationNodes()需与p-f-unicom配合使用！";
  return this.$unicom('@' + name);
}

/***/ }),

/***/ 54:
/*!**************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/selectComponent.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectAllComponents = selectAllComponents;
exports.selectComponent = selectComponent;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var createTraverse = function createTraverse() {
  var stop = false;
  return function traverse(root, callback) {
    if (!stop && typeof callback === 'function') {
      var children = root.$children;
      for (var index = 0; !stop && index < children.length; index++) {
        var element = children[index];
        stop = callback(element) === true;
        traverse(element, callback);
      }
    }
  };
};

/**
 * 安全的JSON.stringify
 * @param {Object} node
 */
function safeStringify(node) {
  var cache = [];
  var str = JSON.stringify(node, function (key, value) {
    if ((0, _typeof2.default)(value) === 'object' && value !== null) {
      if (cache.indexOf(value) !== -1) {
        // 移除
        return;
      }
      // 收集所有的值
      cache.push(value);
    }
    return value;
  });
  cache = null; // 清空变量，便于垃圾回收机制回收
  return str;
}
var match = function match(node, selector) {
  var _vnode$context$$vnode, _vnode, _vnode$context;
  var vnode = node._vnode;

  //好家伙，在微信小程序里，node里面根本找不到class，因此这种方式没法搞了

  //关键之处！
  // console.log("attrs", (vnode.context.$vnode.data));
  vnode = (_vnode$context$$vnode = (_vnode = vnode) === null || _vnode === void 0 ? void 0 : (_vnode$context = _vnode.context) === null || _vnode$context === void 0 ? void 0 : _vnode$context.$vnode) !== null && _vnode$context$$vnode !== void 0 ? _vnode$context$$vnode : "";
  //console.log(vnode.data) -->  [Object] {"staticClass":"bar","attrs":{"_i":0}}  at selectComponent.js:72
  if (!vnode || !vnode.data) {
    return false;
  }
  var attrs = vnode.data.attrs || {};
  var staticClass = vnode.data.staticClass || '';
  var id = attrs.id || '';
  if (selector[0] === '#') {
    return selector.substr(1) === id;
  } else {
    staticClass = staticClass.trim().split(' ');
    selector = selector.substr(1).split('.');
    return selector.reduce(function (a, c) {
      return a && staticClass.includes(c);
    }, true);
  }
};
var selectorBuilder = function selectorBuilder(selector) {
  selector = selector.replace(/>>>/g, '>');
  selector = selector.split('>').map(function (s) {
    return s.trim().split(' ').join("').descendant('");
  }).join("').child('");

  // 替换掉new Function方式，因为小程序不支持new Function和eval
  //return new Function('Selector', 'node', 'all', `return new Selector(node, all).descendant('` + selector + `')`);
  return function (Selector, node, all) {
    return new Selector(node, all).descendant(selector);
  };
};
var Selector = /*#__PURE__*/function () {
  function Selector(node) {
    var all = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    (0, _classCallCheck2.default)(this, Selector);
    this.nodes = [node];
    this.all = all;
  }
  (0, _createClass2.default)(Selector, [{
    key: "child",
    value: function child(selector) {
      var matches = [];
      if (this.all) {
        this.nodes.forEach(function (node) {
          var _matches;
          (_matches = matches).push.apply(_matches, (0, _toConsumableArray2.default)(node.$children.filter(function (node) {
            return match(node, selector);
          })));
        });
      } else {
        if (this.nodes.length > 0) {
          var node = this.nodes[0].$children.find(function (node) {
            return match(node, selector);
          });
          matches = node ? [node] : [];
        }
      }
      this.nodes = matches;
      return this;
    }
  }, {
    key: "descendant",
    value: function descendant(selector) {
      var _this = this;
      var matches = [];
      this.nodes.forEach(function (root) {
        createTraverse()(root, function (node) {
          if (match(node, selector)) {
            matches.push(node);
            return !_this.all;
          }
        });
      });
      this.nodes = matches;
      return this;
    }
  }]);
  return Selector;
}(); ////////////////////////////////////////////selectComponent//////////////////////////////////////////////////
/**
 * 其他平台，如APP
 * @param {Object} selector
 */
function selectComponentOther(selector) {
  var selectors = selector.split(',').map(function (s) {
    return s.trim();
  });
  if (!selectors[0]) {
    return null;
  }
  var querySelector = selectorBuilder(selectors[0]);
  return querySelector(Selector, this, false, selector).nodes[0];
}

/**
 * 还是用这个微信小程序的实现吧
 * @param {Object} selector
 */
var selectComponentWeiXin2 = function selectComponentWeiXin2(selector) {
  var _this$$scope$selectCo;
  console.log(".$scope", this.$scope.selectComponent(selector));
  return ((_this$$scope$selectCo = this.$scope.selectComponent(selector)) === null || _this$$scope$selectCo === void 0 ? void 0 : _this$$scope$selectCo.data) || undefined;
};

/**
 * selectComponent
 * @param {Object} args
 */
function selectComponent(args) {
  // console.log(".$scope",this.$scope)

  //H5和小程序能正常使用这个函数
  //重写selectComponent函数，因为默认会多一层$vm
  return selectComponentWeiXin2.call(this, args);
}

////////////////////////////////////////////selectAllComponents//////////////////////////////////////////////////
/**
 * 其他平台，如APP
 * @param {Object} selector
 */
function selectAllComponentsOther(selector) {
  var _this2 = this;
  var selectors = selector.split(',').map(function (s) {
    return s.trim();
  });
  var selected = [];
  selectors.forEach(function (selector) {
    var querySelector = selectorBuilder(selector);
    selected = selected.concat(querySelector(Selector, _this2, true, selector).nodes);
  });
  return selected;
}

/**
 * 还是用这个微信小程序的实现吧
 * @param {Object} selector
 */
var selectAllComponentsWeiXin2 = function selectAllComponentsWeiXin2(selector) {
  var list = this.$scope.selectAllComponents(selector) || [];
  list = list.map(function (item) {
    return item.data;
  });
  return list;
};

/**
 * selectAllComponents
 * @param {Object} args
 */
function selectAllComponents(args) {
  //H5和小程序能正常使用这个函数
  //重写selectComponent函数，因为默认会多一层$vm
  return selectAllComponentsWeiXin2.call(this, args);
}

/***/ }),

/***/ 55:
/*!******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/methods/setData.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setData = setData;
var _set2 = _interopRequireDefault(__webpack_require__(/*! ../utils/_set */ 56));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../utils/debounce */ 57));
/**
 * 老setData polyfill
 * 用于转换后的uniapp的项目能直接使用this.setData()函数
 * @param {*} obj
 * @param {*} callback
 */
function oldSetData(obj, callback) {
  var that = this;
  var handleData = function handleData(tepData, tepKey, afterKey) {
    var tepData2 = tepData;
    tepKey = tepKey.split('.');
    tepKey.forEach(function (item) {
      if (tepData[item] === null || tepData[item] === undefined) {
        var reg = /^[0-9]+$/;
        tepData[item] = reg.test(afterKey) ? [] : {};
        tepData2 = tepData[item];
      } else {
        tepData2 = tepData[item];
      }
    });
    return tepData2;
  };
  var isFn = function isFn(value) {
    return typeof value == 'function' || false;
  };
  Object.keys(obj).forEach(function (key) {
    var val = obj[key];
    key = key.replace(/\]/g, '').replace(/\[/g, '.');
    var front, after;
    var index_after = key.lastIndexOf('.');
    if (index_after != -1) {
      after = key.slice(index_after + 1);
      front = handleData(that, key.slice(0, index_after), after);
    } else {
      after = key;
      front = that;
    }
    if (front.$data && front.$data[after] === undefined) {
      Object.defineProperty(front, after, {
        get: function get() {
          return front.$data[after];
        },
        set: function set(newValue) {
          front.$data[after] = newValue;
          that.hasOwnProperty("$forceUpdate") && that.$forceUpdate();
        },
        enumerable: true,
        configurable: true
      });
      front[after] = val;
    } else {
      that.$set(front, after, val);
    }
  });
  // this.$forceUpdate();
  isFn(callback) && this.$nextTick(callback);
}

/**
 * 变量名正则
 */
var variableNameReg = /^([^\x00-\xff]|[a-zA-Z_$])([^\x00-\xff]|[a-zA-Z0-9_$])*$/;

/**
 * 2022-10-31 重写setData
 * 2023-05-08 增加微信“简易双向绑定”支持
 * 用于转换后的uniapp的项目能直接使用this.setData()函数
 * @param {Object} obj
 * @param {Object} callback
 */
function setData(obj) {
  var _this = this;
  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  Object.keys(obj).forEach(function (key) {
    (0, _set2.default)(_this, key, obj[key]);

    //处理微信“简易双向绑定”
    if (variableNameReg.test(key) && key.endsWith("Clone")) {
      var propName = key.replace(/Clone$/, "");
      if (_this.$options && _this.$options.propsData[propName]) {
        _this.$emit("update:".concat(propName), obj[key]);
      }
    }
  });
  this.$forceUpdate();
  if (typeof callback == 'function') this.$nextTick(callback);
}

/***/ }),

/***/ 554:
/*!*********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/fav_biz.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 预约模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-12-10 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var cloudHelper = __webpack_require__(/*! ../../helper/cloud_helper.js */ 68);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var FavBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(FavBiz, _BaseBiz);
  var _super = _createSuper(FavBiz);
  function FavBiz() {
    _classCallCheck(this, FavBiz);
    return _super.apply(this, arguments);
  }
  _createClass(FavBiz, null, [{
    key: "isFav",
    value: function () {
      var _isFav = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(that, oid) {
        var type,
          params,
          _args = arguments;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                type = _args.length > 2 && _args[2] !== undefined ? _args[2] : '';
                if (oid) {
                  _context.next = 3;
                  break;
                }
                return _context.abrupt("return");
              case 3:
                that.setData({
                  isFav: -1
                });

                // 异步获取是否收藏
                params = {
                  oid: oid,
                  type: type
                };
                cloudHelper.callCloudSumbit('fav/is_fav', params, {
                  title: 'bar'
                }).then(function (result) {
                  that.setData({
                    isFav: result.data.isFav
                  });
                }).catch(function (error) {});
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function isFav(_x, _x2) {
        return _isFav.apply(this, arguments);
      }
      return isFav;
    }()
  }, {
    key: "updateFav",
    value: function () {
      var _updateFav = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(that, oid, isFav, type, title) {
        var path, params, opts, result;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                path = pageHelper.getCurrentPageUrlWithArgs();
                if (!(!oid || !path || !title || !type)) {
                  _context2.next = 3;
                  break;
                }
                return _context2.abrupt("return");
              case 3:
                params = {
                  oid: oid,
                  title: title,
                  type: type,
                  path: path
                };
                opts = {
                  title: isFav == 0 ? '收藏中' : '取消中'
                };
                _context2.prev = 5;
                _context2.next = 8;
                return cloudHelper.callCloudSumbit('fav/update', params, opts);
              case 8:
                result = _context2.sent;
                that.setData({
                  isFav: result.data.isFav
                });
                _context2.next = 17;
                break;
              case 12:
                _context2.prev = 12;
                _context2.t0 = _context2["catch"](5);
                console.log('CatchClause', _context2.t0);
                console.log('CatchClause', _context2.t0);
                console.log(_context2.t0);
              case 17:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[5, 12]]);
      }));
      function updateFav(_x3, _x4, _x5, _x6, _x7) {
        return _updateFav.apply(this, arguments);
      }
      return updateFav;
    }()
  }]);
  return FavBiz;
}(BaseBiz);
module.exports = FavBiz;

/***/ }),

/***/ 555:
/*!*************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/lib/tools/base64_lib.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decode = decode;
exports.encode = encode;
exports.safeEncode = safeEncode;
/**
 * Notes:
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-10-25 04:00:00
 */

function Base64() {
  // private property
  var _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  // public method for encoding
  this.encode = function (input) {
    var output = '';
    var chr1;
    var chr2;
    var chr3;
    var enc1;
    var enc2;
    var enc3;
    var enc4;
    var i = 0;
    input = _utf8_encode(input);
    while (i < input.length) {
      chr1 = input.charCodeAt(i++);
      chr2 = input.charCodeAt(i++);
      chr3 = input.charCodeAt(i++);
      enc1 = chr1 >> 2;
      enc2 = (chr1 & 3) << 4 | chr2 >> 4;
      enc3 = (chr2 & 15) << 2 | chr3 >> 6;
      enc4 = chr3 & 63;
      if (isNaN(chr2)) {
        enc3 = enc4 = 64;
      } else if (isNaN(chr3)) {
        enc4 = 64;
      }
      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
    }
    return output;
  };

  // public method for decoding
  this.decode = function (input) {
    var output = '';
    var chr1;
    var chr2;
    var chr3;
    var enc1;
    var enc2;
    var enc3;
    var enc4;
    var i = 0;
    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
    while (i < input.length) {
      enc1 = _keyStr.indexOf(input.charAt(i++));
      enc2 = _keyStr.indexOf(input.charAt(i++));
      enc3 = _keyStr.indexOf(input.charAt(i++));
      enc4 = _keyStr.indexOf(input.charAt(i++));
      chr1 = enc1 << 2 | enc2 >> 4;
      chr2 = (enc2 & 15) << 4 | enc3 >> 2;
      chr3 = (enc3 & 3) << 6 | enc4;
      output = output + String.fromCharCode(chr1);
      if (enc3 != 64) {
        output = output + String.fromCharCode(chr2);
      }
      if (enc4 != 64) {
        output = output + String.fromCharCode(chr3);
      }
    }
    output = _utf8_decode(output);
    return output;
  };

  // private method for UTF-8 encoding
  var _utf8_encode = function _utf8_encode(string) {
    string = string.replace(/\r\n/g, '\n');
    var utftext = '';
    for (var n = 0; n < string.length; n++) {
      var c = string.charCodeAt(n);
      if (c < 128) {
        utftext += String.fromCharCode(c);
      } else if (c > 127 && c < 2048) {
        utftext += String.fromCharCode(c >> 6 | 192);
        utftext += String.fromCharCode(c & 63 | 128);
      } else {
        utftext += String.fromCharCode(c >> 12 | 224);
        utftext += String.fromCharCode(c >> 6 & 63 | 128);
        utftext += String.fromCharCode(c & 63 | 128);
      }
    }
    return utftext;
  };

  // private method for UTF-8 decoding
  var _utf8_decode = function _utf8_decode(utftext) {
    var string = '';
    var i = 0;
    var c = c1 = c2 = 0;
    while (i < utftext.length) {
      c = utftext.charCodeAt(i);
      if (c < 128) {
        string += String.fromCharCode(c);
        i++;
      } else if (c > 191 && c < 224) {
        c2 = utftext.charCodeAt(i + 1);
        string += String.fromCharCode((c & 31) << 6 | c2 & 63);
        i += 2;
      } else {
        c2 = utftext.charCodeAt(i + 1);
        c3 = utftext.charCodeAt(i + 2);
        string += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
        i += 3;
      }
    }
    return string;
  };
}
var base = new Base64();
function encode(str) {
  return base.encode(str);
}
function decode(str) {
  return base.decode(str);
}
function safeEncode(str) {
  return encode(str).replace(/[\+=\/]/g, function (c) {
    switch (c) {
      case '+':
        return '-';
      case '=':
        return '';
      case '/':
        return '_';
    }
  });
}

/***/ }),

/***/ 556:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/mini_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {/**
 * Notes: 软硬件系统相关函数
 * Ver : CCMiniCloud Framework 2.11.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2022-01-25 29:00:00
 */

function getAuth(auth, authName, callback) {
  auth = 'scope.' + auth;
  uni.getSetting({
    success: function success(res) {
      console.log(res);
      if (res.authSetting[auth]) {
        console.log('true');
        if (callback) {
          callback();
        }
      } else if (res.authSetting[auth] === undefined) {
        // 未做任何授权
        uni.showModal({
          title: '提示',
          mask: true,
          content: '您尚未开启' + authName + '的权限，请点击确定去开启权限！',
          success: function success(res) {
            if (res.confirm) {
              uni.authorize({
                scope: auth,
                success: function success(res) {
                  console.log('授权成功', res);
                  if (callback) {
                    callback();
                  }
                },
                fail: function fail(res) {
                  console.log('您没有授权 fail=', res);
                  uni.showToast({
                    mask: true,
                    title: '您没有授权，无法' + authName,
                    icon: 'none'
                  });
                }
              });
            } else {
              uni.showToast({
                mask: true,
                title: '您没有授权，无法' + authName,
                icon: 'none'
              });
            }
          }
        });
      } else {
        // 已经禁止
        uni.showModal({
          title: '提示',
          content: '您未开启' + authName + '的权限，请点击确定去开启权限！',
          success: function success(res) {
            if (res.confirm) {
              uni.openSetting({
                success: function success(res) {
                  uni.showToast({
                    mask: true,
                    icon: 'none',
                    title: '正在' + authName
                  });
                  if (res.authSetting[auth]) {
                    console.log('false success res=', res);
                    if (callback) {
                      callback();
                    }
                  } else {
                    uni.showToast({
                      mask: true,
                      title: '您没有授权，无法' + authName + '！',
                      icon: 'none'
                    });
                  }
                },
                fail: function fail(res) {
                  console.log('false file res=', res);
                }
              });
            } else {
              uni.showToast({
                mask: true,
                title: '您没有授权，无法' + authName,
                icon: 'none'
              });
            }
          }
        });
      }
    }
  });
}
module.exports = {
  getAuth: getAuth
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 557:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/form_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11);
/**
 * Notes: 表单通用类库
 * Ver : CCMiniCloud Framework 2.8.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-02-28 07:48:00
 */
/**
 * model变表单
 * @param {*} model
 */
function model2Form(model) {
  var newModel = {};
  for (var key in model) {
    var arr = key.split('_');
    var result = '';
    for (var i = 1; i < arr.length; i++) {
      var name = arr[i].toLowerCase();
      name = name.charAt(0).toUpperCase() + name.slice(1);
      result = result + name;
    }
    newModel['form' + result] = model[key];
  }
  return newModel;
}

// picker表单赋值到页面data
function setOptions(that, options, name, val) {
  var idx = options.indexOf(val);
  idx = idx < 0 ? 0 : idx;
  that.setData(_defineProperty({}, name, idx));
}
module.exports = {
  model2Form: model2Form,
  setOptions: setOptions
};

/***/ }),

/***/ 56:
/*!*************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/utils/_set.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/**
 * lodash set
 * @param {*} obj
 * @param {*} path
 * @param {*} value
 * @returns
 */
function _set(obj, path, value) {
  if (Object(obj) !== obj) return obj; // When obj is not an object
  // If not yet an array, get the keys from the string-path
  if (!Array.isArray(path)) path = path.toString().match(/[^.[\]]+/g) || [];
  path.slice(0, -1).reduce(function (a, c, i) {
    return (
      // Iterate all of them except the last one
      Object(a[c]) === a[c] // Does the key exist and is its value an object?
      // Yes: then follow that path
      ? a[c]
      // No: create the key. Is the next key a potential array-index?
      : a[c] = Math.abs(path[i + 1]) >> 0 === +path[i + 1] ? [] // Yes: assign a new array object
      : {}
    );
  },
  // No: assign a new plain object
  obj)[path[path.length - 1]] = value; // Finally assign the value to the last key
  return obj; // Return the top-level object to allow chaining
}
var _default = _set;
exports.default = _default;

/***/ }),

/***/ 57:
/*!*****************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/uni_modules/zp-mixins/utils/debounce.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/**
 * 防抖
 * @param {Object} scope  //引用的this，发现不显式传this，拿不到。
 * @param {Object} fn
 * @param {Object} delay
 */
var t = null;
var debounce = function debounce(scope, fn, delay) {
  if (t !== null) {
    clearTimeout(t);
  }
  t = setTimeout(function () {
    scope[fn]();
  }, delay);
};
var _default = debounce;
exports.default = _default;

/***/ }),

/***/ 578:
/*!**************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/rows/rows_set_helper.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var helper = __webpack_require__(/*! ../../../helper/helper.js */ 65);
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var BASE_ROW = {
  mark: '',
  title: '',
  val: '',
  pic: '',
  detail: [],
  edit: true
};
function fmtRows(rows) {
  for (var k = 0; k < rows.length; k++) {
    var node = rows[k];

    // 补充编号
    if (!node['mark']) {
      node['mark'] = mark();
    }
    if (!helper.isDefined(node['title'])) {
      node['title'] = '';
    }
    if (!helper.isDefined(node['val'])) {
      node['val'] = '';
    }
    if (!helper.isDefined(node['pic'])) {
      node['pic'] = '';
    }
    if (!helper.isDefined(node['detail'])) {
      node['detail'] = [];
    }
    if (!Array.isArray(node['detail'])) {
      node['detail'] = [];
    }
    if (!helper.isDefined(node['edit'])) {
      node['edit'] = true;
    }
  }
  return rows;
}
function mark() {
  return dataHelper.genRandomAlpha(10).toUpperCase();
}
module.exports = {
  BASE_ROW: BASE_ROW,
  fmtRows: fmtRows,
  mark: mark
};

/***/ }),

/***/ 6:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 608:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/poster/poster_cmpt_helper.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var cloudHelper = __webpack_require__(/*! ../../../helper/cloud_helper.js */ 68);
function config1(_x) {
  return _config.apply(this, arguments);
}
function _config() {
  _config = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {
    var cover, title, desc, qr, _ref$bg, bg, _ref$user, user, _ref$avatar, avatar, posterConfig, blocks, texts, images;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cover = _ref.cover, title = _ref.title, desc = _ref.desc, qr = _ref.qr, _ref$bg = _ref.bg, bg = _ref$bg === void 0 ? '' : _ref$bg, _ref$user = _ref.user, user = _ref$user === void 0 ? '' : _ref$user, _ref$avatar = _ref.avatar, avatar = _ref$avatar === void 0 ? '' : _ref$avatar;
            if (!cover.startsWith('cloud')) {
              _context.next = 5;
              break;
            }
            _context.next = 4;
            return cloudHelper.getTempFileURLOne(cover);
          case 4:
            cover = _context.sent;
          case 5:
            if (!qr.startsWith('cloud')) {
              _context.next = 9;
              break;
            }
            _context.next = 8;
            return cloudHelper.getTempFileURLOne(qr);
          case 8:
            qr = _context.sent;
          case 9:
            if (!avatar.startsWith('cloud')) {
              _context.next = 13;
              break;
            }
            _context.next = 12;
            return cloudHelper.getTempFileURLOne(avatar);
          case 12:
            avatar = _context.sent;
          case 13:
            posterConfig = {
              width: 480,
              // rpx
              height: 650,
              backgroundColor: '#eeeeee'
            };
            if (bg) {
              posterConfig.backgroundColor = bg;
            }
            blocks = [];
            blocks = [{
              x: 30,
              y: 30,
              backgroundColor: '#ffffff',
              width: 420,
              height: 590,
              borderRadius: 20
            }];
            texts = [];
            texts = [{
              x: 50,
              y: 350,
              text: title,
              width: 360,
              lineNum: 2,
              lineHeight: 40,
              fontSize: 26,
              color: '#000000',
              textAlign: 'left',
              zIndex: 9999
            }, {
              x: 55,
              y: 510,
              text: '长按识别小程序码',
              fontSize: 18,
              color: '#aaaaaa',
              zIndex: 9999
            }, {
              x: 55,
              y: 540,
              text: desc,
              fontSize: 18,
              color: '#aaaaaa',
              zIndex: 9999
            }];
            if (user) {
              texts.push({
                x: 55,
                y: 480,
                text: user,
                fontSize: 18,
                color: bg,
                zIndex: 9999
              });
            }
            images = [];
            if (cover) {
              images.push({
                // 底图
                x: 40,
                y: 40,
                url: cover,
                width: 400,
                height: 260,
                zIndex: 999
              });
            }
            if (qr) {
              images.push({
                // 小程序码
                x: 310,
                y: 460,
                url: qr,
                width: 120,
                height: 120
              });
            }
            if (avatar) {
              images.push({
                // 头像
                x: 343,
                y: 493,
                url: avatar,
                width: 54,
                height: 54,
                borderRadius: 54
              });
            }
            posterConfig.texts = texts;
            posterConfig.blocks = blocks;
            posterConfig.images = images;
            return _context.abrupt("return", posterConfig);
          case 28:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _config.apply(this, arguments);
}
module.exports = {
  config1: config1
};

/***/ }),

/***/ 64:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/page_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/**
 * Notes: 通用页面操作类库
 * Ver : CCMiniCloud Framework 2.0.11 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var helper = __webpack_require__(/*! ./helper.js */ 65);
var setting = __webpack_require__(/*! ../setting/setting.js */ 42);
var cacheHelper = __webpack_require__(/*! ./cache_helper.js */ 66);
var picHelper = __webpack_require__(/*! ./pic_helper.js */ 67);
function openMap(e) {
  var location = dataset(e, 'location');
  var address = dataset(e, 'address');
  uni.openLocation({
    latitude: location.latitude,
    longitude: location.longitude,
    address: address,
    scale: 18
  });
}

// 加入手机日程 单位秒
function addPhoneCalendar(title, startTime, endTime) {
  var alarmOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3600;
  uni.addPhoneCalendar({
    title: title,
    startTime: startTime,
    endTime: endTime,
    //	description: "这是日程内容",
    alarm: 'true',
    alarmOffset: alarmOffset,
    //提前时间，秒
    success: function success() {
      pageHelper.showSuccToast('添加成功');
    },
    fail: function fail(res) {
      if (res && res.errMsg && res.errMsg.includes('refuesed')) {
        pageHelper.showModal('请在手机的"设置›微信" 选项中，允许微信访问你的日历', '日历权限未开启');
      }
    },
    complete: function complete(res) {
      console.log(res);
    }
  });
}

// 自定义导航高度
function getCustomNavHeight() {
  var sysInfo = uni.getSystemInfoSync();
  var menuInfo = uni.getMenuButtonBoundingClientRect();
  var navigationBarHeight = menuInfo.top + menuInfo.bottom - sysInfo.statusBarHeight;
  return navigationBarHeight;
}
function getCurrentPageURL() {
  var pages = getCurrentPages();
  var currentPage = pages[pages.length - 1];
  var url = "/".concat(currentPage.route);
  return url;
}
function getCurrentPageUrlWithArgs() {
  var pages = getCurrentPages();
  var currentPage = pages[pages.length - 1];
  var url = currentPage.route;
  var options = currentPage.options;
  var urlWithArgs = url + '?';
  for (var key in options) {
    var value = options[key];
    urlWithArgs += key + '=' + value + '&';
  }
  urlWithArgs = urlWithArgs.substring(0, urlWithArgs.length - 1);
  return '/' + urlWithArgs;
}
function getPID() {
  var route = getCurrentPageURL();
  var PID = route.replace('/projects/', '');
  PID = PID.split('/')[0];
  return PID;
}
function fmtURLByPID(url) {
  var PID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (!PID) {
    PID = getPID();
  }
  if (url.startsWith('/pages/')) {
    url = url.replace('/pages/', '/projects/' + PID + '/pages/');
  } else {
    url = '/projects/' + PID + '/' + url;
  }
  return url;
}

/** 定时器销毁 */
function clearTimer(that) {
  var timerName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'timer';
  if (helper.isDefined(that.data[timerName])) {
    clearInterval(that.data[timerName]);
  }
}

/**
 *  获取父页面
 * @param {*} deep  1=当前 2=父页 3=父父页
 */
function getPrevPage() {
  var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;
  var pages = getCurrentPages();
  var prevPage = pages[pages.length - deep]; //上一个页面
  return prevPage;
}

/**
 * 修改当前/父页面的某个列表节点
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值
 * @param {*} list   数据集
 * @param {*} idName 主键名
 */
function modifyListNode(id, list, valName, val) {
  var idName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '_id';
  if (!list || !Array.isArray(list)) {
    return false;
  }
  var pos = list.findIndex(function (item) {
    return item[idName] === id;
  });
  if (pos > -1) {
    list[pos][valName] = val;
    return true;
  }
  return false;
}

/**
 * 修改当前/父页面的某个列表节点(单个值)
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName   数据集名
 * @param {*} idName 主键名
 */
function modifyPrevPageListNode(id, valName, val) {
  var deep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;
  var listName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'dataList';
  var idName = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '_id';
  var prevPage = getPrevPage(deep);
  if (!prevPage) {
    return;
  }
  var dataList = prevPage.data[listName];
  if (!dataList) {
    return;
  }
  var list = dataList['list'];
  if (modifyListNode(id, list, valName, val, idName)) {
    prevPage.setData(_defineProperty({}, listName + '.list', list));
  }
}

/**
 * 修改当前/父页面的某个列表节点(一组值)
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName   数据集名
 * @param {*} idName 主键名
 */
function modifyPrevPageListNodeObject(id, vals) {
  var deep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
  var listName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'dataList';
  var idName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '_id';
  var prevPage = getPrevPage(deep);
  if (!prevPage) {
    return;
  }
  var dataList = prevPage.data[listName];
  if (!dataList) {
    return;
  }
  var list = dataList['list'];
  for (var key in vals) {
    modifyListNode(id, list, key, vals[key], idName);
  }
  prevPage.setData(_defineProperty({}, listName + '.list', list));
}

/**
 * 从记录数组里删除某个节点
 * @param {*} id
 * @param {*} list
 * @param {*} idName
 */
function delListNode(id, list) {
  var idName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '_id';
  if (!list || !Array.isArray(list)) {
    return false;
  }
  var pos = list.findIndex(function (item) {
    return item[idName] === id;
  });
  if (pos > -1) {
    list.splice(pos, 1);
    return true;
  }
  return false;
}

/**
 * 删除当前/父页面的某个列表节点
 * @param {*} id 主键
 * @param {*} deep 1=当前 2=父页 3=父父页
 * @param {*} listName  数据集名
 * @param {*} idName  主键名
 */
function delPrevPageListNode(id) {
  var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  var listName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'dataList';
  var idName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '_id';
  var prevPage = getPrevPage(deep);
  var dataList = prevPage.data[listName];
  if (!dataList) {
    return;
  }
  var list = dataList['list'];
  var total = dataList['total'] - 1;
  if (delListNode(id, list, idName)) {
    var _prevPage$setData3;
    prevPage.setData((_prevPage$setData3 = {}, _defineProperty(_prevPage$setData3, listName + '.list', list), _defineProperty(_prevPage$setData3, listName + '.total', total), _prevPage$setData3));
  }
}

/**
 * 刷新当前/父页面的某个列表节点
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName  数据集名
 * @param {*} listFunc  翻页函数名
 */
function refreshPrevListNode() {
  return _refreshPrevListNode.apply(this, arguments);
}
/**
 * 回到顶部测算
 */
function _refreshPrevListNode() {
  _refreshPrevListNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
    var deep,
      listName,
      listFunc,
      prevPage,
      dataList,
      _args = arguments;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            deep = _args.length > 0 && _args[0] !== undefined ? _args[0] : 2;
            listName = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'dataList';
            listFunc = _args.length > 2 && _args[2] !== undefined ? _args[2] : '_getList';
            prevPage = getPrevPage(deep);
            dataList = prevPage.data[listName];
            if (dataList) {
              _context.next = 7;
              break;
            }
            return _context.abrupt("return");
          case 7:
            _context.next = 9;
            return prevPage[listFunc]();
          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _refreshPrevListNode.apply(this, arguments);
}
function scrollTop(e, that) {
  if (e.scrollTop > 100) {
    that.setData({
      topShow: true
    });
  } else {
    that.setData({
      topShow: false
    });
  }
}

/**
 * 删除图片
 * @param {*} that
 * @param {*} idx  被删除图片索引
 * @param {*} imgListName  图片数组名
 */
function delImage(that, idx) {
  var imgListName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'imgList';
  var callback = function callback() {
    that.data[imgListName].splice(idx, 1);
    that.setData(_defineProperty({}, imgListName, that.data[imgListName]));
  };
  showConfirm('确定要删除该图片吗？', callback);
}

/**
 * 图片预览
 * @param {*} that
 * @param {*} url
 * @param {*} imgListName  图片数组名
 */
function previewImage(that, url) {
  var imgListName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'imgList';
  // 图片预览
  uni.previewImage({
    urls: that.data[imgListName],
    current: url
  });
}

/**
 * 取得data-数据 去掉驼峰式命名，改成纯小写式命名
 * @param {*} e
 * @param {*} name
 * @param {*} child  是否获取穿透子元素的data-
 */
function dataset(e, name) {
  var child = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  if (!child) {
    return e.currentTarget.dataset[name];
  } else {
    return e.target.dataset[name];
  }
}

// 表单的双向数据绑定
function model(that, e) {
  var item = e.currentTarget.dataset.item;
  that.setData(_defineProperty({}, item, e.detail.value));
}

// 表单的开关按钮数据绑定 mode=int/bool
function switchModel(that, e) {
  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'int';
  var item = e.currentTarget.dataset.item;
  var sel = e.detail.value ? 1 : 0;
  if (mode == 'bool') {
    sel = e.detail.value ? true : false;
  }
  that.setData(_defineProperty({}, item, sel));
}

// 无提示成功，同时做后续处理, 最多可显示两行
function showNoneToast() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '操作完成';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  var callback = arguments.length > 2 ? arguments[2] : undefined;
  return uni.showToast({
    title: title,
    icon: 'none',
    duration: duration,
    mask: true,
    success: function success() {
      if (callback) {
        setTimeout(function () {
          callback();
        }, duration);
      }
    }
  });
}

// 无提示成功，返回
function showNoneToastReturn() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '操作完成';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;
  var callback = function callback() {
    uni.navigateBack();
  };
  return showNoneToast(title, duration, callback);
}

// 错误提示成功，同时做后续处理, 最多显示7个汉字长度
function showErrToast() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '操作失败';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  var callback = arguments.length > 2 ? arguments[2] : undefined;
  return uni.showToast({
    title: title,
    icon: 'error',
    duration: duration,
    mask: true,
    success: function success() {
      if (callback) {
        setTimeout(function () {
          callback();
        }, duration);
      }
    }
  });
}

// 加载中，同时做后续处理, 最多显示7个汉字长度
function showLoadingToast() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '加载中';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  var callback = arguments.length > 2 ? arguments[2] : undefined;
  return uni.showToast({
    title: title,
    icon: 'loading',
    duration: duration,
    mask: true,
    success: function success() {
      if (callback) {
        setTimeout(function () {
          callback();
        }, duration);
      }
    }
  });
}

// 提示成功，同时做后续处理, 最多显示7个汉字长度
function showSuccToast() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '操作成功';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  var callback = arguments.length > 2 ? arguments[2] : undefined;
  return uni.showToast({
    title: title,
    icon: 'success',
    duration: duration,
    mask: true,
    success: function success() {
      if (callback) {
        setTimeout(function () {
          callback();
        }, duration);
      }
    }
  });
}

// 提示成功，同时返回
function showSuccToastReturn() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '操作成功';
  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  var callback = function callback() {
    uni.navigateBack();
  };
  return showSuccToast(title, duration, callback);
}

// 清理提示焦点
function formClearFocus(that) {
  var data = that.data;
  var focus = {};
  for (var key in data) {
    if (key.startsWith('form') && !key.endsWith('Focus')) {
      focus[key + 'Focus'] = null;
    }
  }
  that.setData(_objectSpread({}, focus));
}

// 焦点提示
function formHint(that, formName, hint) {
  that.setData(_defineProperty({}, formName + 'Focus', hint));
  return showModal(hint);
}

// 二次确认操作
function showConfirm() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '确定要删除吗？';
  var yes = arguments.length > 1 ? arguments[1] : undefined;
  var no = arguments.length > 2 ? arguments[2] : undefined;
  return uni.showModal({
    title: '',
    content: title,
    cancelText: '取消',
    confirmText: '确定',
    success: function success(res) {
      if (res.confirm) {
        if (yes) {
          yes();
        }
      } else if (res.cancel) {
        if (no) {
          no();
        }
      }
    }
  });
}
function showModal(content) {
  var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '温馨提示';
  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var confirmText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  return uni.showModal({
    title: title,
    content: content,
    confirmText: confirmText || '确定',
    showCancel: false,
    success: function success(res) {
      if (callback) {
        callback();
      }
    }
  });
}

/**
 * 页面赋值
 * @param {*} that
 * @param {*} data
 */
function setPageData(that, data) {
  // 删除页面保留数据
  if (helper.isDefined(data['__webviewId__'])) {
    delete data['__webviewId__'];
  }
  that.setData(data);
}
/**
 * 配合搜索列表响应监听
 * @param {*} that
 */
function commListListener(that, e) {
  if (helper.isDefined(e.detail.search)) {
    that.setData({
      search: '',
      sortType: ''
    });
  } else {
    that.setData({
      dataList: e.detail.dataList
    });
    if (e.detail.sortType) {
      that.setData({
        sortType: e.detail.sortType
      });
    }
  }
}
function bindShowModalTap(e) {
  this.setData({
    modalName: e.currentTarget.dataset.modal
  });
}
function bindHideModalTap(e) {
  this.setData({
    modalName: null
  });
}

/**
 * 控制回页首按钮
 * @param {*} e
 */
function showTopBtn(e, that) {
  if (e.scrollTop > 100) {
    that.setData({
      topBtnShow: true
    });
  } else {
    that.setData({
      topBtnShow: false
    });
  }
}

/**
 * 回到顶部
 */
function top() {
  uni.pageScrollTo({
    scrollTop: 0
  });
}

// 跳到锚点
function anchor(id, that) {
  try {
    var query = uni.createSelectorQuery().in(that);
    query.selectViewport().scrollOffset();
    //#comm 跳转到指定id位置
    query.select('#' + id).boundingClientRect();
    query.exec(function (res) {
      if (!res || res.length != 2 || !res[0] || !res[1]) {
        return;
      }
      //第一个为视图，第二个为当前id

      var miss = res[0].scrollTop + res[1].top - 10;
      uni.pageScrollTo({
        scrollTop: miss,
        duration: 300
      });
    });
  } catch (err) {
    console.log('CatchClause', err);
    console.log('CatchClause', err);
    console.error(err);
  }
}

// 页面跳转/图片预览
function url(e, that) {
  var url = e.currentTarget.dataset.url;
  var type = e.currentTarget.dataset.type;
  if (!type) {
    type = 'url';
  }
  switch (type) {
    case 'picker':
      {
        //picker 选择trigger
        var item = e.currentTarget.dataset.item;
        that.setData(_defineProperty({}, item, e.detail));
        break;
      }
    case 'top':
      {
        top();
        break;
      }
    case 'mini':
      {
        uni.navigateToMiniProgram({
          appId: e.currentTarget.dataset.app,
          path: url,
          envVersion: 'release'
        });
        break;
      }
    case 'redirect':
      {
        if (!url) {
          return;
        }
        uni.redirectTo({
          url: url
        });
        break;
      }
    case 'reLaunch':
    case 'relaunch':
      {
        if (!url) {
          return;
        }
        uni.reLaunch({
          url: url
        });
        break;
      }
    case 'copy':
      {
        uni.setClipboardData({
          data: url,
          success: function success(res) {
            uni.getClipboardData({
              success: function success(res) {
                showNoneToast('已复制到剪贴板');
              }
            });
          }
        });
        break;
      }
    case 'hint':
      {
        if (!url) {
          return;
        }
        showModal(url);
        break;
      }
    case 'switch':
      {
        if (!url) {
          return;
        }
        uni.switchTab({
          url: url
        });
        break;
      }
    case 'back':
      {
        uni.navigateBack();
        break;
      }
    case 'toURL':
      {
        toURL(url);
        break;
      }
    case 'phone':
      {
        uni.makePhoneCall({
          phoneNumber: url
        });
        break;
      }
    case 'anchor':
      {
        anchor(url, that);
        break;
      }
    case 'saveimg':
    case 'saveimage':
      {
        var callback = function callback() {
          uni.saveImageToPhotosAlbum({
            //成功之后保存到本地
            filePath: url,
            //生成的图片的本地路径
            success: function success(res) {
              uni.showToast({
                title: e.currentTarget.dataset.hint || '保存成功',
                icon: 'none',
                duration: 2000
              });
            },
            fail: function fail(err) {
              console.log(err);
            }
          });
        };
        picHelper.getWritePhotosAlbum(callback);
        break;
      }
    case 'bool':
      //正反
      {
        that.setData(_defineProperty({}, url, !that.data[url]));
        break;
      }
    case 'img':
    case 'image':
      {
        if (url.indexOf('qlogo') > -1) {
          //微信大图
          url = url.replace('/132', '/0');
        }
        var urls = [url];
        if (helper.isDefined(e.currentTarget.dataset.imgs)) {
          urls = e.currentTarget.dataset.imgs;
        }
        uni.previewImage({
          current: url,
          // 当前显示图片的http链接
          urls: urls
        });
        break;
      }
    default:
      if (!url) {
        return;
      }
      uni.navigateTo({
        url: url
      });
  }
}
function getOptions(that, options) {
  var idName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';
  var id = options[idName];
  if (!id) {
    id = options['scene'];
  } // 二维码扫入

  if (!id) {
    return false;
  }
  that.setData(_defineProperty({}, idName, id));
  return true;
}

// 页面提示
function hint(msg) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'redirect';
  if (type == 'reLaunch') {
    uni.reLaunch({
      url: fmtURLByPID('/pages/public/hint?type=9&msg=' + encodeURIComponent(msg))
    });
  } else {
    uni.redirectTo({
      url: fmtURLByPID('/pages/public/hint?type=9&msg=' + encodeURIComponent(msg))
    });
  }
}

// 跳转操作，找到页面中的目标，出栈后面的 delta=1为上一页面
function toURL(url) {
  var pages = getCurrentPages();
  for (var k = 0; k < pages.length; k++) {
    if (pages[k].route.includes(url)) {
      uni.navigateBack({
        delta: pages.length - k - 1
      });
      return;
    }
  }
  uni.redirectTo({
    url: url
  });
}

/** ListTouch触摸开始 */
function listTouchStart(e, that) {
  that.setData({
    touchX: e.touches[0].pageX
  });
}

/** ListTouch计算方向 */
function listTouchMove(e, that) {
  var precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;
  if (that.data.touchX - e.touches[0].pageX > precision) {
    that.setData({
      touchDirection: 'left'
    });
  } else if (that.data.touchX - e.touches[0].pageX < -precision) {
    that.setData({
      touchDirection: 'right'
    });
  }
}

/** ListTouch计算滚动 */
function listTouchEnd(e, that) {
  if (that.data.touchDirection == 'left') {
    that.setData({
      touchCur: e.currentTarget.dataset.idx
    });
  } else {
    that.setData({
      touchCur: null
    });
  }
  that.setData({
    touchDirection: null
  });
}

/**
 * 多条件复合查询条件
 * @param {*} e
 * @param {*} key 查询键值
 * @param {*} val  查询值
 * @param {*} def  键值的数据类型(int,str,float)
 */
function queryMulti(that, e, key, val, def) {
  key = helper.isDefined(key) ? key : dataset(e, 'key');
  val = helper.isDefined(val) ? val : dataset(e, 'val');
  def = helper.isDefined(def) ? def : dataset(e, 'def');

  // 类型转换
  if (def == 'int') {
    val = parseInt(val);
  } else if (def == 'float') {
    val = parseFloat(val);
  } else if (def == 'str') {
    val = val.toString();
  }
  var _params = that.data._params;
  _params.query[key] = val;
  that.setData({
    _params: _params
  });
}

/**
 * 页面缓存
 * @param {*} key
 * @param {*} that
 * @param {*} listKey  数据项KEY
 */
function cacheListExist(key, that) {
  var listKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'list';
  key = key.toUpperCase();
  if (setting.CACHE_IS_LIST) {
    return cacheHelper.get(key + '_LIST') && that.data && that.data[listKey];
  } else {
    return false;
  }
}
function cacheListRemove(key) {
  key = key.toUpperCase();
  if (setting.CACHE_IS_LIST) {
    cacheHelper.remove(key + '_LIST');
  }
}
function cacheListSet(key) {
  var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : setting.CACHE_LIST_TIME;
  key = key.toUpperCase();
  if (setting.CACHE_IS_LIST) {
    cacheHelper.set(key + '_LIST', 'TRUE', time);
  }
}

// 通过数组构建列表的菜单
function makeListMenu(arr, label, mark) {
  var ret = [];
  ret.push({
    label: label,
    type: mark,
    value: ''
  });
  for (var k = 0; k < arr.length; k++) {
    ret.push({
      label: arr[k],
      type: mark,
      value: arr[k]
    });
  }
  return ret;
}
module.exports = {
  openMap: openMap,
  addPhoneCalendar: addPhoneCalendar,
  getCustomNavHeight: getCustomNavHeight,
  getPID: getPID,
  getCurrentPageURL: getCurrentPageURL,
  getCurrentPageUrlWithArgs: getCurrentPageUrlWithArgs,
  fmtURLByPID: fmtURLByPID,
  //### form
  formClearFocus: formClearFocus,
  formHint: formHint,
  //###
  dataset: dataset,
  //节点数据data-

  //### 节点操作
  getPrevPage: getPrevPage,
  modifyListNode: modifyListNode,
  modifyPrevPageListNode: modifyPrevPageListNode,
  //单个
  modifyPrevPageListNodeObject: modifyPrevPageListNodeObject,
  //一组
  delListNode: delListNode,
  delPrevPageListNode: delPrevPageListNode,
  refreshPrevListNode: refreshPrevListNode,
  scrollTop: scrollTop,
  //### 回顶部

  // ### 图片
  previewImage: previewImage,
  delImage: delImage,
  //## 提示窗口
  showSuccToastReturn: showSuccToastReturn,
  showSuccToast: showSuccToast,
  showErrToast: showErrToast,
  showNoneToast: showNoneToast,
  showNoneToastReturn: showNoneToastReturn,
  showLoadingToast: showLoadingToast,
  showConfirm: showConfirm,
  showModal: showModal,
  setPageData: setPageData,
  hint: hint,
  //单独提示页

  commListListener: commListListener,
  //组件监听

  bindShowModalTap: bindShowModalTap,
  bindHideModalTap: bindHideModalTap,
  showTopBtn: showTopBtn,
  getOptions: getOptions,
  //获取id或者其他参数

  model: model,
  // 双向数据绑定
  switchModel: switchModel,
  //开关控件数据绑定

  top: top,
  // 回顶部事件
  url: url,
  // 跳转事件
  anchor: anchor,
  //锚点跳转事件

  toURL: toURL,
  //跳转操作

  //### 列表横向滑动
  listTouchStart: listTouchStart,
  listTouchMove: listTouchMove,
  listTouchEnd: listTouchEnd,
  //### 多条件复合查询
  queryMulti: queryMulti,
  clearTimer: clearTimer,
  //定时器销毁

  //LIST数据缓存
  cacheListExist: cacheListExist,
  cacheListRemove: cacheListRemove,
  cacheListSet: cacheListSet,
  makeListMenu: makeListMenu
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 65:
/*!******************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/helper.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Notes: 通用类库
 * Ver : CCMiniCloud Framework 2.9.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */
/**
 * 判断变量，参数，对象属性是否定义
 * @param {*} val
 */
function isDefined(val) {
  // ==  不能判断是否为null
  if (val === undefined) {
    return false;
  } else {
    return true;
  }
}

/**
 * 判断对象是否为空
 * @param {*} obj
 */
function isObjectNull(obj) {
  return Object.keys(obj).length == 0;
}
function sleep(time) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, time);
  });
}
/**
 * 从picker options中 获取索引值
 * @param {*} options 
 * [{
		value: 0,
		label: '猎头'
	}]
 * @param {*} val 
 */
function getOptionsIdx(options, val) {
  for (var i = 0; i < options.length; i++) {
    if (options[i].value === val) {
      return i;
    }
  }
  return 0;
}
module.exports = {
  isDefined: isDefined,
  isObjectNull: isObjectNull,
  sleep: sleep,
  getOptionsIdx: getOptionsIdx
};

/***/ }),

/***/ 66:
/*!************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/cache_helper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {/**
 * Notes: 微信缓存二次封装，有设置时效性的封装
 * Ver : CCMiniCloud Framework 3.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */
var helper = __webpack_require__(/*! ./helper.js */ 65);
var TIME_SUFFIX = '_deadtime';

/**
 * 设置
 * k 键key
 * v 值value
 * t 秒
 */
function set(k, v) {
  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2592000;
  if (!k) {
    return null;
  }
  uni.setStorageSync(k, v);
  var seconds = parseInt(t);
  if (seconds > 0) {
    var newtime = Date.parse(new Date());
    newtime = newtime / 1000 + seconds;
    uni.setStorageSync(k + TIME_SUFFIX, newtime + '');
  } else {
    uni.removeStorageSync(k + TIME_SUFFIX);
  }
}

/**
 * 获取
 * k 键key
 * def 默认值
 */
function get(k) {
  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  if (!k) {
    return null;
  }
  var deadtime = uni.getStorageSync(k + TIME_SUFFIX);
  if (!deadtime) {
    return def;
  }
  deadtime = parseInt(deadtime);
  if (!deadtime) {
    return def;
  }
  if (deadtime) {
    if (parseInt(deadtime) < Date.parse(new Date()) / 1000) {
      uni.removeStorageSync(k);
      uni.removeStorageSync(k + TIME_SUFFIX);
      return def;
    }
  }
  var res = uni.getStorageSync(k);
  if (helper.isDefined(res)) {
    return res;
  } else {
    return def;
  }
}

/**
 * 删除
 */
function remove(k) {
  if (!k) {
    return null;
  }
  uni.removeStorageSync(k);
  uni.removeStorageSync(k + TIME_SUFFIX);
}

/**
 * 清除所有key
 */
function clear() {
  uni.clearStorageSync();
}
module.exports = {
  set: set,
  get: get,
  remove: remove,
  clear: clear
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 666:
/*!***************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/calendar/calendar_lib.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Notes: 日历组件通用方法
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux@qq.com
 * Date: 2021-01-01 07:48:00
 */
var lunarLib = __webpack_require__(/*! ../../../lib/tools/lunar_lib.js */ 667);
var timeHelper = __webpack_require__(/*! ../../../helper/time_helper.js */ 72);
var dataHelper = __webpack_require__(/*! ../../../helper/data_helper.js */ 69);
var pageHelper = __webpack_require__(/*! ../../../helper/page_helper.js */ 64);

// 是否节日
function isHoliday(day) {
  if (!day) {
    return false;
  }
  var arr = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '初', '廿'];
  for (var k = 0; k < arr.length; k++) {
    if (day.includes(arr[k])) {
      return false;
    }
  }
  return true;
}

// 某天是某月的第几周
function weekIndexInMonth() {
  var year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var month = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var today = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var time = new Date();
  if (year == null) {
    // 没有设定，则取当前
    year = time.getFullYear();
    month = time.getMonth();
    today = time.getDate();
  } else {
    year = Number(year);
    month = Number(month) - 1;
    today = Number(today);
  }
  time = new Date(year, month, 1); //取第一天

  var space = time.getDay() - 1; //获取当前星期X(0-6,0代表星期天)
  if (space == -1) {
    space = 6;
  } //调整为周1-周7格式

  return Math.ceil((today + space) / 7); // 本月第几周
}

// 日期格式化，一位补2位
function fmtDate(str) {
  str = str + '';
  if (str.length == 1) {
    return '0' + str;
  } else {
    return str;
  }
}

// 获取当前时间，若定义了要操作的天, 则取得年份和月份，用以构造日历
function getNowTime(that) {
  var time = new Date();
  var year = time.getFullYear();
  var month = time.getMonth() + 1;
  var week = time.getDay();
  var today = time.getDate(); // 今天
  var fullToday = year + '-' + fmtDate(month) + '-' + fmtDate(today); // 今天完整格式

  // 若定义了要操作的天, 则取得年份和月份，用以构造日历
  if (that.data.mode == 'one' && that.data.oneDoDay) {
    year = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.oneDoDay), 'Y'));
    month = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.oneDoDay), 'M'));
  } else if (that.data.mode == 'multi' && that.data.multiDoDay && that.data.multiDoDay.length > 0 && that.data.multiDoDay[0]) {
    year = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.multiDoDay[0]), 'Y'));
    month = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.multiDoDay[0]), 'M'));
  }
  var oneDoDay = that.data.oneDoDay || fullToday; // 正在操作的天完整格式
  // let multiDoDay = that.data.multiDoDay || [oneDoDay];  // 多选默认选中一天
  var multiDoDay = that.data.multiDoDay;
  that.setData({
    year: year,
    month: month,
    fullToday: fullToday,
    oneDoDay: oneDoDay,
    multiDoDay: multiDoDay,
    week: week
  });
}
//获得某月天数
function getMonthCnt(year, month) {
  var baseMonthsDay = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; //各月天数
  if (month == 2 && year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)) {
    return 29;
  } else {
    return baseMonthsDay[month - 1];
  }
}

//获得上月天数
function getLastMonthCnt(year, month) {
  if (month == 1) {
    month = 12;
    --year;
  } else {
    --month;
  }
  return getMonthCnt(year, month);
}

//从上月补几天
function getLastMonthArr(that, year, month) {
  var time = new Date(year, month - 1, 1);
  var space = time.getDay() - 1; //获取当前星期X(0-6,0代表星期天)
  if (space == -1) {
    space = 6;
  } //调整为周1-周7格式

  // 获取上个月天数
  var lastMonthCnt = getLastMonthCnt(year, month);
  if (month == 1) {
    month = 12;
    --year;
  } else {
    --month;
  }
  var dayArr = [];
  for (var i = space; i >= 1; i--) {
    var lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, lastMonthCnt - i + 1) : '';
    var holiday = isHoliday(lunar);
    var full = year + '-' + fmtDate(month) + '-' + fmtDate(lastMonthCnt - i + 1);
    dayArr.push({
      lunar: lunar,
      holiday: holiday,
      show: lastMonthCnt - i + 1,
      curMonth: false,
      weekNo: 1,
      //必然第一周
      val: year + '-' + month + '-' + (lastMonthCnt - i + 1),
      full: full
    });
  }
  return dayArr;
}

/**
 * //从下月补几天
 * @param {*} year
 * @param {*} month
 * @param {*} hasDayLen  已有多少天
 */
function getNextMonthArr(that, year, month, hasDayLen) {
  if (that.mode == 'multi') {
    if (month == 12) {
      month = 1;
      ++year;
    } else {
      month++;
    }

    // 多选统一补成6行
    var _dayArr = [];
    for (var i = 1; i <= 42 - hasDayLen; i++) {
      var weekNo = Math.ceil((hasDayLen + i) / 7); // 计算当前是第几周

      var lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, i) : '';
      var holiday = isHoliday(lunar);
      var full = year + '-' + fmtDate(month) + '-' + fmtDate(i);
      _dayArr.push({
        lunar: lunar,
        holiday: holiday,
        has: false,
        //是否有数据
        show: i,
        curMonth: false,
        weekNo: weekNo,
        val: year + '-' + month + '-' + i,
        full: full
      });
    }
  } else {
    // 单选只把最后一行补齐
    var endDay = getMonthCnt(year, month); //最后一天

    var time = new Date(year, month - 1, endDay);
    var space = time.getDay(); //获取当前星期X(0-6,0代表星期天)
    space = 7 - space;
    if (space == 7) {
      space = 0;
    }
    if (space <= 0) {
      return [];
    }
    if (month == 12) {
      month = 1;
      ++year;
    } else {
      month++;
    }
    var _dayArr2 = [];
    for (var _i = 1; _i <= space; _i++) {
      var _lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, _i) : '';
      var _holiday = isHoliday(_lunar);
      var _full = year + '-' + fmtDate(month) + '-' + fmtDate(_i);
      _dayArr2.push({
        lunar: _lunar,
        holiday: _holiday,
        show: _i,
        curMonth: false,
        weekNo: that.data.weekNo,
        val: year + '-' + month + '-' + _i,
        full: _full
      });
    }
    return _dayArr2;
  }
  return dayArr;
}
function createDay(that) {
  // 创建日历
  var month = that.data.month;
  var year = that.data.year;
  var dayArr = [];
  var len = getMonthCnt(year, month);
  for (var i = 1; i <= len; i++) {
    var lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, i) : '';
    var holiday = isHoliday(lunar);
    var full = year + '-' + fmtDate(month) + '-' + fmtDate(i); //实际日期(补位);
    dayArr.push({
      lunar: lunar,
      holiday: holiday,
      has: false,
      //是否有数据
      show: i,
      // 显示
      curMonth: true,
      //是否当前月
      weekNo: weekIndexInMonth(year, month, i),
      //第几周
      val: year + '-' + month + '-' + i,
      //实际日期(简化)
      full: full
    });
  }

  // 前后补空
  var lastArr = getLastMonthArr(that, year, month);
  var nextArr = getNextMonthArr(that, year, month, dayArr.length + lastArr.length);
  var data = lastArr.concat(dayArr).concat(nextArr);

  /*
  // 数据循环处理
  let hasDays = that.data.hasDays;
  if (hasDays.length > 0) {
  for (let j in hasDays) {
  for (let k = 0; k < data.length; k++) {
  	if (data[k].full == hasDays[j]) {
  		data[k].has = true; //当日有数据
  	}
  }
  }
  }*/

  // 当前操作日为周几？ 仅针对单选模式
  var weekNo = 0;
  if (that.data.mode == 'one') {
    if (!that.data.oneDoDay) {
      weekNo = weekIndexInMonth();
    } else {
      var arr = that.data.oneDoDay.split('-');
      weekNo = weekIndexInMonth(arr[0], arr[1], arr[2]);
    }
  }
  that.setData({
    weekNo: weekNo,
    dayArr: data
  });
}

/** ListTouch计算滚动 */
function listTouchEnd(that) {
  if (that.data.touchDirection == 'left') {
    that.setData({
      animation: 'slide-left'
    });
    setTimeout(function () {
      that.setData({
        animation: ''
      });
    }, 200);
    that.bindNextTap();
  } else if (that.data.touchDirection == 'right') {
    that.setData({
      animation: 'slide-right'
    });
    setTimeout(function () {
      that.setData({
        animation: ''
      });
    }, 200);
    that.bindLastTap();
  }
  that.setData({
    touchDirection: null
  });
}

// 回本月
function bindToNowTap(that) {
  var time = new Date();
  var year = time.getFullYear();
  var month = time.getMonth() + 1;
  that.setData({
    month: month,
    year: year,
    fold: false
  });
  that.setData({
    animation: 'fade'
  });
  setTimeout(function () {
    that.setData({
      animation: ''
    });
  }, 300);
  createDay(that);
  if (that.data.mode == 'one') {
    //月份切换引起父组件变动
    that.$emit('monthChange', {
      detail: {
        yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
      }
    });
  }
}

//多选天点击
function bindDayMultiTap(e, that) {
  // 显示
  var oneDoDay = e.currentTarget.dataset.fullday;
  var multiDoDay = dataHelper.deepClone(that.data.multiDoDay);
  if (that.data.multiOnlyOne) {
    // 只能选一个
    multiDoDay = [oneDoDay];
  } else {
    multiDoDay = dataHelper.arrAddDel(multiDoDay, oneDoDay);
  }
  if (multiDoDay.length < that.data.multiDoDay.length) {
    // 有取消
    that.$emit('cancel', {
      detail: {
        day: oneDoDay
      }
    });
  }
  that.setData({
    multiDoDay: multiDoDay
  });

  // 传递给父组件
  that.$emit('click', {
    detail: {
      days: multiDoDay
    }
  });
}

//单个天点击
function bindDayOneTap(e, that) {
  // 显示
  var oneDoDay = e.currentTarget.dataset.fullday;

  // 当前周
  var weekNo = 0;
  var arr = oneDoDay.split('-');
  weekNo = weekIndexInMonth(arr[0], arr[1], arr[2]);
  that.setData({
    oneDoDay: oneDoDay,
    weekNo: weekNo
  });

  // 传递给父组件
  that.$emit('click', {
    detail: {
      day: oneDoDay
    }
  });
}

//  下月
function bindNextTap(that) {
  var month = that.data.month;
  if (month == 12) {
    that.setData({
      year: that.data.year + 1,
      month: 1,
      fold: false //翻页不折叠
    });
  } else {
    that.setData({
      month: month + 1,
      fold: false
    });
  }
  createDay(that);
  if (that.data.mode == 'one') {
    //月份切换引起父组件变动
    that.$emit('monthChange', {
      detail: {
        yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
      }
    });
  }
}

// 上个月
function bindLastTap(that) {
  var month = that.data.month;
  if (month == 1) {
    that.setData({
      year: that.data.year - 1,
      month: 12,
      fold: false
    });
  } else {
    that.setData({
      month: month - 1,
      fold: false
    });
  }
  createDay(that);
  if (that.data.mode == 'one') {
    //月份切换引起父组件变动
    that.$emit('monthChange', {
      detail: {
        yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
      }
    });
  }
}

// 日历折叠
function bindFoldTap(that) {
  if (that.data.fold) {
    that.setData({
      fold: false
    });
  } else {
    //that._init(); //折叠回本月
    that.setData({
      fold: true
    });
  }
}
module.exports = {
  isHoliday: isHoliday,
  weekIndexInMonth: weekIndexInMonth,
  fmtDate: fmtDate,
  getNowTime: getNowTime,
  getMonthCnt: getMonthCnt,
  getLastMonthCnt: getLastMonthCnt,
  getLastMonthArr: getLastMonthArr,
  getNextMonthArr: getNextMonthArr,
  createDay: createDay,
  listTouchEnd: listTouchEnd,
  bindToNowTap: bindToNowTap,
  bindDayMultiTap: bindDayMultiTap,
  bindDayOneTap: bindDayOneTap,
  bindNextTap: bindNextTap,
  bindLastTap: bindLastTap,
  bindFoldTap: bindFoldTap
};

/***/ }),

/***/ 667:
/*!************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/lib/tools/lunar_lib.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* 公历转农历代码思路：
1、建立农历年份查询表
2、计算输入公历日期与公历基准的相差天数
3、从农历基准开始遍历农历查询表，计算自农历基准之后每一年的天数，并用相差天数依次相减，确定农历年份
4、利用剩余相差天数以及农历每个月的天数确定农历月份
5、利用剩余相差天数确定农历哪一天
https://github.com/xm2by/fragment
 */ //农历节日
var LUNAR_HOLIDAY = {
  '0101': '春节',
  '0115': '元宵节',
  '0505': '端午节',
  '0707': '七夕',
  '0715': '中元节',
  '0815': '中秋节',
  '0909': '重阳节',
  1208: '腊八节',
  1224: '小年'
};

// 公历节日
var PUBLIC_HOLIDAY = {
  '0101': '元旦',
  '0214': '情人节',
  '0307': '女生节',
  '0308': '妇女节',
  '0312': '植树节',
  '0314': '白色情人',
  '0315': '消费者日',
  '0401': '愚人节',
  '0404': '复活节',
  '0501': '劳动节',
  '0504': '青年节',
  '0510': '母亲节',
  '0512': '护士节',
  '0601': '儿童节',
  '0620': '父亲节',
  '0701': '建党节',
  '0801': '建军节',
  '0910': '教师节',
  '0928': '孔子诞辰',
  1001: '国庆节',
  1006: '老人节',
  1024: '联合国日',
  1101: '万圣节',
  1125: '感恩节',
  1224: '平安夜',
  1225: '圣诞节'
};
var SOLAR_STERM = ['小寒', '大寒', '立春', '雨水', '惊蛰', '春分', '清明', '谷雨', '立夏', '小满', '芒种', '夏至', '小暑', '大暑', '立秋', '处暑', '白露', '秋分', '寒露', '霜降', '立冬', '小雪', '大雪', '冬至'];
var SOLAR_STERM_INFO = [0, 1272480000, 2548020000, 3830160000, 5120220000, 6420840000, 7732020000, 9055260000, 10388940000, 11733060000, 13084320000, 14441580000, 15800580000, 17159340000, 18513780000, 19861980000, 21201000000, 22529640000, 23846820000, 25152600000, 26447700000, 27733440000, 29011920000, 30285480000];

// 农历1949-2100年查询表
var LUNAR_YEAR_ARR = [46423,
//1949
27808, 46416, 86869, 19872, 42416, 83315, 21168, 43432, 59728, 27296,
//1950-1959
44710, 43856, 19296, 43748, 42352, 21088, 62051, 55632, 23383, 22176,
//1960-1969
38608, 19925, 19152, 42192, 54484, 53840, 54616, 46400, 46752, 103846,
//1970-1979
38320, 18864, 43380, 42160, 45690, 27216, 27968, 44870, 43872, 38256,
//1980-1989
19189, 18800, 25776, 29859, 59984, 27480, 21952, 43872, 38613, 37600,
//1990-1999
51552, 55636, 54432, 55888, 30034, 22176, 43959, 9680, 37584, 51893,
//2000-2009
43344, 46240, 47780, 44368, 21977, 19360, 42416, 86390, 21168, 43312,
//2010-2019
31060, 27296, 44368, 23378, 19296, 42726, 42208, 53856, 60005, 54576,
//2020-2029
23200, 30371, 38608, 19195, 19152, 42192, 118966, 53840, 54560, 56645,
//2030-2039
46496, 22224, 21938, 18864, 42359, 42160, 43600, 111189, 27936, 44448,
//2040-2049
84835, 37744, 18936, 18800, 25776, 92326, 59984, 27424, 108228, 43744,
//2050-2059
41696, 53987, 51552, 54615, 54432, 55888, 23893, 22176, 42704, 21972,
//2060-2069
21200, 43448, 43344, 46240, 46758, 44368, 21920, 43940, 42416, 21168,
//2070-2079
45683, 26928, 29495, 27296, 44368, 84821, 19296, 42352, 21732, 53600,
//2080-2089
59752, 54560, 55968, 92838, 22224, 19168, 43476, 41680, 53584, 62034,
//2090-2099
54560 //2100
];

var LUNAR_MONTH = ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'];
var LUNAR_DAY = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '初', '廿'];
var TIAN_GAN = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'];
var DIZHI = ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'];

// 公历转农历函数
function sloarToLunar(sy, sm, sd) {
  if (typeof sy == 'string') {
    var arr = sy.split('-');
    sy = Number(arr[0]);
    sm = Number(arr[1]);
    sd = Number(arr[2]);
  }

  // 公历节日
  var publicHoliday = (sm > 9 ? sm : '0' + sm) + '' + (sd > 9 ? sd : '0' + sd);
  if (PUBLIC_HOLIDAY.hasOwnProperty(publicHoliday)) {
    return PUBLIC_HOLIDAY[publicHoliday];
  }

  // 输入的月份减1处理
  sm -= 1;

  // 计算与公历基准的相差天数
  // Date.UTC()返回的是距离公历1970年1月1日的毫秒数,传入的月份需要减1
  var daySpan = (Date.UTC(sy, sm, sd) - Date.UTC(1949, 0, 29)) / (86400 * 1000) + 1;
  var ly;
  var lm;
  var ld; // 确定输出的农历年份
  for (var j = 0; j < LUNAR_YEAR_ARR.length; j++) {
    daySpan -= lunarYearDays(LUNAR_YEAR_ARR[j]);
    if (daySpan <= 0) {
      ly = 1949 + j;
      // 获取农历年份确定后的剩余天数
      daySpan += lunarYearDays(LUNAR_YEAR_ARR[j]);
      break;
    }
  }

  // 确定输出的农历月份
  for (var k = 0; k < lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949]).length; k++) {
    daySpan -= lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949])[k];
    if (daySpan <= 0) {
      // 有闰月时，月份的数组长度会变成13，因此，当闰月月份小于等于k时，lm不需要加1
      if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) && hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) <= k) {
        if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) < k) {
          lm = k;
        } else if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) === k) {
          lm = '闰' + k;
        } else {
          lm = k + 1;
        }
      } else {
        lm = k + 1;
      }
      // 获取农历月份确定后的剩余天数
      daySpan += lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949])[k];
      break;
    }
  }

  // 确定输出农历哪一天
  ld = daySpan;

  //农历节日
  var paraHoliday = (lm > 9 ? lm : '0' + lm) + '' + (ld > 9 ? ld : '0' + ld);
  if (LUNAR_HOLIDAY.hasOwnProperty(paraHoliday)) {
    return LUNAR_HOLIDAY[paraHoliday];
  }

  // TODO:除夕
  /*
  if (lm == 12) {
  var theLastDay = lDate.isLeap ? leapDays(y) : monthDays(y, m); //农历当月最後一天
  if (theLastDay == ld) {
  return "除夕";
  }
  }*/

  // 农历节气
  var temp = getSolarTerm(sy, sm + 1, sd);
  if (temp) {
    return temp;
  }

  // 将计算出来的农历月份转换成汉字月份，闰月需要在前面加上闰字
  if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) && typeof lm === 'string' && lm.indexOf('闰') > -1) {
    lm = "\u95F0".concat(LUNAR_MONTH[/\d/.exec(lm) - 1]);
  } else {
    lm = LUNAR_MONTH[lm - 1];
  }

  // 将计算出来的农历年份转换为天干地支年
  //ly = getTianGan(ly) + getDiZhi(ly);
  ly = '';

  // 将计算出来的农历天数转换成汉字
  if (ld < 11) {
    ld = "".concat(LUNAR_DAY[10]).concat(LUNAR_DAY[ld - 1]);
  } else if (ld > 10 && ld < 20) {
    ld = "".concat(LUNAR_DAY[9]).concat(LUNAR_DAY[ld - 11]);
  } else if (ld === 20) {
    ld = "".concat(LUNAR_DAY[1]).concat(LUNAR_DAY[9]);
  } else if (ld > 20 && ld < 30) {
    ld = "".concat(LUNAR_DAY[11]).concat(LUNAR_DAY[ld - 21]);
  } else if (ld === 30) {
    ld = "".concat(LUNAR_DAY[2]).concat(LUNAR_DAY[9]);
  }

  //console.log(ly, lm, ld);
  if (ld == '初一') {
    ld = lm + '月';
  }

  /*
  return {
  lunarYear: ly,
  LUNAR_MONTH: lm,
  LUNAR_DAY: ld,
  }*/
  return ld;
}

// 计算农历年是否有闰月，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的最后1位可以用于判断是否有闰月
function hasLeapMonth(ly) {
  // 获取16进制的最后1位，需要用到&与运算符
  if (ly & 15) {
    return ly & 15;
  } else {
    return false;
  }
}

// 如果有闰月，计算农历闰月天数，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的第1位（0x除外）可以用于表示闰月是大月还是小月
function leapMonthDays(ly) {
  if (hasLeapMonth(ly)) {
    // 获取16进制的第1位（0x除外）
    return ly & 983040 ? 30 : 29;
  } else {
    return 0;
  }
}

// 计算农历一年的总天数，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的第2-4位（0x除外）可以用于表示正常月是大月还是小月
function lunarYearDays(ly) {
  var totalDays = 0;

  // 获取正常月的天数，并累加
  // 获取16进制的第2-4位，需要用到>>移位运算符
  for (var i = 32768; i > 8; i >>= 1) {
    var monthDays = ly & i ? 30 : 29;
    totalDays += monthDays;
  }
  // 如果有闰月，需要把闰月的天数加上
  if (hasLeapMonth(ly)) {
    totalDays += leapMonthDays(ly);
  }
  return totalDays;
}

// 获取农历每个月的天数
// 参数需传入16进制数值
function lunarYearMonths(ly) {
  var monthArr = [];

  // 获取正常月的天数，并添加到monthArr数组中
  // 获取16进制的第2-4位，需要用到>>移位运算符
  for (var i = 32768; i > 8; i >>= 1) {
    monthArr.push(ly & i ? 30 : 29);
  }
  // 如果有闰月，需要把闰月的天数加上
  if (hasLeapMonth(ly)) {
    monthArr.splice(hasLeapMonth(ly), 0, leapMonthDays(ly));
  }
  return monthArr;
}

// 将农历年转换为天干，参数为农历年

// 将农历年转换为地支，参数为农历年

/**
 * 节气（参数为公历)
 * @param {*} sy
 * @param {*} sm
 * @param {*} sd
 */
function getSolarTerm(sy, sm, sd) {
  sm -= 1;
  var solarTermStr = '';
  //月份乘2是因为每月平均2节气对应二十四节气加一考虑存在闰月
  var tmp1 = new Date(31556925974.7 * (sy - 1900) + SOLAR_STERM_INFO[sm * 2 + 1] + Date.UTC(1900, 0, 6, 2, 5));
  var tmp2 = tmp1.getUTCDate();
  if (tmp2 == sd) {
    solarTermStr = SOLAR_STERM[sm * 2 + 1];
  }
  tmp1 = new Date(31556925974.7 * (sy - 1900) + SOLAR_STERM_INFO[sm * 2] + Date.UTC(1900, 0, 6, 2, 5));
  tmp2 = tmp1.getUTCDate();
  if (tmp2 == sd) {
    solarTermStr = SOLAR_STERM[sm * 2];
  }
  if (sd > 1) {
    sd -= 1;
  } else {
    sm -= 1;
    sd = 31;
    if (sm < 0) {
      sy -= 1;
      sm = 11;
    }
  }
  return solarTermStr;
}
module.exports = {
  sloarToLunar: sloarToLunar
};

/***/ }),

/***/ 67:
/*!**********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/pic_helper.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {/**
 * Notes: 图片处理相关函数
 * Ver : CCMiniCloud Framework 2.0.13 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2021-10-25 04:00:00
 */

function getWritePhotosAlbum(callback) {
  uni.getSetting({
    success: function success(res) {
      console.log('res=', res);
      if (res.authSetting['scope.writePhotosAlbum']) {
        console.log('true');
        if (callback) {
          callback();
        }
      } else if (res.authSetting['scope.writePhotosAlbum'] === undefined) {
        uni.showModal({
          title: '提示',
          content: '您未开启保存图片到相册的权限，请点击确定去开启权限！',
          success: function success(res) {
            if (res.confirm) {
              uni.authorize({
                scope: 'scope.writePhotosAlbum',
                success: function success(res) {
                  if (callback) {
                    callback();
                  }
                  console.log('授权下载成功', res);
                },
                fail: function fail(res) {
                  console.log('您没有授权 fail=', res);
                  uni.showToast({
                    title: '您没有授权，无法保存到相册',
                    icon: 'none'
                  });
                }
              });
            } else {
              console.log('取消了');
            }
          }
        });
      } else {
        uni.showModal({
          title: '提示',
          content: '您未开启保存图片到相册的权限，请点击确定去开启权限！',
          success: function success(res) {
            if (res.confirm) {
              uni.openSetting({
                success: function success(res) {
                  uni.showToast({
                    icon: 'none',
                    title: '正在保存图片'
                  });
                  if (res.authSetting['scope.writePhotosAlbum']) {
                    console.log('false success res=', res);
                    if (callback) {
                      callback();
                    }
                  } else {
                    uni.showToast({
                      title: '您没有授权，无法保存到相册！',
                      icon: 'none'
                    });
                  }
                },
                fail: function fail(res) {
                  console.log('false file res=', res);
                }
              });
            } else {
              uni.showToast({
                title: '您没有授权，无法保存到相册',
                icon: 'none'
              });
            }
          }
        });
      }
    }
  });
}
module.exports = {
  getWritePhotosAlbum: getWritePhotosAlbum
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 68:
/*!************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/cloud_helper.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni, uniCloud, wx) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
/**
 * Notes: 云操作类库
 * Ver : CCMiniCloud Framework 2.3.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var helper = __webpack_require__(/*! ./helper.js */ 65);
var dataHelper = __webpack_require__(/*! ./data_helper.js */ 69);
var cacheHelper = __webpack_require__(/*! ./cache_helper.js */ 66);
var constants = __webpack_require__(/*! ../comm/constants.js */ 70);
var contentCheckHelper = __webpack_require__(/*! ./content_check_helper.js */ 71);
var pageHelper = __webpack_require__(/*! ./page_helper.js */ 64);
var timeHelper = __webpack_require__(/*! ./time_helper.js */ 72);
var setting = __webpack_require__(/*! ../setting/setting.js */ 42);
var CODE = {
  SUCC: 200,
  SVR: 500,
  //服务器错误
  LOGIC: 1600,
  //逻辑错误
  DATA: 1301,
  // 数据校验错误
  HEADER: 1302,
  // header 校验错误

  ADMIN_ERROR: 2401,
  //管理员错误
  WORK_ERROR: 2501 //陪练员错误
};

function callCloudSumbitAsync(route) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var options = arguments.length > 2 ? arguments[2] : undefined;
  if (!helper.isDefined(options)) {
    options = {
      hint: false
    };
  }
  if (!helper.isDefined(options.hint)) {
    options.hint = false;
  }
  return callCloud(route, params, options);
}
function callCloudSumbit(_x) {
  return _callCloudSumbit.apply(this, arguments);
}
function _callCloudSumbit() {
  _callCloudSumbit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(route) {
    var params,
      options,
      _args = arguments;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {
              title: '提交中...'
            };
            if (!helper.isDefined(options)) {
              options = {
                title: '提交中..'
              };
            }
            if (!helper.isDefined(options.title)) {
              options.title = '提交中..';
            }
            _context.next = 6;
            return callCloud(route, params, options);
          case 6:
            return _context.abrupt("return", _context.sent);
          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _callCloudSumbit.apply(this, arguments);
}
function callCloudData(_x2) {
  return _callCloudData.apply(this, arguments);
}
function _callCloudData() {
  _callCloudData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(route) {
    var params,
      options,
      result,
      _args2 = arguments;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            params = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
            options = _args2.length > 2 ? _args2[2] : undefined;
            if (!helper.isDefined(options)) {
              options = {
                title: '加载中..'
              };
            }
            if (!helper.isDefined(options.title)) {
              options.title = '加载中..';
            }
            _context2.next = 6;
            return callCloud(route, params, options).catch(function (err) {
              return null;
            });
          case 6:
            result = _context2.sent;
            if (result && helper.isDefined(result.data)) {
              result = result.data;
              if (Array.isArray(result)) {
                // 数组处理
              } else if (Object.keys(result).length == 0) {
                result = null; //对象处理
              }
            }
            return _context2.abrupt("return", result);
          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _callCloudData.apply(this, arguments);
}
function callCloud(route) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var options = arguments.length > 2 ? arguments[2] : undefined;
  var title = '加载中';
  var hint = true;

  // 标题
  if (helper.isDefined(options) && helper.isDefined(options.title)) {
    title = options.title;
  }
  if (helper.isDefined(options) && helper.isDefined(options.hint)) {
    hint = options.hint;
  }
  if (helper.isDefined(options) && helper.isDefined(options.doFail)) {
    doFail = options.doFail;
  }
  if (hint) {
    if (title == 'bar') {
      uni.showNavigationBarLoading();
    } else {
      uni.showLoading({
        title: title,
        mask: true
      });
    }
  }
  var token = '';
  // 管理员token
  if (route.indexOf('admin/') > -1) {
    var admin = cacheHelper.get(constants.CACHE_ADMIN);
    if (admin && admin.token) {
      token = admin.token;
    }
  } else if (route.indexOf('work/') > -1) {
    var work = cacheHelper.get(constants.CACHE_WORK);
    if (work && work.token) {
      token = work.token;
    }
  } else {
    //正常用户
    var user = cacheHelper.get(constants.CACHE_TOKEN);
    if (user && user.id) {
      token = user.id;
    }
  }
  return new Promise(function (resolve, reject) {
    var PID = pageHelper.getPID();
    uniCloud.callFunction({
      name: 'mcloud',
      data: {
        route: route,
        token: token,
        PID: PID,
        params: params
      },
      success: function success(res) {
        if (res.result.code == CODE.LOGIC || res.result.code == CODE.DATA) {
          console.log(res);
          // 逻辑错误&数据校验错误
          if (hint) {
            uni.showModal({
              title: '温馨提示',
              content: res.result.msg,
              showCancel: false
            });
          }
          reject(res.result);
          return;
        } else if (res.result.code == CODE.ADMIN_ERROR) {
          // 后台登录错误
          uni.reLaunch({
            url: pageHelper.fmtURLByPID('/pages/admin/index/login/admin_login')
          });
          //reject(res.result);
          return;
        } else if (res.result.code == CODE.WORK_ERROR) {
          // 服务者登录错误
          uni.reLaunch({
            url: pageHelper.fmtURLByPID('/pages/work/index/login/work_login')
          });
          //reject(res.result);
          return;
        } else if (res.result.code != CODE.SUCC) {
          if (hint) {
            uni.showModal({
              title: '温馨提示',
              content: '系统开小差了，请稍后重试',
              showCancel: false
            });
          }
          reject(res.result);
          return;
        }
        resolve(res.result);
      },
      fail: function fail(err) {
        if (hint) {
          console.log(err);
          if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('Environment not found')) {
            uni.showModal({
              title: '',
              content: '未找到云环境ID，请按手册检查前端配置文件setting.js的配置项【CLOUD_ID】或咨询作者微信cclinux0730',
              showCancel: false
            });
          } else if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('FunctionName')) {
            uni.showModal({
              title: '',
              content: '云函数未创建或者未上传，请参考手册或咨询作者微信cclinux0730',
              showCancel: false
            });
          } else if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('performed in the current function state')) {
            uni.showModal({
              title: '',
              content: '云函数正在上传中或者上传有误，请稍候',
              showCancel: false
            });
          } else {
            uni.showModal({
              title: '',
              content: '网络故障，请稍后重试',
              showCancel: false
            });
          }
        }
        reject(err.result);
        return;
      },
      complete: function complete(res) {
        if (hint) {
          if (title == 'bar') {
            uni.hideNavigationBarLoading();
          } else {
            uni.hideLoading();
          }
        }
        // complete
      }
    });
  });
}
function dataList(_x3, _x4, _x5, _x6, _x7) {
  return _dataList.apply(this, arguments);
}
function _dataList() {
  _dataList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(that, listName, route, params, options) {
    var isReverse,
      data,
      page,
      count,
      key,
      oldTotal,
      _args3 = arguments;
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            isReverse = _args3.length > 5 && _args3[5] !== undefined ? _args3[5] : false;
            console.log('dataList begin');
            if (!helper.isDefined(that.data[listName]) || !that.data[listName]) {
              data = {};
              data[listName] = {
                page: 1,
                size: 20,
                list: [],
                count: 0,
                total: 0,
                oldTotal: 0
              };
              that.setData(data);
            }

            //改为后台默认控制
            //if (!helper.isDefined(params.size))
            //	params.size = 20;

            if (!helper.isDefined(params.isTotal)) {
              params.isTotal = true;
            }
            page = params.page;
            count = that.data[listName].count;
            if (!(page > 1 && page > count)) {
              _context3.next = 9;
              break;
            }
            uni.showToast({
              duration: 500,
              icon: 'none',
              title: '没有更多数据了'
            });
            return _context3.abrupt("return");
          case 9:
            for (key in params) {
              if (!helper.isDefined(params[key])) {
                delete params[key];
              }
            }
            oldTotal = 0;
            if (that.data[listName] && that.data[listName].total) {
              oldTotal = that.data[listName].total;
            }
            params.oldTotal = oldTotal;

            // 云函数调用
            _context3.next = 15;
            return callCloud(route, params, options).then(function (res) {
              console.log('cloud begin');
              var dataList = res.data;
              var tList = that.data[listName].list;
              if (dataList.page == 1) {
                tList = res.data.list;
              } else if (dataList.page > that.data[listName].page) {
                if (isReverse) {
                  tList = res.data.list.concat(tList);
                } else {
                  tList = tList.concat(res.data.list);
                }
              } else {
                return;
              }
              dataList.list = tList;
              var listData = {};
              listData[listName] = dataList;
              that.setData(listData);
              console.log('cloud END');
            }).catch(function (err) {
              console.log(err);
            });
          case 15:
            console.log('dataList END');
          case 16:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _dataList.apply(this, arguments);
}
function getTempFileURLOne(_x8) {
  return _getTempFileURLOne.apply(this, arguments);
}
function _getTempFileURLOne() {
  _getTempFileURLOne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(fileID) {
    var result;
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            if (fileID) {
              _context4.next = 2;
              break;
            }
            return _context4.abrupt("return", '');
          case 2:
            _context4.next = 4;
            return wx.cloud.getTempFileURL({
              fileList: [fileID]
            });
          case 4:
            result = _context4.sent;
            if (!(result && result.fileList && result.fileList[0] && result.fileList[0].tempFileURL)) {
              _context4.next = 7;
              break;
            }
            return _context4.abrupt("return", result.fileList[0].tempFileURL);
          case 7:
            return _context4.abrupt("return", '');
          case 8:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _getTempFileURLOne.apply(this, arguments);
}
function transTempPics(_x9, _x10, _x11) {
  return _transTempPics.apply(this, arguments);
}
function _transTempPics() {
  _transTempPics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(imgList, dir, id) {
    var prefix,
      _loop,
      i,
      _args6 = arguments;
    return _regeneratorRuntime.wrap(function _callee5$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            prefix = _args6.length > 3 && _args6[3] !== undefined ? _args6[3] : '';
            if (!setting.IS_DEMO) {
              _context6.next = 3;
              break;
            }
            return _context6.abrupt("return", imgList);
          case 3:
            if (prefix && !prefix.endsWith('_')) {
              prefix += '_';
            }
            if (!id) {
              id = timeHelper.time('YMD');
            }
            _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop(i) {
              var filePath, ext, rd, cloudPath;
              return _regeneratorRuntime.wrap(function _loop$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      filePath = imgList[i];
                      ext = filePath.match(/\.[^.]+?$/)[0]; // 是否为临时文件
                      if (!(filePath.includes('tmp') || filePath.includes('temp') || filePath.includes('wxfile'))) {
                        _context5.next = 8;
                        break;
                      }
                      rd = prefix + dataHelper.genRandomNum(1000000, 9999999);
                      cloudPath = id ? dir + id + '/' + rd + ext : dir + rd + ext;
                      if (pageHelper.getPID()) {
                        cloudPath = pageHelper.getPID() + '/' + cloudPath;
                      }
                      _context5.next = 8;
                      return uniCloud.uploadFile({
                        cloudPath: cloudPath,
                        filePath: filePath // 文件路径
                      }).then(function (res) {
                        imgList[i] = res.fileID;
                      }).catch(function (error) {
                        // handle error TODO:剔除图片
                        console.error(error);
                      });
                    case 8:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _loop);
            });
            i = 0;
          case 7:
            if (!(i < imgList.length)) {
              _context6.next = 12;
              break;
            }
            return _context6.delegateYield(_loop(i), "t0", 9);
          case 9:
            i++;
            _context6.next = 7;
            break;
          case 12:
            return _context6.abrupt("return", imgList);
          case 13:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee5);
  }));
  return _transTempPics.apply(this, arguments);
}
function transRichEditorTempPics(_x12, _x13, _x14, _x15) {
  return _transRichEditorTempPics.apply(this, arguments);
}
function _transRichEditorTempPics() {
  _transRichEditorTempPics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(content, dir, id, route) {
    var imgList, k, imgIdx, _k, params;
    return _regeneratorRuntime.wrap(function _callee6$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            imgList = [];
            for (k = 0; k < content.length; k++) {
              if (content[k].type == 'img') {
                imgList.push(content[k].val);
              }
            }

            // 图片上传到云空间
            _context7.next = 4;
            return transTempPics(imgList, dir, id, 'rich');
          case 4:
            imgList = _context7.sent;
            // 更新图片地址
            imgIdx = 0;
            for (_k = 0; _k < content.length; _k++) {
              if (content[_k].type == 'img') {
                content[_k].val = imgList[imgIdx];
                imgIdx++;
              }
            }

            // 更新本记录的图片信息
            params = {
              id: id,
              content: content
            };
            _context7.prev = 8;
            _context7.next = 11;
            return callCloudSumbit(route, params);
          case 11:
            return _context7.abrupt("return", content);
          case 14:
            _context7.prev = 14;
            _context7.t0 = _context7["catch"](8);
            console.log('CatchClause', _context7.t0);
            console.log('CatchClause', _context7.t0);
            console.error(_context7.t0);
          case 19:
            return _context7.abrupt("return", []);
          case 20:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee6, null, [[8, 14]]);
  }));
  return _transRichEditorTempPics.apply(this, arguments);
}
function transCoverTempPics(_x16, _x17, _x18, _x19) {
  return _transCoverTempPics.apply(this, arguments);
}
function _transCoverTempPics() {
  _transCoverTempPics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(imgList, dir, id, route) {
    var params, res;
    return _regeneratorRuntime.wrap(function _callee7$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return transTempPics(imgList, dir, id, 'cover');
          case 2:
            imgList = _context8.sent;
            // 更新本记录的图片信息
            params = {
              id: id,
              imgList: imgList
            };
            _context8.prev = 4;
            _context8.next = 7;
            return callCloudSumbit(route, params);
          case 7:
            res = _context8.sent;
            return _context8.abrupt("return", res.data.urls);
          case 11:
            _context8.prev = 11;
            _context8.t0 = _context8["catch"](4);
            console.log('CatchClause', _context8.t0);
            console.log('CatchClause', _context8.t0);
            console.error(_context8.t0);
          case 16:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee7, null, [[4, 11]]);
  }));
  return _transCoverTempPics.apply(this, arguments);
}
function transFormsTempPics(_x20, _x21, _x22, _x23) {
  return _transFormsTempPics.apply(this, arguments);
}
function _transFormsTempPics() {
  _transFormsTempPics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(forms, dir, id, route) {
    var hasImageForms, k, contentVal, j, ret, fileVal, _j, _ret, params;
    return _regeneratorRuntime.wrap(function _callee8$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            uni.showLoading({
              title: '提交中...',
              mask: true
            });
            hasImageForms = [];
            k = 0;
          case 3:
            if (!(k < forms.length)) {
              _context9.next = 41;
              break;
            }
            if (!(forms[k].type == 'image')) {
              _context9.next = 11;
              break;
            }
            _context9.next = 7;
            return transTempPics(forms[k].val, dir, id, 'image');
          case 7:
            forms[k].val = _context9.sent;
            hasImageForms.push(forms[k]);
            _context9.next = 38;
            break;
          case 11:
            if (!(forms[k].type == 'content')) {
              _context9.next = 26;
              break;
            }
            contentVal = forms[k].val;
            _context9.t0 = _regeneratorRuntime.keys(contentVal);
          case 14:
            if ((_context9.t1 = _context9.t0()).done) {
              _context9.next = 23;
              break;
            }
            j = _context9.t1.value;
            if (!(contentVal[j].type == 'img')) {
              _context9.next = 21;
              break;
            }
            _context9.next = 19;
            return transTempPics([contentVal[j].val], dir, id, 'content');
          case 19:
            ret = _context9.sent;
            contentVal[j].val = ret[0];
          case 21:
            _context9.next = 14;
            break;
          case 23:
            hasImageForms.push(forms[k]);
            _context9.next = 38;
            break;
          case 26:
            if (!(forms[k].type == 'file')) {
              _context9.next = 38;
              break;
            }
            fileVal = forms[k].val;
            _context9.t2 = _regeneratorRuntime.keys(fileVal);
          case 29:
            if ((_context9.t3 = _context9.t2()).done) {
              _context9.next = 37;
              break;
            }
            _j = _context9.t3.value;
            _context9.next = 33;
            return transTempPics([fileVal[_j].path], dir, id, 'file');
          case 33:
            _ret = _context9.sent;
            fileVal[_j].path = _ret[0];
            _context9.next = 29;
            break;
          case 37:
            hasImageForms.push(forms[k]);
          case 38:
            k++;
            _context9.next = 3;
            break;
          case 41:
            if (!(hasImageForms.length == 0)) {
              _context9.next = 43;
              break;
            }
            return _context9.abrupt("return");
          case 43:
            params = {
              id: id,
              hasImageForms: hasImageForms
            };
            _context9.prev = 44;
            _context9.next = 47;
            return callCloudSumbit(route, params);
          case 47:
            _context9.next = 54;
            break;
          case 49:
            _context9.prev = 49;
            _context9.t4 = _context9["catch"](44);
            console.log('CatchClause', _context9.t4);
            console.log('CatchClause', _context9.t4);
            console.error(_context9.t4);
          case 54:
          case "end":
            return _context9.stop();
        }
      }
    }, _callee8, null, [[44, 49]]);
  }));
  return _transFormsTempPics.apply(this, arguments);
}
function transTempPicOne(_x24, _x25, _x26) {
  return _transTempPicOne.apply(this, arguments);
}
function _transTempPicOne() {
  _transTempPicOne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(img, dir, id) {
    var isCheck,
      check,
      imgList,
      _args10 = arguments;
    return _regeneratorRuntime.wrap(function _callee9$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            isCheck = _args10.length > 3 && _args10[3] !== undefined ? _args10[3] : true;
            if (!isCheck) {
              _context10.next = 10;
              break;
            }
            uni.showLoading({
              title: '图片校验中',
              mask: true
            });
            _context10.next = 5;
            return contentCheckHelper.imgCheck(img);
          case 5:
            check = _context10.sent;
            if (check) {
              _context10.next = 9;
              break;
            }
            uni.hideLoading();
            return _context10.abrupt("return", pageHelper.showModal('不合适的图片, 请重新上传', '温馨提示'));
          case 9:
            uni.hideLoading();
          case 10:
            imgList = [img];
            _context10.next = 13;
            return transTempPics(imgList, dir, id);
          case 13:
            imgList = _context10.sent;
            if (!(imgList.length == 0)) {
              _context10.next = 18;
              break;
            }
            return _context10.abrupt("return", '');
          case 18:
            return _context10.abrupt("return", imgList[0]);
          case 19:
          case "end":
            return _context10.stop();
        }
      }
    }, _callee9);
  }));
  return _transTempPicOne.apply(this, arguments);
}
module.exports = {
  CODE: CODE,
  dataList: dataList,
  callCloud: callCloud,
  callCloudSumbit: callCloudSumbit,
  callCloudData: callCloudData,
  callCloudSumbitAsync: callCloudSumbitAsync,
  transTempPics: transTempPics,
  transRichEditorTempPics: transRichEditorTempPics,
  transCoverTempPics: transCoverTempPics,
  transFormsTempPics: transFormsTempPics,
  getTempFileURLOne: getTempFileURLOne,
  transTempPicOne: transTempPicOne
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js */ 27)["uniCloud"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 686:
/*!*********************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/picker_time/datetime_picker.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _toConsumableArray = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18);
var timeHelper = __webpack_require__(/*! ../../../helper/time_helper.js */ 72);
function withData(param) {
  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (unit) {
    return param;
  }
  return param < 10 ? '0' + param : '' + param;
}
function getLoopArray(start, end) {
  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var step = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  start = start || 0;
  end = end || 1;
  start = parseInt(start);
  end = parseInt(end);
  var array = [];
  var i = 0;
  for (i = start; i <= end;) {
    array.push(withData(i, unit) + unit);
    i += step;
  }
  if (step > 1 && i != 59) {
    array.push(withData(59, unit) + unit);
  }
  return array;
}
function getMonthDay(year, month) {
  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var flag = year % 400 == 0 || year % 4 == 0 && year % 100 != 0;
  var array = null;
  month = withData(parseInt(month));
  switch (month) {
    case '01':
    case '03':
    case '05':
    case '07':
    case '08':
    case '10':
    case '12':
      array = getLoopArray(1, 31, unit);
      break;
    case '04':
    case '06':
    case '09':
    case '11':
      array = getLoopArray(1, 30, unit);
      break;
    case '02':
      array = flag ? getLoopArray(1, 29, unit) : getLoopArray(1, 28, unit);
      break;
    default:
      array = '月份格式不正确，请重新输入！';
  }
  return array;
}
function getNewDateArry() {
  // 当前时间的处理
  var newDate = new Date();
  var year = withData(newDate.getFullYear());
  var mont = withData(newDate.getMonth() + 1);
  var date = withData(newDate.getDate());
  var hour = withData(newDate.getHours());
  var minu = withData(newDate.getMinutes());
  var seco = withData(newDate.getSeconds());
  return [year, mont, date, hour, minu, seco];
}
function dateTimePicker(startYear, endYear, date) {
  var minuStep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  // 返回默认显示的数组和联动数组的声明
  var dateTimeIndex = [];
  var dateTimeArray = [[], [], [], [], [], []];
  var dateTimeArrayPure = [[], [], [], [], [], []];
  var start = startYear || 1978;
  var end = endYear || 2100;
  if (date && date.length == 4) {
    date += '-01-01 00:00:00';
  }
  if (date && date.length == 7) {
    date += '-01 00:00:00';
  }
  if (date && date.length == 10) {
    date += ' 00:00:00';
  }
  if (date && date.length == 13) {
    date += ':00:00';
  }
  if (date && date.length == 16) {
    date += ':00';
  }

  // 默认开始显示数据
  var defaultDate = date ? [].concat(_toConsumableArray(date.split(' ')[0].split('-')), _toConsumableArray(date.split(' ')[1].split(':'))) : getNewDateArry();

  // 处理联动列表数据
  /*年月日 时分秒*/
  dateTimeArray[0] = getLoopArray(start, end, '年');
  dateTimeArray[1] = getLoopArray(1, 12, '月');
  dateTimeArray[2] = getMonthDay(defaultDate[0], defaultDate[1], '日');
  dateTimeArray[3] = getLoopArray(0, 23, '点');
  dateTimeArray[4] = getLoopArray(0, 59, '分', minuStep);
  dateTimeArray[5] = getLoopArray(0, 59, '秒');
  dateTimeArrayPure[0] = getLoopArray(start, end);
  dateTimeArrayPure[1] = getLoopArray(1, 12);
  dateTimeArrayPure[2] = getMonthDay(defaultDate[0], defaultDate[1]);
  dateTimeArrayPure[3] = getLoopArray(0, 23);
  dateTimeArrayPure[4] = getLoopArray(0, 59, '', minuStep);
  dateTimeArrayPure[5] = getLoopArray(0, 59);
  dateTimeArrayPure.forEach(function (current, index) {
    var idx = current.indexOf(defaultDate[index]);
    if (idx < 0) {
      idx = 0;
    }
    dateTimeIndex.push(idx);
  });
  return {
    dateTimeArray: dateTimeArray,
    dateTimeIndex: dateTimeIndex
  };
}
module.exports = {
  dateTimePicker: dateTimePicker,
  getMonthDay: getMonthDay
};

/***/ }),

/***/ 69:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/data_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11);
var _module$exports;
/**
 * Notes: 字符相关操作函数
 * Ver : CCMiniCloud Framework 2.5.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-09-05 04:00:00
 */
/**
 * 生成一个特定范围内的随机数
 */
var genRandomNum = function genRandomNum(min, max) {
  return (Math.random() * (max - min + 1) | 0) + min;
};

/**
 * 生成一个随机的数字字母字符串
 */
var genRandomString = function genRandomString(len) {
  var text = 'abcdefghijklmnopqrstuvwxyz0123456789';
  var rdmIndex = function rdmIndex(text) {
    return Math.random() * text.length | 0;
  };
  var rdmString = '';
  for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text))) {}
  return rdmString;
};

/**
 * 生成一个随机的字母字符串
 */
var genRandomAlpha = function genRandomAlpha(len) {
  var text = 'abcdefghijklmnopqrstuvwxyz';
  var rdmIndex = function rdmIndex(text) {
    return Math.random() * text.length | 0;
  };
  var rdmString = '';
  for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text))) {}
  return rdmString;
};

// 标签格式化
function fmtTag(tag) {
  if (!tag || tag.constructor != String) {
    return '';
  }
  tag = tag.trim();
  tag = tag.replace(/，/g, ',');
  var arr = tag.split(',');
  var newArr = [];
  for (var k = 0; k < arr.length; k++) {
    arr[k] = arr[k].trim();
    if (arr[k].length > 0) {
      newArr.push(arr[k]);
    }
  }
  return newArr.join(',');
}

// 拆分一维数组为二维数组
function spArr(arr, size) {
  if (!arr || !Array.isArray(arr) || arr.length == 0) {
    return arr;
  }
  var newArray = [];
  var index = 0;
  while (index < arr.length) {
    newArray.push(arr.slice(index, index += size));
  }
  return newArray;
}

/**
 * 把字符串格式化为数组
 * @param {*} str
 * @param {*} sp
 */
function str2Arr(str) {
  var sp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
  if (str && Array.isArray(str)) {
    return str;
  }
  str = str.replace(/，/g, sp);
  var arr = str.split(sp);
  for (var _i = 0; _i < arr.length; _i++) {
    arr[_i] = arr[_i].trim();
    if (isNumber(arr[_i])) {
      arr[_i] = Number(arr[_i]);
    }
  }
  return arr;
}

/**
 *  校验只要是数字（包含正负整数，0以及正负浮点数）就返回true
 * @param {*} val
 * @returns bool
 */
function isNumber(val) {
  var reg = /^[0-9]+.?[0-9]*$/;
  if (reg.test(val)) {
    return true;
  } else {
    return false;
  }
}

/**
 * 提取对象数组的某个属性数组,如[{'x':1},{'x':2}] 提取 x得到[1,2]
 * @param {*} arr
 * @param {*} key
 * @returns []
 */
function getArrByKey(arr, key) {
  if (!Array.isArray(arr)) {
    return;
  }
  return arr.map(function (item) {
    return item[key];
  });
}

/**
 * 提取对象数组的多个属性数组,
 * 如 [{'x':1,'y':11,'z':111},{'x':2,'y':22,'z':222}]
 * 提取 ['x','y'] 得到[{'x':1,'y':11},{'x':2,'y':22}]
 * @param {*} arr
 * @param {*} keys
 * @returns []
 */
function getArrByKeyMulti(arr) {
  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (!Array.isArray(arr)) {
    return;
  }
  if (!Array.isArray(keys)) {
    return;
  }
  var ret = [];
  for (var k = 0; k < arr.length; k++) {
    var node = {};
    for (var j in keys) {
      node[keys[j]] = arr[k][keys[j]];
    }
    ret.push(node);
  }
  return ret;
}

/**
 * 提取对象数组某个键值等于某值的对象数据
 * @param {*} arr
 * @param {*} key
 * @param {*} val
 * @returns object {}
 */
function getDataByKey(arr, key, val) {
  if (!Array.isArray(arr)) {
    return null;
  }
  for (var k = 0; k < arr.length; k++) {
    if (arr[k][key] == val) {
      return arr[k];
    }
  }
  return null;
}

/**
 * 文本内容格式化处理
 * @param {*} content
 * @param {*} len 截取长度 -1不截取
 */
function fmtText(content) {
  var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  if (!content) {
    return content;
  }
  var str = content.replace(/[\r\n]/g, ''); //去掉回车换行
  if (len > 0) {
    str = str.substr(0, len);
  }
  return str.trim();
}

// 下划线转换驼峰
function toHump(name) {
  name = name.replace(/\_(\w)/g, function (all, letter) {
    return letter.toUpperCase();
  });

  // 首字母大写
  var firstChar = name.charAt(0).toUpperCase();
  return firstChar + name.slice(1);
}

// 驼峰转换下划线
function toLine(name) {
  name = name.replace(/([A-Z])/g, '_$1').toLowerCase();

  //如果首字符为下划线，干掉
  if (name.charAt(0) === '_') {
    return name.slice(1);
  } else {
    return name;
  }
}

// 金额格式化 dot为金额每隔三位用","或" "间隔
function fmtMoneyShow(s) {
  var dot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';
  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '¥';
  if (s === '' || s === null || s === undefined) {
    s = 0;
  }
  s = parseFloat((s + '').replace(/[^\d\.-]/g, '')).toFixed(2) + '';
  var l = s.split('.')[0].split('').reverse();
  var r = s.split('.')[1];
  t = '';
  for (i = 0; i < l.length; i++) {
    t += l[i] + ((i + 1) % 3 == 0 && i + 1 != l.length ? dot : '');
  }
  return prefix + t.split('').reverse().join('') + '.' + r;
}

// 金额格式化 不能超过16位
function fmtMoney(money) {
  money = Number(money);
  if (!money) {
    money = 0;
  }
  money = money.toFixed(2);
  money = Number(money);
  return money;
}

/**
 *简单数组转对象数组
 * @param {*} arr [1,2,3]
 * @param {*} key [x1,x2,x3]
 * @returns [{x1:1,x2:1,x3:1},{x1:2,x2:2,x3:2},{x1:3,x2:3,x3:3}]
 */
function arr2ObjectArr(arr, key1, key2, key3) {
  var ret = [];
  for (var k = 0; k < arr.length; k++) {
    var obj = {};
    if (key1) {
      obj[key1] = arr[k];
    }
    if (key2) {
      obj[key2] = arr[k];
    }
    if (key3) {
      obj[key3] = arr[k];
    }
    ret.push(obj);
  }
  return ret;
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组
 * 用法 arr.sort(compare('age'))
 */
function objArrSortAsc(property) {
  return function (a, b) {
    var value1 = a[property];
    var value2 = b[property];
    if (value1 < value2) return -1;else if (value1 > value2) {
      return 1;
    } else {
      return 0;
    }
  };
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组
 * 用法 arr.sort(compare('age'))
 */
function objArrSortDesc(property) {
  return function (a, b) {
    var value1 = a[property];
    var value2 = b[property];
    if (value1 < value2) return 1;else if (value1 > value2) {
      return -1;
    } else {
      return 0;
    }
  };
}

/**
 * 数组有则减少，无则增加
 * @param {*} arr
 * @param {*} data
 * @param {*} sort 排序方式 asc/desc
 */
function arrAddDel(arr, data) {
  var sort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'asc';
  if (!arr) {
    return arr;
  }
  if (!Array.isArray(arr)) {
    return arr;
  }
  var idx = arr.indexOf(data);
  if (idx > -1) {
    arr.splice(idx, 1);
  } else {
    arr.push(data);
  }
  if (sort == 'asc') {
    return arr.sort();
  } else {
    return arr.reverse();
  }
}

//数据深度拷贝
function deepClone(data) {
  if (data === null || typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean' || typeof data === 'undefined') {
    return data;
  }
  return JSON.parse(JSON.stringify(data));
}
function padLeft(str, len, charStr) {
  if (!str) {
    str = '';
  } else {
    str = str + '';
  }
  return new Array(len - str.length + 1).join(charStr || '') + str;
}
function padRight(str, len, charStr) {
  if (!str) {
    str = '';
  } else {
    str = str + '';
  }
  return str + new Array(len - str.length + 1).join(charStr || '');
}

// 选项表单处理
function getSelectOptions(str) {
  if (!str) return [];else if (str.includes('=')) {
    var arr = str.split(',');
    for (var k = 0; k < arr.length; k++) {
      var node = arr[k].split('=');
      arr[k] = {};
      var labelArr = node[1].split('|');
      arr[k].label = labelArr[0];
      if (labelArr.length > 1) {
        //扩展属性
        arr[k].ext = labelArr[1];
      }
      arr[k].val = node[0];
    }
    return arr;
  } else {
    return str.split(',');
  }
}

// 数组元素交换位置 index1和index2分别是两个数组的索引值
function arraySwap(arr, index1, index2) {
  arr[index1] = arr.splice(index2, 1, arr[index1])[0];
  return arr;
}

// 数组置顶
function arrayTop(arr, idx) {
  var node = arr.splice(idx, 1)[0];
  arr.unshift(node);
  return arr;
}

// 数组置底
function arrayBottom(arr, idx) {
  var node = arr.splice(idx, 1)[0];
  arr.push(node);
  return arr;
}

/**
 * 把某个值/对象按key插到某个对象数组
 * @param {*} arr  目标数组
 * @param {*} key  键
 * @param {*} val  判断值
 * @param {*} obj  插入对象{}
 */
function insertObjArrByKey(arr, key, val, obj) {
  var _newObj;
  if (!arr) {
    return arr;
  }
  for (var k = 0; k < arr.length; k++) {
    if (arr[k][key] == val) {
      // 发现存在
      arr[k].list.push(obj);
      return arr;
    }
  }

  // 不存在
  var newObj = (_newObj = {}, _defineProperty(_newObj, key, val), _defineProperty(_newObj, "list", [obj]), _newObj);
  arr.push(newObj);
  return arr;
}

/**
 * 从对象数组中， 根据某个键值 获取满足的对象
 * @param {*} arr
 * @param {*} key
 * @param {*} val
 */
function getValFromArr(arr) {
  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'val';
  var val = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  if (!Array.isArray(arr)) {
    return null;
  }
  for (var k = 0; k < arr.length; k++) {
    if (arr[k][key] == val) {
      return arr[k];
    }
  }
  return null;
}
module.exports = (_module$exports = {
  arrayTop: arrayTop,
  arraySwap: arraySwap,
  arrayBottom: arrayBottom,
  fmtTag: fmtTag,
  getValFromArr: getValFromArr,
  getArrByKey: getArrByKey,
  getArrByKeyMulti: getArrByKeyMulti,
  //提取对象数组的多个属性数组
  spArr: spArr,
  //拆分一维数组为二维
  getDataByKey: getDataByKey,
  str2Arr: str2Arr,
  arr2ObjectArr: arr2ObjectArr,
  insertObjArrByKey: insertObjArrByKey,
  arrAddDel: arrAddDel,
  objArrSortAsc: objArrSortAsc,
  objArrSortDesc: objArrSortDesc
}, _defineProperty(_module$exports, "arrAddDel", arrAddDel), _defineProperty(_module$exports, "isNumber", isNumber), _defineProperty(_module$exports, "padLeft", padLeft), _defineProperty(_module$exports, "padRight", padRight), _defineProperty(_module$exports, "genRandomString", genRandomString), _defineProperty(_module$exports, "genRandomAlpha", genRandomAlpha), _defineProperty(_module$exports, "genRandomNum", genRandomNum), _defineProperty(_module$exports, "fmtText", fmtText), _defineProperty(_module$exports, "fmtMoneyShow", fmtMoneyShow), _defineProperty(_module$exports, "fmtMoney", fmtMoney), _defineProperty(_module$exports, "toHump", toHump), _defineProperty(_module$exports, "toLine", toLine), _defineProperty(_module$exports, "getSelectOptions", getSelectOptions), _defineProperty(_module$exports, "deepClone", deepClone), _module$exports);

/***/ }),

/***/ 7:
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0) {
        ;
      }
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 70:
/*!*******************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/constants.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Notes: 通用常量
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

module.exports = {
  CACHE_TOKEN: 'CACHE_TOKEN',
  // 登录
  CACHE_TOKEN_EXPIRE: 86400,
  //登录有效时间 秒

  CACHE_ADMIN: 'ADMIN_TOKEN',
  // 管理员登录
  ADMIN_TOKEN_EXPIRE: 7200,
  //管理员过期时间2小时有效 秒

  CACHE_WORK: 'WORK_TOKEN',
  // 服务者登录
  WORK_TOKEN_EXPIRE: 36000 //服务者过期时间  秒
};

/***/ }),

/***/ 71:
/*!********************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/content_check_helper.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uniCloud, wx, uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
/**
 * Notes: UGC内容校验
 * Ver : CCMiniCloud Framework 2.4.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var cloudHelper = __webpack_require__(/*! ./cloud_helper.js */ 68);
var pageHelper = __webpack_require__(/*! ./page_helper.js */ 64);
var setting = __webpack_require__(/*! ../setting/setting.js */ 42);

/**
 * 图片类型校验
 * @param {*} fileName
 * @param {*} type
 */
function imgTypeCheck(path) {
  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['jpg', 'jpeg', 'png', 'JPG', 'JPEG', 'PNG'];
  var fmt = path.split('.')[path.split('.').length - 1];
  if (type.indexOf(fmt) > -1) {
    return true;
  } else {
    return false;
  }
}

/**
 * 图片大小校验
 * @param {*} size
 * @param {*} maxSize
 */
function imgSizeCheck(size, maxSize) {
  return size < maxSize;
}
function imgCheckCloud(_x, _x2) {
  return _imgCheckCloud.apply(this, arguments);
}
/**
 * 图像校验
 * @param {*} imgData
 */
function _imgCheckCloud() {
  _imgCheckCloud = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, opt) {
    var result;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return uniCloud.callFunction({
              name: 'cloud',
              data: {
                route: 'check/img',
                token: '',
                params: {
                  img: wx.cloud.CDN({
                    type: 'filePath',
                    filePath: path
                  })
                }
              },
              success: function success(res) {
                console.log(res);
                console.log('succ');
                return true;
              },
              fail: function fail(res) {
                console.log(res);
                return false;
              },
              complete: function complete(res) {}
            });
          case 2:
            result = _context.sent;
            return _context.abrupt("return", result);
          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _imgCheckCloud.apply(this, arguments);
}
function imgCheck(_x3) {
  return _imgCheck.apply(this, arguments);
}
function _imgCheck() {
  _imgCheck = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(imgData) {
    var result;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return uni.serviceMarket.invokeService({
              service: 'wxee446d7507c68b11',
              api: 'imgSecCheck',
              data: {
                Action: 'ImageModeration',
                Scenes: ['PORN', 'POLITICS', 'TERRORISM'],
                ImageUrl: new uni.serviceMarket.CDN({
                  type: 'filePath',
                  filePath: imgData
                }),
                ImageBase64: '',
                Config: '',
                Extra: ''
              }
            }).then(function (res) {
              if (res && res.data && res.data.Response && res.data.Response.PornResult && res.data.Response.PornResult.Suggestion === 'PASS' && res.data.Response.PoliticsResult && res.data.Response.PoliticsResult.Suggestion === 'PASS' && res.data.Response.TerrorismResult && res.data.Response.TerrorismResult.Suggestion === 'PASS') {
                return true;
              } else {
                return false;
              }
            }).catch(function (err) {
              console.log(err);
              return false;
            });
          case 2:
            result = _context2.sent;
            return _context2.abrupt("return", result);
          case 4:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _imgCheck.apply(this, arguments);
}
module.exports = {
  imgCheck: imgCheck,
  imgCheckCloud: imgCheckCloud,
  imgTypeCheck: imgTypeCheck,
  imgSizeCheck: imgSizeCheck
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js */ 27)["uniCloud"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 72:
/*!***********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/helper/time_helper.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Notes: 时间相关函数
 * Ver : CCMiniCloud Framework 2.0.14 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-09-05 04:00:00
 */

var util = __webpack_require__(/*! ./helper.js */ 65);

/** 日期简化，去掉多余的前缀0 */
function simpleDate(date) {
  var arr = date.split('-');
  if (arr.length < 3) {
    return date;
  }
  var month = arr[1];
  if (month.indexOf('0') == 0) {
    month = month.replace('0', '');
  }
  var day = arr[2];
  if (day.indexOf('0') == 0) {
    day = day.replace('0', '');
  }
  return arr[0] + '-' + month + '-' + day;
}

/** 时间格式化为年月日点分 */
function fmtDateCHN(date) {
  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Y-M-D';
  if (!date) {
    return '';
  }
  if (fmt == 'hh:mm' && date.includes(':')) {
    if (date.includes(' ')) {
      date = date.split(' ')[1];
    }
    var arr = date.split(':');
    return Number(arr[0]) + '点' + arr[1] + '分';
  } else if (fmt == 'Y-M-D hh:mm') {
    var _arr = date.split(' ');
    if (_arr.length != 2) {
      return date;
    }
    return fmtDateCHN(_arr[0], 'Y-M-D') + fmtDateCHN(_arr[1], 'hh:mm');
  } else if (fmt == 'M-D hh:mm') {
    var _arr2 = date.split(' ');
    if (_arr2.length != 2) {
      return date;
    }
    return fmtDateCHN(_arr2[0], 'M-D') + ' ' + fmtDateCHN(_arr2[1], 'hh:mm');
  } else {
    if (date.includes(' ')) {
      date = date.split(' ')[0];
    }
    var _arr3 = date.split('-');
    if (fmt == 'Y-M')
      //年月
      return _arr3[0] + '年' + Number(_arr3[1]) + '月';else if (fmt == 'M-D')
      //月日
      return _arr3[1] + '月' + Number(_arr3[2]) + '日';else if (fmt == 'Y') {
      //年
      return _arr3[0] + '年';
    } else {
      return _arr3[0] + '年' + Number(_arr3[1]) + '月' + Number(_arr3[2]) + '日';
    }
  }
}

/**
 * 毫秒时间戳转时间格式
 * @param {*} unixtime  毫秒
 * @param {*} format  Y-M-D h:m:s
 * @param {*} diff  时区差异 毫秒
 */
function timestamp2Time(unixtime) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Y-M-D h:m:s';
  var diff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
  var returnArr = [];
  var date = new Date(unixtime + diff);
  returnArr.push(date.getFullYear());
  returnArr.push(formatNumber(date.getMonth() + 1));
  returnArr.push(formatNumber(date.getDate()));
  returnArr.push(formatNumber(date.getHours()));
  returnArr.push(formatNumber(date.getMinutes()));
  returnArr.push(formatNumber(date.getSeconds()));
  for (var i in returnArr) {
    format = format.replace(formateArr[i], returnArr[i]);
  }
  return format;
}
function timestame2Ago(dateTimeStamp) {
  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Y-M-D';
  var diff = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  //dateTimeStamp是一个时间毫秒，注意时间戳是秒的形式，在这个毫秒的基础上除以1000，就是十位数的时间戳。13位数的都是时间毫秒。
  var minute = 60000; //把分，时，天，周，半个月，一个月用毫秒表示
  var hour = minute * 60;
  var day = hour * 24;
  var week = day * 7;
  var month = day * 30;
  var now = new Date().getTime(); //获取当前时间毫秒

  var diffValue = now - dateTimeStamp; //时间差

  if (diffValue < 0) {
    return;
  }
  var minC = diffValue / minute; //计算时间差的分，时，天，周，月
  var hourC = diffValue / hour;
  var dayC = diffValue / day;
  var result = '';
  var weekC = diffValue / week;
  var monthC = diffValue / month;
  if (monthC >= 1 && monthC <= 3) {
    result = ' ' + parseInt(monthC) + '月前';
  } else if (weekC >= 1 && weekC <= 3) {
    result = ' ' + parseInt(weekC) + '周前';
  } else if (dayC >= 1 && dayC <= 6) {
    result = ' ' + parseInt(dayC) + '天前';
  } else if (hourC >= 1 && hourC <= 23) {
    result = ' ' + parseInt(hourC) + '小时前';
  } else if (minC >= 1 && minC <= 59) {
    result = ' ' + parseInt(minC) + '分钟前';
  } else if (diffValue >= 0 && diffValue <= minute) {
    result = '刚刚';
  } else {
    result = timestamp2Time(dateTimeStamp, fmt, diff);
  }
  return result;
}
function formatNumber(n) {
  n = n.toString();
  return n[1] ? n : '0' + n;
}

/**
 * 时间转时间戳
 * @param {*} date  支持 Y-M-D h:m:s / Y-M-D
 */
function time2Timestamp(date) {
  if (date.length < 10) {
    var arr = date.split('-');
    if (arr[1].length == 1) {
      arr[1] = '0' + arr[1];
    }
    if (arr[2].length == 1) {
      arr[2] = '0' + arr[2];
    }
    date = arr[0] + '-' + arr[1] + '-' + arr[2];
  }
  if (date.length == 10) {
    date = date + ' 00:00:00';
  }
  var d = new Date(date.replace(/-/g, '/'));
  return d.getTime();
}

/**
 *  获取当前时间戳/时间Y-M-D h:m:s
 * @param {*} 时间格式 Y-M-D h:m:s
 * @param {int} 时间步长 (秒)
 */
function time(fmt) {
  var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var t = 0;
  if (util.isDefined(fmt)) {
    var _t = new Date().getTime() + step * 1000;
    return timestamp2Time(_t, fmt);
  }
  return new Date().getTime() + t * 1000;
}

// 获取某天0点
function getDayFirstTimestamp(timestamp) {
  if (!timestamp) {
    timestamp = time();
  }
  return time2Timestamp(timestamp2Time(timestamp, 'Y-M-D'));
}

/**
 * 根据出生日期计算年龄周岁 传参格式为1996-06-08
 * @param {*} birth
 */
function getAge(birth) {
  var isMonth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var returnAge = '';
  var mouthAge = '';
  var arr = birth.split('-');
  var birthYear = arr[0];
  var birthMonth = arr[1];
  var birthDay = arr[2];
  var d = new Date();
  var nowYear = d.getFullYear();
  var nowMonth = d.getMonth() + 1;
  var nowDay = d.getDate();
  if (nowYear == birthYear) {
    // returnAge = 0; //同年 则为0岁
    var monthDiff = nowMonth - birthMonth; //月之差
    if (monthDiff < 0) {} else {
      mouthAge = monthDiff + '个月';
    }
  } else {
    var ageDiff = nowYear - birthYear; //年之差
    if (ageDiff > 0) {
      if (nowMonth == birthMonth) {
        var dayDiff = nowDay - birthDay; //日之差
        if (dayDiff < 0) {
          returnAge = ageDiff - 1 + '岁';
        } else {
          returnAge = ageDiff + '岁';
        }
      } else {
        var monthDiff = nowMonth - birthMonth; //月之差
        if (monthDiff < 0) {
          returnAge = ageDiff - 1 + '岁';
        } else {
          mouthAge = monthDiff + '个月';
          returnAge = ageDiff + '岁';
        }
      }
    } else {
      returnAge = -1; //返回-1 表示出生日期输入错误 晚于今天
    }
  }

  if (isMonth) {
    return returnAge + mouthAge; //返回周岁年龄+月份
  } else {
    return returnAge;
  }
}

/**
 * 日期计算周几
 * @param {*} day  日期为输入日期，格式为 2013-03-10
 */
function week(day) {
  var arys1 = new Array();
  arys1 = day.split('-');
  var ssdate = new Date(arys1[0], parseInt(arys1[1] - 1), arys1[2]);
  var week1 = String(ssdate.getDay()).replace('0', '日').replace('1', '一').replace('2', '二').replace('3', '三').replace('4', '四').replace('5', '五').replace('6', '六'); //就是你要的星期几
  return '周' + week1; //就是你要的星期几
}

/** 获取某天所在某月第一天时间戳 */
function getMonthFirstTimestamp(timestamp) {
  var inDate = new Date(timestamp);
  var year = inDate.getFullYear();
  var month = inDate.getMonth();
  return new Date(year, month, 1).getTime();
}

/** 获取某天所在某月最后一天时间戳 */
function getMonthLastTimestamp(timestamp) {
  var inDate = new Date(timestamp);
  var year = inDate.getFullYear();
  var month = inDate.getMonth();
  return new Date(year, month + 1, 1).getTime() - 1;
}

// 取得分钟时间戳
function getNowMinTimestamp() {
  var min = time('Y-M-D h:m') + ':00';
  var timestamp = time2Timestamp(min);
  return {
    min: min,
    timestamp: timestamp
  };
}

// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getFirstOfWeek(date) {
  var now = new Date(date);
  var nowTime = now.getTime();
  var day = now.getDay();
  if (day == 0) {
    day = 7;
  }
  var oneDayTime = 86400 * 1000;
  var mondayTime = nowTime - (day - 1) * oneDayTime;
  return timestamp2Time(mondayTime, 'Y-M-D');
}

// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getLastOfWeek(date) {
  var now = new Date(date);
  var nowTime = now.getTime();
  var day = now.getDay();
  if (day == 0) {
    day = 7;
  }
  var oneDayTime = 86400 * 1000;
  var sundayTime = nowTime + (7 - day) * oneDayTime;
  return timestamp2Time(sundayTime, 'Y-M-D');
}

// 获取当前日期所在月第一天 输入和返回格式=yyyy-mm-dd
function getFirstOfMonth(date) {
  var arr = date.split('-');
  return arr[0] + '-' + arr[1] + '-01';
}

// 获取当前日期所在月最后一天 输入和返回格式=yyyy-mm-dd
function getLastOfMonth(date) {
  var now = new Date(date);
  var y = now.getFullYear();
  var m = now.getMonth();
  var lastDay = new Date(y, m + 1, 0).getTime();
  return timestamp2Time(lastDay, 'Y-M-D');
}

/**
 * 取倒计时（天时分秒） 支持时间戳或者Y-M-D/Y-M-D h:m:s
 * @param {*} datetimeTo
 * @param {*} flag 1=正 -1=负
 */
function getTimeLeft(datetimeTo) {
  var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var time1 = datetimeTo;
  if (String(datetimeTo).includes('-')) {
    datetimeTo = String(datetimeTo);
    if (!datetimeTo.includes(':')) {
      datetimeTo += ' 00:00:00';
    }
    time1 = new Date(datetimeTo).getTime();
  }
  var time2 = new Date().getTime();
  var mss = time1 - time2;

  // 将时间差（毫秒）格式为：天时分秒
  var days = parseInt(mss / (3600000 * 24));
  var hours = parseInt(mss % (3600000 * 24) / 3600000);
  var minutes = parseInt(mss % 3600000 / 60000);
  var seconds = parseInt(mss % 60000 / 1000);
  return [flag * days, flag * hours, flag * minutes, flag * seconds];
}
module.exports = {
  fmtDateCHN: fmtDateCHN,
  simpleDate: simpleDate,
  getTimeLeft: getTimeLeft,
  getNowMinTimestamp: getNowMinTimestamp,
  getMonthFirstTimestamp: getMonthFirstTimestamp,
  getMonthLastTimestamp: getMonthLastTimestamp,
  getDayFirstTimestamp: getDayFirstTimestamp,
  timestamp2Time: timestamp2Time,
  timestame2Ago: timestame2Ago,
  time2Timestamp: time2Timestamp,
  time: time,
  getAge: getAge,
  week: week,
  //星期

  getFirstOfWeek: getFirstOfWeek,
  getLastOfWeek: getLastOfWeek,
  getFirstOfMonth: getFirstOfMonth,
  getLastOfMonth: getLastOfMonth
};

/***/ }),

/***/ 73:
/*!***************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/biz/project_biz.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 项目通用业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2022-05-22 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ../../../comm/biz/base_biz.js */ 74);
var projectSetting = __webpack_require__(/*! ../public/project_setting.js */ 75);
var PubilcBiz = __webpack_require__(/*! ../../../comm/biz/public_biz.js */ 76);
var PassportBiz = __webpack_require__(/*! ../../../comm/biz/passport_biz.js */ 77);
var ProjectBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(ProjectBiz, _BaseBiz);
  var _super = _createSuper(ProjectBiz);
  function ProjectBiz() {
    _classCallCheck(this, ProjectBiz);
    return _super.apply(this, arguments);
  }
  _createClass(ProjectBiz, null, [{
    key: "initPage",
    value:
    /**
     * 页面初始化
     * @param {*} that
     */
    function initPage(that) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$isSetNavColor = _ref.isSetNavColor,
        isSetNavColor = _ref$isSetNavColor === void 0 ? true : _ref$isSetNavColor;
      var skin = {};
      skin.NAV_BG = projectSetting.NAV_BG;
      skin.NAV_COLOR = projectSetting.NAV_COLOR;
      skin.PROJECT_COLOR = projectSetting.PROJECT_COLOR;
      PubilcBiz.initPageBase(that, {
        skin: skin,
        isSetNavColor: isSetNavColor
      });
    }
  }]);
  return ProjectBiz;
}(BaseBiz);
module.exports = ProjectBiz;

/***/ }),

/***/ 74:
/*!**********************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/base_biz.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
/**
 * Notes: 基础模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var BaseBiz = /*#__PURE__*/function () {
  "use strict";

  function BaseBiz() {
    _classCallCheck(this, BaseBiz);
  }
  _createClass(BaseBiz, null, [{
    key: "getCateName",
    value: function getCateName(cateId, cateList) {
      for (var k = 0; k < cateList.length; k++) {
        if (cateList[k].id == cateId) {
          return cateList[k].title;
        }
      }
      return '';
    }
  }, {
    key: "getCateList",
    value: function getCateList(cateList) {
      var arr = [];
      for (var k = 0; k < cateList.length; k++) {
        arr.push({
          label: cateList[k].title,
          type: 'cateId',
          val: cateList[k].id,
          //for options form
          value: cateList[k].id //for list menu
        });
      }

      return arr;
    }
  }, {
    key: "setCateTitle",
    value: function setCateTitle(cateList) {
      var cateId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      var curPage = pageHelper.getPrevPage(1);
      if (!curPage) {
        return;
      }
      if (!cateId) {
        if (curPage.options && curPage.options.id) {
          cateId = curPage.options.id;
        }
      }
      for (var k = 0; k < cateList.length; k++) {
        if (cateList[k].id == cateId) {
          uni.setNavigationBarTitle({
            title: cateList[k].title
          });
          curPage.setData({
            listMode: cateList[k].style || ''
          });
          return;
        }
      }
    }
  }]);
  return BaseBiz;
}();
module.exports = BaseBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 75:
/*!**********************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/projects/worktrain/public/project_setting.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  //worktrain
  PROJECT_COLOR: '#2B72D4',
  NAV_COLOR: '#ffffff',
  NAV_BG: '#2B72D4',
  // setup
  SETUP_CONTENT_ITEMS: [{
    title: '关于我们',
    key: 'SETUP_CONTENT_ABOUT'
  }],
  // 用户
  USER_REG_CHECK: false,
  USER_FIELDS: [],
  NEWS_NAME: '通知公告',
  NEWS_CATE: [{
    id: 1,
    title: '通知公告',
    style: 'leftpic'
  }],
  NEWS_FIELDS: [],
  MEET_NAME: '老师&预约',
  MEET_CATE: [{
    id: 1,
    title: '绘画书法',
    style: 'leftbig1'
  }, {
    id: 2,
    title: '声乐器乐',
    style: 'leftbig1'
  }, {
    id: 3,
    title: '舞蹈',
    style: 'leftbig1'
  }, {
    id: 4,
    title: '播音主持',
    style: 'leftbig1'
  }, {
    id: 5,
    title: '游泳',
    style: 'leftbig1'
  }, {
    id: 6,
    title: '足球篮球',
    style: 'leftbig1'
  }, {
    id: 7,
    title: '跆拳道武术',
    style: 'leftbig1'
  }, {
    id: 8,
    title: '健身形体',
    style: 'leftbig1'
  }, {
    id: 9,
    title: '乒羽球',
    style: 'leftbig1'
  }, {
    id: 10,
    title: '轮滑街舞',
    style: 'leftbig1'
  }, {
    id: 11,
    title: '棋类',
    style: 'leftbig1'
  }, {
    id: 12,
    title: '英语',
    style: 'leftbig1'
  }],
  MEET_CAN_NULL_TIME: false,
  // 是否允许有无时段的日期保存和展示
  MEET_FIELDS: [{
    mark: 'level',
    title: '星级',
    type: 'select',
    selectOptions: [{
      label: '1星',
      val: '1'
    }, {
      label: '2星',
      val: '2'
    }, {
      label: '3星',
      val: '3'
    }, {
      label: '4星',
      val: '4'
    }, {
      label: '5星',
      val: '5'
    }],
    def: '1',
    must: true
  }, {
    mark: 'tag',
    title: '特点标签',
    type: 'rows',
    ext: {
      titleName: '标签',
      maxCnt: 5,
      minCnt: 0
    },
    must: false
  }, {
    mark: 'content',
    title: '详情',
    type: 'content',
    must: true
  }, {
    mark: 'cover',
    title: '封面图片',
    type: 'image',
    min: 1,
    max: 1,
    must: true
  }],
  MEET_JOIN_FIELDS: [{
    mark: 'name',
    type: 'text',
    title: '姓名',
    must: true,
    min: 2,
    max: 30,
    edit: false
  }, {
    mark: 'phone',
    type: 'text',
    len: 11,
    title: '手机号',
    must: true,
    edit: false
  }],
  // 时间默认设置
  MEET_NEW_NODE: {
    mark: 'mark-no',
    start: '10:00',
    end: '10:59',
    limit: 5,
    isLimit: true,
    status: 1,
    stat: {
      succCnt: 0,
      cancelCnt: 0,
      adminCancelCnt: 0
    }
  },
  MEET_NEW_NODE_DAY: [{
    mark: 'mark-am',
    start: '09:00',
    end: '11:59',
    limit: 5,
    isLimit: true,
    status: 1,
    stat: {
      succCnt: 0,
      cancelCnt: 0,
      adminCancelCnt: 0
    }
  }, {
    mark: 'mark-pm',
    start: '14:00',
    end: '17:59',
    limit: 10,
    isLimit: true,
    status: 1,
    stat: {
      succCnt: 0,
      cancelCnt: 0,
      adminCancelCnt: 0
    }
  }]
};

/***/ }),

/***/ 76:
/*!************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/public_biz.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 通用业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2022-05-22 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var setting = __webpack_require__(/*! ../../setting/setting.js */ 42);
var cacheHelper = __webpack_require__(/*! ../../helper/cache_helper.js */ 66);
var dataHelper = __webpack_require__(/*! ../../helper/data_helper.js */ 69);
var PublicBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(PublicBiz, _BaseBiz);
  var _super = _createSuper(PublicBiz);
  function PublicBiz() {
    _classCallCheck(this, PublicBiz);
    return _super.apply(this, arguments);
  }
  _createClass(PublicBiz, null, [{
    key: "initPageBase",
    value:
    /**
     * 页面初始化
     * @param {*} skin
     * @param {*} that
     */
    function initPageBase(that, _ref) {
      var skin = _ref.skin,
        _ref$isSetNavColor = _ref.isSetNavColor,
        isSetNavColor = _ref$isSetNavColor === void 0 ? true : _ref$isSetNavColor;
      if (skin) {
        skin.IS_SUB = setting.IS_SUB;
        if (setting.IS_SUB) {
          uni.hideHomeButton();

          // 顶部
          if (isSetNavColor) {
            uni.setNavigationBarColor({
              backgroundColor: skin.NAV_BG,
              frontColor: skin.NAV_COLOR
            });
          }
        }
        that.setData({
          skin: skin
        });
      }
    }

    // 从富文本提取简介
  }, {
    key: "getRichEditorDesc",
    value: function getRichEditorDesc(desc, content) {
      if (desc) {
        return dataHelper.fmtText(desc, 100);
      }
      if (!Array.isArray(content)) {
        return desc;
      }
      for (var k = 0; k < content.length; k++) {
        if (content[k].type == 'text') {
          return dataHelper.fmtText(content[k].val, 100);
        }
      }
      return desc;
    }
  }, {
    key: "isCacheList",
    value: function isCacheList(key) {
      key = key.toUpperCase();
      if (setting.CACHE_IS_LIST) {
        return cacheHelper.get(key + '_LIST');
      } else {
        return false;
      }
    }
  }, {
    key: "removeCacheList",
    value: function removeCacheList(key) {
      key = key.toUpperCase();
      if (setting.CACHE_IS_LIST) {
        cacheHelper.remove(key + '_LIST');
      }
    }
  }, {
    key: "setCacheList",
    value: function setCacheList(key) {
      var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : setting.CACHE_LIST_TIME;
      key = key.toUpperCase();
      if (setting.CACHE_IS_LIST) {
        cacheHelper.set(key + '_LIST', 'TRUE', time);
      }
    }
  }]);
  return PublicBiz;
}(BaseBiz);
module.exports = PublicBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 77:
/*!**************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/biz/passport_biz.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ 32);
var _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 33);
var _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 34);
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * Notes: 注册登录模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux0730 (wechat)
 * Date: 2020-11-14 07:48:00
 */

var BaseBiz = __webpack_require__(/*! ./base_biz.js */ 74);
var cacheHelper = __webpack_require__(/*! ../../helper/cache_helper.js */ 66);
var cloudHelper = __webpack_require__(/*! ../../helper/cloud_helper.js */ 68);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var helper = __webpack_require__(/*! ../../helper/helper.js */ 65);
var constants = __webpack_require__(/*! ../constants.js */ 70);
var PassportBiz = /*#__PURE__*/function (_BaseBiz) {
  "use strict";

  _inherits(PassportBiz, _BaseBiz);
  var _super = _createSuper(PassportBiz);
  function PassportBiz() {
    _classCallCheck(this, PassportBiz);
    return _super.apply(this, arguments);
  }
  _createClass(PassportBiz, null, [{
    key: "loginSilence",
    value: // 静默登录(有登录状态则不登录)
    function () {
      var _loginSilence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(that) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return PassportBiz.loginCheck(false, 'slience', 'bar', that);
              case 2:
                return _context.abrupt("return", _context.sent);
              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      function loginSilence(_x) {
        return _loginSilence.apply(this, arguments);
      }
      return loginSilence;
    }() // 强制静默登录(有不论是否有登录状态)
  }, {
    key: "loginSilenceMust",
    value: function () {
      var _loginSilenceMust = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(that) {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return PassportBiz.loginCheck(false, 'must', 'bar', that);
              case 2:
                return _context2.abrupt("return", _context2.sent);
              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
      function loginSilenceMust(_x2) {
        return _loginSilenceMust.apply(this, arguments);
      }
      return loginSilenceMust;
    }() // 必须登录 可以取消(窗口形式)
  }, {
    key: "loginMustCancelWin",
    value: function () {
      var _loginMustCancelWin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(that) {
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return PassportBiz.loginCheck(true, 'cancel', '', that);
              case 2:
                return _context3.abrupt("return", _context3.sent);
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
      function loginMustCancelWin(_x3) {
        return _loginMustCancelWin.apply(this, arguments);
      }
      return loginMustCancelWin;
    }() // 必须登录 只能强制注册或者回上页(窗口形式)
  }, {
    key: "loginMustBackWin",
    value: function () {
      var _loginMustBackWin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(that) {
        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return PassportBiz.loginCheck(true, 'back', '', that);
              case 2:
                return _context4.abrupt("return", _context4.sent);
              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));
      function loginMustBackWin(_x4) {
        return _loginMustBackWin.apply(this, arguments);
      }
      return loginMustBackWin;
    }() // 获取token
  }, {
    key: "getToken",
    value: function getToken() {
      var token = cacheHelper.get(constants.CACHE_TOKEN);
      return token || null;
    }

    // 设置token
  }, {
    key: "setToken",
    value: function setToken(token) {
      if (!token) {
        return;
      }
      cacheHelper.set(constants.CACHE_TOKEN, token, constants.CACHE_TOKEN_EXPIRE);
    }

    //  获取user id
  }, {
    key: "getUserId",
    value: function getUserId() {
      var token = cacheHelper.get(constants.CACHE_TOKEN);
      if (!token) {
        return '';
      }
      return token.id || '';
    }

    // 获取user name
  }, {
    key: "getUserName",
    value: function getUserName() {
      var token = cacheHelper.get(constants.CACHE_TOKEN);
      if (!token) {
        return '';
      }
      return token.name || '';
    }
  }, {
    key: "getStatus",
    value: function getStatus() {
      var token = cacheHelper.get(constants.CACHE_TOKEN);
      if (!token) {
        return -1;
      }
      return token.status || -1;
    }

    // 是否登录
  }, {
    key: "isLogin",
    value: function isLogin() {
      var id = PassportBiz.getUserId();
      return id.length > 0 ? true : false;
    }
  }, {
    key: "loginStatusHandler",
    value: function loginStatusHandler(method, status) {
      var content = '';
      if (status == 0) content = '您的注册正在审核中，暂时无法使用此功能！';else if (status == 8) content = '您的注册审核未通过，暂时无法使用此功能；请在个人中心修改资料，再次提交审核！';else if (status == 9) {
        content = '您的账号已经禁用, 无法使用此功能！';
      }
      if (method == 'cancel') {
        uni.showModal({
          title: '温馨提示',
          content: content,
          confirmText: '取消',
          showCancel: false
        });
      } else if (method == 'back') {
        uni.showModal({
          title: '温馨提示',
          content: content,
          confirmText: '返回',
          showCancel: false,
          success: function success(result) {
            uni.navigateBack();
          }
        });
      }
      return false;
    }

    // 登录判断及处理
  }, {
    key: "loginCheck",
    value: function () {
      var _loginCheck = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
        var mustLogin,
          method,
          title,
          that,
          token,
          opt,
          res,
          _args5 = arguments;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                mustLogin = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;
                method = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 'back';
                title = _args5.length > 2 && _args5[2] !== undefined ? _args5[2] : '';
                that = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : null;
                token = cacheHelper.get(constants.CACHE_TOKEN);
                if (!(token && method != 'must')) {
                  _context5.next = 10;
                  break;
                }
                if (that) {
                  that.setData({
                    isLogin: true
                  });
                }
                return _context5.abrupt("return", true);
              case 10:
                if (that) {
                  that.setData({
                    isLogin: false
                  });
                }
              case 11:
                opt = {
                  title: title || '登录中'
                };
                _context5.next = 14;
                return cloudHelper.callCloudSumbit('passport/login', {}, opt).then(function (result) {
                  PassportBiz.clearToken();
                  if (result && helper.isDefined(result.data.token) && result.data.token && result.data.token.status == 1) {
                    PassportBiz.setToken(result.data.token);
                    if (that) {
                      that.setData({
                        isLogin: true
                      });
                    }
                    return true;
                  } else if (mustLogin && result && helper.isDefined(result.data.token) && result.data.token && (result.data.token.status == 0 || result.data.token.status == 8 || result.data.token.status == 9)) {
                    var status = result.data.token.status;
                    return PassportBiz.loginStatusHandler(method, status);
                  } else if (mustLogin && method == 'cancel') {
                    uni.showModal({
                      title: '温馨提示',
                      content: '此功能仅限注册用户',
                      confirmText: '马上注册',
                      cancelText: '取消',
                      success: function success(result) {
                        if (result.confirm) {
                          var url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg') + '?retUrl=back';
                          uni.navigateTo({
                            url: url
                          });
                        } else if (result.cancel) {}
                      }
                    });
                    return false;
                  } else if (mustLogin && method == 'back') {
                    uni.showModal({
                      title: '温馨提示',
                      content: '此功能仅限注册用户',
                      confirmText: '马上注册',
                      cancelText: '返回',
                      success: function success(result) {
                        if (result.confirm) {
                          var retUrl = encodeURIComponent(pageHelper.getCurrentPageUrlWithArgs());
                          var url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg') + '?retUrl=' + retUrl;
                          uni.redirectTo({
                            url: url
                          });
                        } else if (result.cancel) {
                          var len = getCurrentPages().length;
                          if (len == 1) {
                            var _url = pageHelper.fmtURLByPID('/pages/default/index/default_index');
                            uni.reLaunch({
                              url: _url
                            });
                          } else {
                            uni.navigateBack();
                          }
                        }
                      }
                    });
                    return false;
                  } else if (mustLogin && method == 'back') {
                    uni.showModal({
                      title: '温馨提示',
                      content: '此功能仅限注册用户',
                      confirmText: '马上注册',
                      cancelText: '返回',
                      success: function success(result) {
                        if (result.confirm) {
                          var url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg');
                          uni.reLaunch({
                            url: url
                          });
                        } else if (result.cancel) {
                          uni.navigateBack();
                        }
                      }
                    });
                    return false;
                  }
                }).catch(function (err) {
                  console.log(err);
                  PassportBiz.clearToken();
                  return false;
                });
              case 14:
                res = _context5.sent;
                return _context5.abrupt("return", res);
              case 16:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));
      function loginCheck() {
        return _loginCheck.apply(this, arguments);
      }
      return loginCheck;
    }() // 清除登录缓存
  }, {
    key: "clearToken",
    value: function clearToken() {
      cacheHelper.remove(constants.CACHE_TOKEN);
    }

    // 手机号码
  }, {
    key: "getPhone",
    value: function () {
      var _getPhone = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e, that) {
        var cloudID, params, opt;
        return _regeneratorRuntime.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!(e.detail.errMsg == 'getPhoneNumber:ok')) {
                  _context6.next = 8;
                  break;
                }
                cloudID = e.detail.cloudID;
                params = {
                  cloudID: cloudID
                };
                opt = {
                  title: '手机验证中'
                };
                _context6.next = 6;
                return cloudHelper.callCloudSumbit('passport/phone', params, opt).then(function (res) {
                  var phone = res.data;
                  if (!phone || phone.length < 11) {
                    uni.showToast({
                      title: '手机号码获取失败，请重新填写手机号码',
                      icon: 'none',
                      duration: 2000
                    });
                  } else {
                    that.setData({
                      formMobile: phone
                    });
                  }
                });
              case 6:
                _context6.next = 9;
                break;
              case 8:
                uni.showToast({
                  title: '手机号码获取失败，请重新填写手机号码',
                  icon: 'none'
                });
              case 9:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));
      function getPhone(_x5, _x6) {
        return _getPhone.apply(this, arguments);
      }
      return getPhone;
    }()
  }]);
  return PassportBiz;
}(BaseBiz);
/** 表单校验    */
PassportBiz.CHECK_FORM = {
  name: 'formName|must|string|min:1|max:30|name=昵称',
  mobile: 'formMobile|must|len:11|name=手机',
  forms: 'formForms|array'
};
module.exports = PassportBiz;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 786:
/*!********************************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/cmpts/public/poster/wxa-plugin-canvas/poster/poster.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var defaultOptions = {
  selector: '#poster'
};
function Poster() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var that = arguments.length > 1 ? arguments[1] : undefined;
  options = _objectSpread(_objectSpread({}, defaultOptions), options);
  var pages = getCurrentPages();
  var ctx = pages[pages.length - 1];
  if (that) {
    ctx = that;
  }
  var poster = ctx.zpSelectComponent(options.selector);
  delete options.selector;
  return poster;
}
Poster.create = function () {
  var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var that = arguments.length > 1 ? arguments[1] : undefined;
  var poster = Poster({}, that);
  if (!poster) {
    console.error('请设置组件的id="poster"!!!');
  } else {
    return Poster({}, that).onCreate(reset);
  }
};
var _default = Poster;
exports.default = _default;

/***/ }),

/***/ 8:
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 817:
/*!*******************************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/components/region-picker/region-picker.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var zones_tree = [{
  "id": "1",
  "name": "北京市",
  "code": "110000",
  "children": [{
    "id": "1",
    "name": "市辖区",
    "code": "110100",
    "children": [{
      "id": "1",
      "name": "东城区",
      "code": "110101"
    }, {
      "id": "2",
      "name": "西城区",
      "code": "110102"
    }, {
      "id": "3",
      "name": "朝阳区",
      "code": "110105"
    }, {
      "id": "4",
      "name": "丰台区",
      "code": "110106"
    }, {
      "id": "5",
      "name": "石景山区",
      "code": "110107"
    }, {
      "id": "6",
      "name": "海淀区",
      "code": "110108"
    }, {
      "id": "7",
      "name": "门头沟区",
      "code": "110109"
    }, {
      "id": "8",
      "name": "房山区",
      "code": "110111"
    }, {
      "id": "9",
      "name": "通州区",
      "code": "110112"
    }, {
      "id": "10",
      "name": "顺义区",
      "code": "110113"
    }, {
      "id": "11",
      "name": "昌平区",
      "code": "110114"
    }, {
      "id": "12",
      "name": "大兴区",
      "code": "110115"
    }, {
      "id": "13",
      "name": "怀柔区",
      "code": "110116"
    }, {
      "id": "14",
      "name": "平谷区",
      "code": "110117"
    }, {
      "id": "15",
      "name": "密云区",
      "code": "110118"
    }, {
      "id": "16",
      "name": "延庆区",
      "code": "110119"
    }]
  }]
}, {
  "id": "2",
  "name": "天津市",
  "code": "120000",
  "children": [{
    "id": "2",
    "name": "市辖区",
    "code": "120100",
    "children": [{
      "id": "17",
      "name": "和平区",
      "code": "120101"
    }, {
      "id": "18",
      "name": "河东区",
      "code": "120102"
    }, {
      "id": "19",
      "name": "河西区",
      "code": "120103"
    }, {
      "id": "20",
      "name": "南开区",
      "code": "120104"
    }, {
      "id": "21",
      "name": "河北区",
      "code": "120105"
    }, {
      "id": "22",
      "name": "红桥区",
      "code": "120106"
    }, {
      "id": "23",
      "name": "东丽区",
      "code": "120110"
    }, {
      "id": "24",
      "name": "西青区",
      "code": "120111"
    }, {
      "id": "25",
      "name": "津南区",
      "code": "120112"
    }, {
      "id": "26",
      "name": "北辰区",
      "code": "120113"
    }, {
      "id": "27",
      "name": "武清区",
      "code": "120114"
    }, {
      "id": "28",
      "name": "宝坻区",
      "code": "120115"
    }, {
      "id": "29",
      "name": "滨海新区",
      "code": "120116"
    }, {
      "id": "30",
      "name": "宁河区",
      "code": "120117"
    }, {
      "id": "31",
      "name": "静海区",
      "code": "120118"
    }, {
      "id": "32",
      "name": "蓟州区",
      "code": "120119"
    }]
  }]
}, {
  "id": "3",
  "name": "河北省",
  "code": "130000",
  "children": [{
    "id": "3",
    "name": "石家庄市",
    "code": "130100",
    "children": [{
      "id": "33",
      "name": "市辖区",
      "code": "130101"
    }, {
      "id": "34",
      "name": "长安区",
      "code": "130102"
    }, {
      "id": "35",
      "name": "桥西区",
      "code": "130104"
    }, {
      "id": "36",
      "name": "新华区",
      "code": "130105"
    }, {
      "id": "37",
      "name": "井陉矿区",
      "code": "130107"
    }, {
      "id": "38",
      "name": "裕华区",
      "code": "130108"
    }, {
      "id": "39",
      "name": "藁城区",
      "code": "130109"
    }, {
      "id": "40",
      "name": "鹿泉区",
      "code": "130110"
    }, {
      "id": "41",
      "name": "栾城区",
      "code": "130111"
    }, {
      "id": "42",
      "name": "井陉县",
      "code": "130121"
    }, {
      "id": "43",
      "name": "正定县",
      "code": "130123"
    }, {
      "id": "44",
      "name": "行唐县",
      "code": "130125"
    }, {
      "id": "45",
      "name": "灵寿县",
      "code": "130126"
    }, {
      "id": "46",
      "name": "高邑县",
      "code": "130127"
    }, {
      "id": "47",
      "name": "深泽县",
      "code": "130128"
    }, {
      "id": "48",
      "name": "赞皇县",
      "code": "130129"
    }, {
      "id": "49",
      "name": "无极县",
      "code": "130130"
    }, {
      "id": "50",
      "name": "平山县",
      "code": "130131"
    }, {
      "id": "51",
      "name": "元氏县",
      "code": "130132"
    }, {
      "id": "52",
      "name": "赵县",
      "code": "130133"
    }, {
      "id": "53",
      "name": "晋州市",
      "code": "130183"
    }, {
      "id": "54",
      "name": "新乐市",
      "code": "130184"
    }]
  }, {
    "id": "4",
    "name": "唐山市",
    "code": "130200",
    "children": [{
      "id": "55",
      "name": "市辖区",
      "code": "130201"
    }, {
      "id": "56",
      "name": "路南区",
      "code": "130202"
    }, {
      "id": "57",
      "name": "路北区",
      "code": "130203"
    }, {
      "id": "58",
      "name": "古冶区",
      "code": "130204"
    }, {
      "id": "59",
      "name": "开平区",
      "code": "130205"
    }, {
      "id": "60",
      "name": "丰南区",
      "code": "130207"
    }, {
      "id": "61",
      "name": "丰润区",
      "code": "130208"
    }, {
      "id": "62",
      "name": "曹妃甸区",
      "code": "130209"
    }, {
      "id": "63",
      "name": "滦县",
      "code": "130223"
    }, {
      "id": "64",
      "name": "滦南县",
      "code": "130224"
    }, {
      "id": "65",
      "name": "乐亭县",
      "code": "130225"
    }, {
      "id": "66",
      "name": "迁西县",
      "code": "130227"
    }, {
      "id": "67",
      "name": "玉田县",
      "code": "130229"
    }, {
      "id": "68",
      "name": "遵化市",
      "code": "130281"
    }, {
      "id": "69",
      "name": "迁安市",
      "code": "130283"
    }]
  }, {
    "id": "5",
    "name": "秦皇岛市",
    "code": "130300",
    "children": [{
      "id": "70",
      "name": "市辖区",
      "code": "130301"
    }, {
      "id": "71",
      "name": "海港区",
      "code": "130302"
    }, {
      "id": "72",
      "name": "山海关区",
      "code": "130303"
    }, {
      "id": "73",
      "name": "北戴河区",
      "code": "130304"
    }, {
      "id": "74",
      "name": "抚宁区",
      "code": "130306"
    }, {
      "id": "75",
      "name": "青龙满族自治县",
      "code": "130321"
    }, {
      "id": "76",
      "name": "昌黎县",
      "code": "130322"
    }, {
      "id": "77",
      "name": "卢龙县",
      "code": "130324"
    }]
  }, {
    "id": "6",
    "name": "邯郸市",
    "code": "130400",
    "children": [{
      "id": "78",
      "name": "市辖区",
      "code": "130401"
    }, {
      "id": "79",
      "name": "邯山区",
      "code": "130402"
    }, {
      "id": "80",
      "name": "丛台区",
      "code": "130403"
    }, {
      "id": "81",
      "name": "复兴区",
      "code": "130404"
    }, {
      "id": "82",
      "name": "峰峰矿区",
      "code": "130406"
    }, {
      "id": "83",
      "name": "邯郸县",
      "code": "130421"
    }, {
      "id": "84",
      "name": "临漳县",
      "code": "130423"
    }, {
      "id": "85",
      "name": "成安县",
      "code": "130424"
    }, {
      "id": "86",
      "name": "大名县",
      "code": "130425"
    }, {
      "id": "87",
      "name": "涉县",
      "code": "130426"
    }, {
      "id": "88",
      "name": "磁县",
      "code": "130427"
    }, {
      "id": "89",
      "name": "肥乡县",
      "code": "130428"
    }, {
      "id": "90",
      "name": "永年县",
      "code": "130429"
    }, {
      "id": "91",
      "name": "邱县",
      "code": "130430"
    }, {
      "id": "92",
      "name": "鸡泽县",
      "code": "130431"
    }, {
      "id": "93",
      "name": "广平县",
      "code": "130432"
    }, {
      "id": "94",
      "name": "馆陶县",
      "code": "130433"
    }, {
      "id": "95",
      "name": "魏县",
      "code": "130434"
    }, {
      "id": "96",
      "name": "曲周县",
      "code": "130435"
    }, {
      "id": "97",
      "name": "武安市",
      "code": "130481"
    }]
  }, {
    "id": "7",
    "name": "邢台市",
    "code": "130500",
    "children": [{
      "id": "98",
      "name": "市辖区",
      "code": "130501"
    }, {
      "id": "99",
      "name": "桥东区",
      "code": "130502"
    }, {
      "id": "100",
      "name": "桥西区",
      "code": "130503"
    }, {
      "id": "101",
      "name": "邢台县",
      "code": "130521"
    }, {
      "id": "102",
      "name": "临城县",
      "code": "130522"
    }, {
      "id": "103",
      "name": "内丘县",
      "code": "130523"
    }, {
      "id": "104",
      "name": "柏乡县",
      "code": "130524"
    }, {
      "id": "105",
      "name": "隆尧县",
      "code": "130525"
    }, {
      "id": "106",
      "name": "任县",
      "code": "130526"
    }, {
      "id": "107",
      "name": "南和县",
      "code": "130527"
    }, {
      "id": "108",
      "name": "宁晋县",
      "code": "130528"
    }, {
      "id": "109",
      "name": "巨鹿县",
      "code": "130529"
    }, {
      "id": "110",
      "name": "新河县",
      "code": "130530"
    }, {
      "id": "111",
      "name": "广宗县",
      "code": "130531"
    }, {
      "id": "112",
      "name": "平乡县",
      "code": "130532"
    }, {
      "id": "113",
      "name": "威县",
      "code": "130533"
    }, {
      "id": "114",
      "name": "清河县",
      "code": "130534"
    }, {
      "id": "115",
      "name": "临西县",
      "code": "130535"
    }, {
      "id": "116",
      "name": "南宫市",
      "code": "130581"
    }, {
      "id": "117",
      "name": "沙河市",
      "code": "130582"
    }]
  }, {
    "id": "8",
    "name": "保定市",
    "code": "130600",
    "children": [{
      "id": "118",
      "name": "市辖区",
      "code": "130601"
    }, {
      "id": "119",
      "name": "竞秀区",
      "code": "130602"
    }, {
      "id": "120",
      "name": "莲池区",
      "code": "130606"
    }, {
      "id": "121",
      "name": "满城区",
      "code": "130607"
    }, {
      "id": "122",
      "name": "清苑区",
      "code": "130608"
    }, {
      "id": "123",
      "name": "徐水区",
      "code": "130609"
    }, {
      "id": "124",
      "name": "涞水县",
      "code": "130623"
    }, {
      "id": "125",
      "name": "阜平县",
      "code": "130624"
    }, {
      "id": "126",
      "name": "定兴县",
      "code": "130626"
    }, {
      "id": "127",
      "name": "唐县",
      "code": "130627"
    }, {
      "id": "128",
      "name": "高阳县",
      "code": "130628"
    }, {
      "id": "129",
      "name": "容城县",
      "code": "130629"
    }, {
      "id": "130",
      "name": "涞源县",
      "code": "130630"
    }, {
      "id": "131",
      "name": "望都县",
      "code": "130631"
    }, {
      "id": "132",
      "name": "安新县",
      "code": "130632"
    }, {
      "id": "133",
      "name": "易县",
      "code": "130633"
    }, {
      "id": "134",
      "name": "曲阳县",
      "code": "130634"
    }, {
      "id": "135",
      "name": "蠡县",
      "code": "130635"
    }, {
      "id": "136",
      "name": "顺平县",
      "code": "130636"
    }, {
      "id": "137",
      "name": "博野县",
      "code": "130637"
    }, {
      "id": "138",
      "name": "雄县",
      "code": "130638"
    }, {
      "id": "139",
      "name": "涿州市",
      "code": "130681"
    }, {
      "id": "140",
      "name": "安国市",
      "code": "130683"
    }, {
      "id": "141",
      "name": "高碑店市",
      "code": "130684"
    }]
  }, {
    "id": "9",
    "name": "张家口市",
    "code": "130700",
    "children": [{
      "id": "142",
      "name": "市辖区",
      "code": "130701"
    }, {
      "id": "143",
      "name": "桥东区",
      "code": "130702"
    }, {
      "id": "144",
      "name": "桥西区",
      "code": "130703"
    }, {
      "id": "145",
      "name": "宣化区",
      "code": "130705"
    }, {
      "id": "146",
      "name": "下花园区",
      "code": "130706"
    }, {
      "id": "147",
      "name": "万全区",
      "code": "130708"
    }, {
      "id": "148",
      "name": "崇礼区",
      "code": "130709"
    }, {
      "id": "149",
      "name": "张北县",
      "code": "130722"
    }, {
      "id": "150",
      "name": "康保县",
      "code": "130723"
    }, {
      "id": "151",
      "name": "沽源县",
      "code": "130724"
    }, {
      "id": "152",
      "name": "尚义县",
      "code": "130725"
    }, {
      "id": "153",
      "name": "蔚县",
      "code": "130726"
    }, {
      "id": "154",
      "name": "阳原县",
      "code": "130727"
    }, {
      "id": "155",
      "name": "怀安县",
      "code": "130728"
    }, {
      "id": "156",
      "name": "怀来县",
      "code": "130730"
    }, {
      "id": "157",
      "name": "涿鹿县",
      "code": "130731"
    }, {
      "id": "158",
      "name": "赤城县",
      "code": "130732"
    }]
  }, {
    "id": "10",
    "name": "承德市",
    "code": "130800",
    "children": [{
      "id": "159",
      "name": "市辖区",
      "code": "130801"
    }, {
      "id": "160",
      "name": "双桥区",
      "code": "130802"
    }, {
      "id": "161",
      "name": "双滦区",
      "code": "130803"
    }, {
      "id": "162",
      "name": "鹰手营子矿区",
      "code": "130804"
    }, {
      "id": "163",
      "name": "承德县",
      "code": "130821"
    }, {
      "id": "164",
      "name": "兴隆县",
      "code": "130822"
    }, {
      "id": "165",
      "name": "平泉县",
      "code": "130823"
    }, {
      "id": "166",
      "name": "滦平县",
      "code": "130824"
    }, {
      "id": "167",
      "name": "隆化县",
      "code": "130825"
    }, {
      "id": "168",
      "name": "丰宁满族自治县",
      "code": "130826"
    }, {
      "id": "169",
      "name": "宽城满族自治县",
      "code": "130827"
    }, {
      "id": "170",
      "name": "围场满族蒙古族自治县",
      "code": "130828"
    }]
  }, {
    "id": "11",
    "name": "沧州市",
    "code": "130900",
    "children": [{
      "id": "171",
      "name": "市辖区",
      "code": "130901"
    }, {
      "id": "172",
      "name": "新华区",
      "code": "130902"
    }, {
      "id": "173",
      "name": "运河区",
      "code": "130903"
    }, {
      "id": "174",
      "name": "沧县",
      "code": "130921"
    }, {
      "id": "175",
      "name": "青县",
      "code": "130922"
    }, {
      "id": "176",
      "name": "东光县",
      "code": "130923"
    }, {
      "id": "177",
      "name": "海兴县",
      "code": "130924"
    }, {
      "id": "178",
      "name": "盐山县",
      "code": "130925"
    }, {
      "id": "179",
      "name": "肃宁县",
      "code": "130926"
    }, {
      "id": "180",
      "name": "南皮县",
      "code": "130927"
    }, {
      "id": "181",
      "name": "吴桥县",
      "code": "130928"
    }, {
      "id": "182",
      "name": "献县",
      "code": "130929"
    }, {
      "id": "183",
      "name": "孟村回族自治县",
      "code": "130930"
    }, {
      "id": "184",
      "name": "泊头市",
      "code": "130981"
    }, {
      "id": "185",
      "name": "任丘市",
      "code": "130982"
    }, {
      "id": "186",
      "name": "黄骅市",
      "code": "130983"
    }, {
      "id": "187",
      "name": "河间市",
      "code": "130984"
    }]
  }, {
    "id": "12",
    "name": "廊坊市",
    "code": "131000",
    "children": [{
      "id": "188",
      "name": "市辖区",
      "code": "131001"
    }, {
      "id": "189",
      "name": "安次区",
      "code": "131002"
    }, {
      "id": "190",
      "name": "广阳区",
      "code": "131003"
    }, {
      "id": "191",
      "name": "固安县",
      "code": "131022"
    }, {
      "id": "192",
      "name": "永清县",
      "code": "131023"
    }, {
      "id": "193",
      "name": "香河县",
      "code": "131024"
    }, {
      "id": "194",
      "name": "大城县",
      "code": "131025"
    }, {
      "id": "195",
      "name": "文安县",
      "code": "131026"
    }, {
      "id": "196",
      "name": "大厂回族自治县",
      "code": "131028"
    }, {
      "id": "197",
      "name": "霸州市",
      "code": "131081"
    }, {
      "id": "198",
      "name": "三河市",
      "code": "131082"
    }]
  }, {
    "id": "13",
    "name": "衡水市",
    "code": "131100",
    "children": [{
      "id": "199",
      "name": "市辖区",
      "code": "131101"
    }, {
      "id": "200",
      "name": "桃城区",
      "code": "131102"
    }, {
      "id": "201",
      "name": "冀州区",
      "code": "131103"
    }, {
      "id": "202",
      "name": "枣强县",
      "code": "131121"
    }, {
      "id": "203",
      "name": "武邑县",
      "code": "131122"
    }, {
      "id": "204",
      "name": "武强县",
      "code": "131123"
    }, {
      "id": "205",
      "name": "饶阳县",
      "code": "131124"
    }, {
      "id": "206",
      "name": "安平县",
      "code": "131125"
    }, {
      "id": "207",
      "name": "故城县",
      "code": "131126"
    }, {
      "id": "208",
      "name": "景县",
      "code": "131127"
    }, {
      "id": "209",
      "name": "阜城县",
      "code": "131128"
    }, {
      "id": "210",
      "name": "深州市",
      "code": "131182"
    }]
  }, {
    "id": "14",
    "name": "省直辖县级行政区划",
    "code": "139000",
    "children": [{
      "id": "211",
      "name": "定州市",
      "code": "139001"
    }, {
      "id": "212",
      "name": "辛集市",
      "code": "139002"
    }]
  }]
}, {
  "id": "4",
  "name": "山西省",
  "code": "140000",
  "children": [{
    "id": "15",
    "name": "太原市",
    "code": "140100",
    "children": [{
      "id": "213",
      "name": "市辖区",
      "code": "140101"
    }, {
      "id": "214",
      "name": "小店区",
      "code": "140105"
    }, {
      "id": "215",
      "name": "迎泽区",
      "code": "140106"
    }, {
      "id": "216",
      "name": "杏花岭区",
      "code": "140107"
    }, {
      "id": "217",
      "name": "尖草坪区",
      "code": "140108"
    }, {
      "id": "218",
      "name": "万柏林区",
      "code": "140109"
    }, {
      "id": "219",
      "name": "晋源区",
      "code": "140110"
    }, {
      "id": "220",
      "name": "清徐县",
      "code": "140121"
    }, {
      "id": "221",
      "name": "阳曲县",
      "code": "140122"
    }, {
      "id": "222",
      "name": "娄烦县",
      "code": "140123"
    }, {
      "id": "223",
      "name": "古交市",
      "code": "140181"
    }]
  }, {
    "id": "16",
    "name": "大同市",
    "code": "140200",
    "children": [{
      "id": "224",
      "name": "市辖区",
      "code": "140201"
    }, {
      "id": "225",
      "name": "城区",
      "code": "140202"
    }, {
      "id": "226",
      "name": "矿区",
      "code": "140203"
    }, {
      "id": "227",
      "name": "南郊区",
      "code": "140211"
    }, {
      "id": "228",
      "name": "新荣区",
      "code": "140212"
    }, {
      "id": "229",
      "name": "阳高县",
      "code": "140221"
    }, {
      "id": "230",
      "name": "天镇县",
      "code": "140222"
    }, {
      "id": "231",
      "name": "广灵县",
      "code": "140223"
    }, {
      "id": "232",
      "name": "灵丘县",
      "code": "140224"
    }, {
      "id": "233",
      "name": "浑源县",
      "code": "140225"
    }, {
      "id": "234",
      "name": "左云县",
      "code": "140226"
    }, {
      "id": "235",
      "name": "大同县",
      "code": "140227"
    }]
  }, {
    "id": "17",
    "name": "阳泉市",
    "code": "140300",
    "children": [{
      "id": "236",
      "name": "市辖区",
      "code": "140301"
    }, {
      "id": "237",
      "name": "城区",
      "code": "140302"
    }, {
      "id": "238",
      "name": "矿区",
      "code": "140303"
    }, {
      "id": "239",
      "name": "郊区",
      "code": "140311"
    }, {
      "id": "240",
      "name": "平定县",
      "code": "140321"
    }, {
      "id": "241",
      "name": "盂县",
      "code": "140322"
    }]
  }, {
    "id": "18",
    "name": "长治市",
    "code": "140400",
    "children": [{
      "id": "242",
      "name": "市辖区",
      "code": "140401"
    }, {
      "id": "243",
      "name": "城区",
      "code": "140402"
    }, {
      "id": "244",
      "name": "郊区",
      "code": "140411"
    }, {
      "id": "245",
      "name": "长治县",
      "code": "140421"
    }, {
      "id": "246",
      "name": "襄垣县",
      "code": "140423"
    }, {
      "id": "247",
      "name": "屯留县",
      "code": "140424"
    }, {
      "id": "248",
      "name": "平顺县",
      "code": "140425"
    }, {
      "id": "249",
      "name": "黎城县",
      "code": "140426"
    }, {
      "id": "250",
      "name": "壶关县",
      "code": "140427"
    }, {
      "id": "251",
      "name": "长子县",
      "code": "140428"
    }, {
      "id": "252",
      "name": "武乡县",
      "code": "140429"
    }, {
      "id": "253",
      "name": "沁县",
      "code": "140430"
    }, {
      "id": "254",
      "name": "沁源县",
      "code": "140431"
    }, {
      "id": "255",
      "name": "潞城市",
      "code": "140481"
    }]
  }, {
    "id": "19",
    "name": "晋城市",
    "code": "140500",
    "children": [{
      "id": "256",
      "name": "市辖区",
      "code": "140501"
    }, {
      "id": "257",
      "name": "城区",
      "code": "140502"
    }, {
      "id": "258",
      "name": "沁水县",
      "code": "140521"
    }, {
      "id": "259",
      "name": "阳城县",
      "code": "140522"
    }, {
      "id": "260",
      "name": "陵川县",
      "code": "140524"
    }, {
      "id": "261",
      "name": "泽州县",
      "code": "140525"
    }, {
      "id": "262",
      "name": "高平市",
      "code": "140581"
    }]
  }, {
    "id": "20",
    "name": "朔州市",
    "code": "140600",
    "children": [{
      "id": "263",
      "name": "市辖区",
      "code": "140601"
    }, {
      "id": "264",
      "name": "朔城区",
      "code": "140602"
    }, {
      "id": "265",
      "name": "平鲁区",
      "code": "140603"
    }, {
      "id": "266",
      "name": "山阴县",
      "code": "140621"
    }, {
      "id": "267",
      "name": "应县",
      "code": "140622"
    }, {
      "id": "268",
      "name": "右玉县",
      "code": "140623"
    }, {
      "id": "269",
      "name": "怀仁县",
      "code": "140624"
    }]
  }, {
    "id": "21",
    "name": "晋中市",
    "code": "140700",
    "children": [{
      "id": "270",
      "name": "市辖区",
      "code": "140701"
    }, {
      "id": "271",
      "name": "榆次区",
      "code": "140702"
    }, {
      "id": "272",
      "name": "榆社县",
      "code": "140721"
    }, {
      "id": "273",
      "name": "左权县",
      "code": "140722"
    }, {
      "id": "274",
      "name": "和顺县",
      "code": "140723"
    }, {
      "id": "275",
      "name": "昔阳县",
      "code": "140724"
    }, {
      "id": "276",
      "name": "寿阳县",
      "code": "140725"
    }, {
      "id": "277",
      "name": "太谷县",
      "code": "140726"
    }, {
      "id": "278",
      "name": "祁县",
      "code": "140727"
    }, {
      "id": "279",
      "name": "平遥县",
      "code": "140728"
    }, {
      "id": "280",
      "name": "灵石县",
      "code": "140729"
    }, {
      "id": "281",
      "name": "介休市",
      "code": "140781"
    }]
  }, {
    "id": "22",
    "name": "运城市",
    "code": "140800",
    "children": [{
      "id": "282",
      "name": "市辖区",
      "code": "140801"
    }, {
      "id": "283",
      "name": "盐湖区",
      "code": "140802"
    }, {
      "id": "284",
      "name": "临猗县",
      "code": "140821"
    }, {
      "id": "285",
      "name": "万荣县",
      "code": "140822"
    }, {
      "id": "286",
      "name": "闻喜县",
      "code": "140823"
    }, {
      "id": "287",
      "name": "稷山县",
      "code": "140824"
    }, {
      "id": "288",
      "name": "新绛县",
      "code": "140825"
    }, {
      "id": "289",
      "name": "绛县",
      "code": "140826"
    }, {
      "id": "290",
      "name": "垣曲县",
      "code": "140827"
    }, {
      "id": "291",
      "name": "夏县",
      "code": "140828"
    }, {
      "id": "292",
      "name": "平陆县",
      "code": "140829"
    }, {
      "id": "293",
      "name": "芮城县",
      "code": "140830"
    }, {
      "id": "294",
      "name": "永济市",
      "code": "140881"
    }, {
      "id": "295",
      "name": "河津市",
      "code": "140882"
    }]
  }, {
    "id": "23",
    "name": "忻州市",
    "code": "140900",
    "children": [{
      "id": "296",
      "name": "市辖区",
      "code": "140901"
    }, {
      "id": "297",
      "name": "忻府区",
      "code": "140902"
    }, {
      "id": "298",
      "name": "定襄县",
      "code": "140921"
    }, {
      "id": "299",
      "name": "五台县",
      "code": "140922"
    }, {
      "id": "300",
      "name": "代县",
      "code": "140923"
    }, {
      "id": "301",
      "name": "繁峙县",
      "code": "140924"
    }, {
      "id": "302",
      "name": "宁武县",
      "code": "140925"
    }, {
      "id": "303",
      "name": "静乐县",
      "code": "140926"
    }, {
      "id": "304",
      "name": "神池县",
      "code": "140927"
    }, {
      "id": "305",
      "name": "五寨县",
      "code": "140928"
    }, {
      "id": "306",
      "name": "岢岚县",
      "code": "140929"
    }, {
      "id": "307",
      "name": "河曲县",
      "code": "140930"
    }, {
      "id": "308",
      "name": "保德县",
      "code": "140931"
    }, {
      "id": "309",
      "name": "偏关县",
      "code": "140932"
    }, {
      "id": "310",
      "name": "原平市",
      "code": "140981"
    }]
  }, {
    "id": "24",
    "name": "临汾市",
    "code": "141000",
    "children": [{
      "id": "311",
      "name": "市辖区",
      "code": "141001"
    }, {
      "id": "312",
      "name": "尧都区",
      "code": "141002"
    }, {
      "id": "313",
      "name": "曲沃县",
      "code": "141021"
    }, {
      "id": "314",
      "name": "翼城县",
      "code": "141022"
    }, {
      "id": "315",
      "name": "襄汾县",
      "code": "141023"
    }, {
      "id": "316",
      "name": "洪洞县",
      "code": "141024"
    }, {
      "id": "317",
      "name": "古县",
      "code": "141025"
    }, {
      "id": "318",
      "name": "安泽县",
      "code": "141026"
    }, {
      "id": "319",
      "name": "浮山县",
      "code": "141027"
    }, {
      "id": "320",
      "name": "吉县",
      "code": "141028"
    }, {
      "id": "321",
      "name": "乡宁县",
      "code": "141029"
    }, {
      "id": "322",
      "name": "大宁县",
      "code": "141030"
    }, {
      "id": "323",
      "name": "隰县",
      "code": "141031"
    }, {
      "id": "324",
      "name": "永和县",
      "code": "141032"
    }, {
      "id": "325",
      "name": "蒲县",
      "code": "141033"
    }, {
      "id": "326",
      "name": "汾西县",
      "code": "141034"
    }, {
      "id": "327",
      "name": "侯马市",
      "code": "141081"
    }, {
      "id": "328",
      "name": "霍州市",
      "code": "141082"
    }]
  }, {
    "id": "25",
    "name": "吕梁市",
    "code": "141100",
    "children": [{
      "id": "329",
      "name": "市辖区",
      "code": "141101"
    }, {
      "id": "330",
      "name": "离石区",
      "code": "141102"
    }, {
      "id": "331",
      "name": "文水县",
      "code": "141121"
    }, {
      "id": "332",
      "name": "交城县",
      "code": "141122"
    }, {
      "id": "333",
      "name": "兴县",
      "code": "141123"
    }, {
      "id": "334",
      "name": "临县",
      "code": "141124"
    }, {
      "id": "335",
      "name": "柳林县",
      "code": "141125"
    }, {
      "id": "336",
      "name": "石楼县",
      "code": "141126"
    }, {
      "id": "337",
      "name": "岚县",
      "code": "141127"
    }, {
      "id": "338",
      "name": "方山县",
      "code": "141128"
    }, {
      "id": "339",
      "name": "中阳县",
      "code": "141129"
    }, {
      "id": "340",
      "name": "交口县",
      "code": "141130"
    }, {
      "id": "341",
      "name": "孝义市",
      "code": "141181"
    }, {
      "id": "342",
      "name": "汾阳市",
      "code": "141182"
    }]
  }]
}, {
  "id": "5",
  "name": "内蒙古自治区",
  "code": "150000",
  "children": [{
    "id": "26",
    "name": "呼和浩特市",
    "code": "150100",
    "children": [{
      "id": "343",
      "name": "市辖区",
      "code": "150101"
    }, {
      "id": "344",
      "name": "新城区",
      "code": "150102"
    }, {
      "id": "345",
      "name": "回民区",
      "code": "150103"
    }, {
      "id": "346",
      "name": "玉泉区",
      "code": "150104"
    }, {
      "id": "347",
      "name": "赛罕区",
      "code": "150105"
    }, {
      "id": "348",
      "name": "土默特左旗",
      "code": "150121"
    }, {
      "id": "349",
      "name": "托克托县",
      "code": "150122"
    }, {
      "id": "350",
      "name": "和林格尔县",
      "code": "150123"
    }, {
      "id": "351",
      "name": "清水河县",
      "code": "150124"
    }, {
      "id": "352",
      "name": "武川县",
      "code": "150125"
    }]
  }, {
    "id": "27",
    "name": "包头市",
    "code": "150200",
    "children": [{
      "id": "353",
      "name": "市辖区",
      "code": "150201"
    }, {
      "id": "354",
      "name": "东河区",
      "code": "150202"
    }, {
      "id": "355",
      "name": "昆都仑区",
      "code": "150203"
    }, {
      "id": "356",
      "name": "青山区",
      "code": "150204"
    }, {
      "id": "357",
      "name": "石拐区",
      "code": "150205"
    }, {
      "id": "358",
      "name": "白云鄂博矿区",
      "code": "150206"
    }, {
      "id": "359",
      "name": "九原区",
      "code": "150207"
    }, {
      "id": "360",
      "name": "土默特右旗",
      "code": "150221"
    }, {
      "id": "361",
      "name": "固阳县",
      "code": "150222"
    }, {
      "id": "362",
      "name": "达尔罕茂明安联合旗",
      "code": "150223"
    }]
  }, {
    "id": "28",
    "name": "乌海市",
    "code": "150300",
    "children": [{
      "id": "363",
      "name": "市辖区",
      "code": "150301"
    }, {
      "id": "364",
      "name": "海勃湾区",
      "code": "150302"
    }, {
      "id": "365",
      "name": "海南区",
      "code": "150303"
    }, {
      "id": "366",
      "name": "乌达区",
      "code": "150304"
    }]
  }, {
    "id": "29",
    "name": "赤峰市",
    "code": "150400",
    "children": [{
      "id": "367",
      "name": "市辖区",
      "code": "150401"
    }, {
      "id": "368",
      "name": "红山区",
      "code": "150402"
    }, {
      "id": "369",
      "name": "元宝山区",
      "code": "150403"
    }, {
      "id": "370",
      "name": "松山区",
      "code": "150404"
    }, {
      "id": "371",
      "name": "阿鲁科尔沁旗",
      "code": "150421"
    }, {
      "id": "372",
      "name": "巴林左旗",
      "code": "150422"
    }, {
      "id": "373",
      "name": "巴林右旗",
      "code": "150423"
    }, {
      "id": "374",
      "name": "林西县",
      "code": "150424"
    }, {
      "id": "375",
      "name": "克什克腾旗",
      "code": "150425"
    }, {
      "id": "376",
      "name": "翁牛特旗",
      "code": "150426"
    }, {
      "id": "377",
      "name": "喀喇沁旗",
      "code": "150428"
    }, {
      "id": "378",
      "name": "宁城县",
      "code": "150429"
    }, {
      "id": "379",
      "name": "敖汉旗",
      "code": "150430"
    }]
  }, {
    "id": "30",
    "name": "通辽市",
    "code": "150500",
    "children": [{
      "id": "380",
      "name": "市辖区",
      "code": "150501"
    }, {
      "id": "381",
      "name": "科尔沁区",
      "code": "150502"
    }, {
      "id": "382",
      "name": "科尔沁左翼中旗",
      "code": "150521"
    }, {
      "id": "383",
      "name": "科尔沁左翼后旗",
      "code": "150522"
    }, {
      "id": "384",
      "name": "开鲁县",
      "code": "150523"
    }, {
      "id": "385",
      "name": "库伦旗",
      "code": "150524"
    }, {
      "id": "386",
      "name": "奈曼旗",
      "code": "150525"
    }, {
      "id": "387",
      "name": "扎鲁特旗",
      "code": "150526"
    }, {
      "id": "388",
      "name": "霍林郭勒市",
      "code": "150581"
    }]
  }, {
    "id": "31",
    "name": "鄂尔多斯市",
    "code": "150600",
    "children": [{
      "id": "389",
      "name": "市辖区",
      "code": "150601"
    }, {
      "id": "390",
      "name": "东胜区",
      "code": "150602"
    }, {
      "id": "391",
      "name": "康巴什区",
      "code": "150603"
    }, {
      "id": "392",
      "name": "达拉特旗",
      "code": "150621"
    }, {
      "id": "393",
      "name": "准格尔旗",
      "code": "150622"
    }, {
      "id": "394",
      "name": "鄂托克前旗",
      "code": "150623"
    }, {
      "id": "395",
      "name": "鄂托克旗",
      "code": "150624"
    }, {
      "id": "396",
      "name": "杭锦旗",
      "code": "150625"
    }, {
      "id": "397",
      "name": "乌审旗",
      "code": "150626"
    }, {
      "id": "398",
      "name": "伊金霍洛旗",
      "code": "150627"
    }]
  }, {
    "id": "32",
    "name": "呼伦贝尔市",
    "code": "150700",
    "children": [{
      "id": "399",
      "name": "市辖区",
      "code": "150701"
    }, {
      "id": "400",
      "name": "海拉尔区",
      "code": "150702"
    }, {
      "id": "401",
      "name": "扎赉诺尔区",
      "code": "150703"
    }, {
      "id": "402",
      "name": "阿荣旗",
      "code": "150721"
    }, {
      "id": "403",
      "name": "莫力达瓦达斡尔族自治旗",
      "code": "150722"
    }, {
      "id": "404",
      "name": "鄂伦春自治旗",
      "code": "150723"
    }, {
      "id": "405",
      "name": "鄂温克族自治旗",
      "code": "150724"
    }, {
      "id": "406",
      "name": "陈巴尔虎旗",
      "code": "150725"
    }, {
      "id": "407",
      "name": "新巴尔虎左旗",
      "code": "150726"
    }, {
      "id": "408",
      "name": "新巴尔虎右旗",
      "code": "150727"
    }, {
      "id": "409",
      "name": "满洲里市",
      "code": "150781"
    }, {
      "id": "410",
      "name": "牙克石市",
      "code": "150782"
    }, {
      "id": "411",
      "name": "扎兰屯市",
      "code": "150783"
    }, {
      "id": "412",
      "name": "额尔古纳市",
      "code": "150784"
    }, {
      "id": "413",
      "name": "根河市",
      "code": "150785"
    }]
  }, {
    "id": "33",
    "name": "巴彦淖尔市",
    "code": "150800",
    "children": [{
      "id": "414",
      "name": "市辖区",
      "code": "150801"
    }, {
      "id": "415",
      "name": "临河区",
      "code": "150802"
    }, {
      "id": "416",
      "name": "五原县",
      "code": "150821"
    }, {
      "id": "417",
      "name": "磴口县",
      "code": "150822"
    }, {
      "id": "418",
      "name": "乌拉特前旗",
      "code": "150823"
    }, {
      "id": "419",
      "name": "乌拉特中旗",
      "code": "150824"
    }, {
      "id": "420",
      "name": "乌拉特后旗",
      "code": "150825"
    }, {
      "id": "421",
      "name": "杭锦后旗",
      "code": "150826"
    }]
  }, {
    "id": "34",
    "name": "乌兰察布市",
    "code": "150900",
    "children": [{
      "id": "422",
      "name": "市辖区",
      "code": "150901"
    }, {
      "id": "423",
      "name": "集宁区",
      "code": "150902"
    }, {
      "id": "424",
      "name": "卓资县",
      "code": "150921"
    }, {
      "id": "425",
      "name": "化德县",
      "code": "150922"
    }, {
      "id": "426",
      "name": "商都县",
      "code": "150923"
    }, {
      "id": "427",
      "name": "兴和县",
      "code": "150924"
    }, {
      "id": "428",
      "name": "凉城县",
      "code": "150925"
    }, {
      "id": "429",
      "name": "察哈尔右翼前旗",
      "code": "150926"
    }, {
      "id": "430",
      "name": "察哈尔右翼中旗",
      "code": "150927"
    }, {
      "id": "431",
      "name": "察哈尔右翼后旗",
      "code": "150928"
    }, {
      "id": "432",
      "name": "四子王旗",
      "code": "150929"
    }, {
      "id": "433",
      "name": "丰镇市",
      "code": "150981"
    }]
  }, {
    "id": "35",
    "name": "兴安盟",
    "code": "152200",
    "children": [{
      "id": "434",
      "name": "乌兰浩特市",
      "code": "152201"
    }, {
      "id": "435",
      "name": "阿尔山市",
      "code": "152202"
    }, {
      "id": "436",
      "name": "科尔沁右翼前旗",
      "code": "152221"
    }, {
      "id": "437",
      "name": "科尔沁右翼中旗",
      "code": "152222"
    }, {
      "id": "438",
      "name": "扎赉特旗",
      "code": "152223"
    }, {
      "id": "439",
      "name": "突泉县",
      "code": "152224"
    }]
  }, {
    "id": "36",
    "name": "锡林郭勒盟",
    "code": "152500",
    "children": [{
      "id": "440",
      "name": "二连浩特市",
      "code": "152501"
    }, {
      "id": "441",
      "name": "锡林浩特市",
      "code": "152502"
    }, {
      "id": "442",
      "name": "阿巴嘎旗",
      "code": "152522"
    }, {
      "id": "443",
      "name": "苏尼特左旗",
      "code": "152523"
    }, {
      "id": "444",
      "name": "苏尼特右旗",
      "code": "152524"
    }, {
      "id": "445",
      "name": "东乌珠穆沁旗",
      "code": "152525"
    }, {
      "id": "446",
      "name": "西乌珠穆沁旗",
      "code": "152526"
    }, {
      "id": "447",
      "name": "太仆寺旗",
      "code": "152527"
    }, {
      "id": "448",
      "name": "镶黄旗",
      "code": "152528"
    }, {
      "id": "449",
      "name": "正镶白旗",
      "code": "152529"
    }, {
      "id": "450",
      "name": "正蓝旗",
      "code": "152530"
    }, {
      "id": "451",
      "name": "多伦县",
      "code": "152531"
    }]
  }, {
    "id": "37",
    "name": "阿拉善盟",
    "code": "152900",
    "children": [{
      "id": "452",
      "name": "阿拉善左旗",
      "code": "152921"
    }, {
      "id": "453",
      "name": "阿拉善右旗",
      "code": "152922"
    }, {
      "id": "454",
      "name": "额济纳旗",
      "code": "152923"
    }]
  }]
}, {
  "id": "6",
  "name": "辽宁省",
  "code": "210000",
  "children": [{
    "id": "38",
    "name": "沈阳市",
    "code": "210100",
    "children": [{
      "id": "455",
      "name": "市辖区",
      "code": "210101"
    }, {
      "id": "456",
      "name": "和平区",
      "code": "210102"
    }, {
      "id": "457",
      "name": "沈河区",
      "code": "210103"
    }, {
      "id": "458",
      "name": "大东区",
      "code": "210104"
    }, {
      "id": "459",
      "name": "皇姑区",
      "code": "210105"
    }, {
      "id": "460",
      "name": "铁西区",
      "code": "210106"
    }, {
      "id": "461",
      "name": "苏家屯区",
      "code": "210111"
    }, {
      "id": "462",
      "name": "浑南区",
      "code": "210112"
    }, {
      "id": "463",
      "name": "沈北新区",
      "code": "210113"
    }, {
      "id": "464",
      "name": "于洪区",
      "code": "210114"
    }, {
      "id": "465",
      "name": "辽中区",
      "code": "210115"
    }, {
      "id": "466",
      "name": "康平县",
      "code": "210123"
    }, {
      "id": "467",
      "name": "法库县",
      "code": "210124"
    }, {
      "id": "468",
      "name": "新民市",
      "code": "210181"
    }]
  }, {
    "id": "39",
    "name": "大连市",
    "code": "210200",
    "children": [{
      "id": "469",
      "name": "市辖区",
      "code": "210201"
    }, {
      "id": "470",
      "name": "中山区",
      "code": "210202"
    }, {
      "id": "471",
      "name": "西岗区",
      "code": "210203"
    }, {
      "id": "472",
      "name": "沙河口区",
      "code": "210204"
    }, {
      "id": "473",
      "name": "甘井子区",
      "code": "210211"
    }, {
      "id": "474",
      "name": "旅顺口区",
      "code": "210212"
    }, {
      "id": "475",
      "name": "金州区",
      "code": "210213"
    }, {
      "id": "476",
      "name": "普兰店区",
      "code": "210214"
    }, {
      "id": "477",
      "name": "长海县",
      "code": "210224"
    }, {
      "id": "478",
      "name": "瓦房店市",
      "code": "210281"
    }, {
      "id": "479",
      "name": "庄河市",
      "code": "210283"
    }]
  }, {
    "id": "40",
    "name": "鞍山市",
    "code": "210300",
    "children": [{
      "id": "480",
      "name": "市辖区",
      "code": "210301"
    }, {
      "id": "481",
      "name": "铁东区",
      "code": "210302"
    }, {
      "id": "482",
      "name": "铁西区",
      "code": "210303"
    }, {
      "id": "483",
      "name": "立山区",
      "code": "210304"
    }, {
      "id": "484",
      "name": "千山区",
      "code": "210311"
    }, {
      "id": "485",
      "name": "台安县",
      "code": "210321"
    }, {
      "id": "486",
      "name": "岫岩满族自治县",
      "code": "210323"
    }, {
      "id": "487",
      "name": "海城市",
      "code": "210381"
    }]
  }, {
    "id": "41",
    "name": "抚顺市",
    "code": "210400",
    "children": [{
      "id": "488",
      "name": "市辖区",
      "code": "210401"
    }, {
      "id": "489",
      "name": "新抚区",
      "code": "210402"
    }, {
      "id": "490",
      "name": "东洲区",
      "code": "210403"
    }, {
      "id": "491",
      "name": "望花区",
      "code": "210404"
    }, {
      "id": "492",
      "name": "顺城区",
      "code": "210411"
    }, {
      "id": "493",
      "name": "抚顺县",
      "code": "210421"
    }, {
      "id": "494",
      "name": "新宾满族自治县",
      "code": "210422"
    }, {
      "id": "495",
      "name": "清原满族自治县",
      "code": "210423"
    }]
  }, {
    "id": "42",
    "name": "本溪市",
    "code": "210500",
    "children": [{
      "id": "496",
      "name": "市辖区",
      "code": "210501"
    }, {
      "id": "497",
      "name": "平山区",
      "code": "210502"
    }, {
      "id": "498",
      "name": "溪湖区",
      "code": "210503"
    }, {
      "id": "499",
      "name": "明山区",
      "code": "210504"
    }, {
      "id": "500",
      "name": "南芬区",
      "code": "210505"
    }, {
      "id": "501",
      "name": "本溪满族自治县",
      "code": "210521"
    }, {
      "id": "502",
      "name": "桓仁满族自治县",
      "code": "210522"
    }]
  }, {
    "id": "43",
    "name": "丹东市",
    "code": "210600",
    "children": [{
      "id": "503",
      "name": "市辖区",
      "code": "210601"
    }, {
      "id": "504",
      "name": "元宝区",
      "code": "210602"
    }, {
      "id": "505",
      "name": "振兴区",
      "code": "210603"
    }, {
      "id": "506",
      "name": "振安区",
      "code": "210604"
    }, {
      "id": "507",
      "name": "宽甸满族自治县",
      "code": "210624"
    }, {
      "id": "508",
      "name": "东港市",
      "code": "210681"
    }, {
      "id": "509",
      "name": "凤城市",
      "code": "210682"
    }]
  }, {
    "id": "44",
    "name": "锦州市",
    "code": "210700",
    "children": [{
      "id": "510",
      "name": "市辖区",
      "code": "210701"
    }, {
      "id": "511",
      "name": "古塔区",
      "code": "210702"
    }, {
      "id": "512",
      "name": "凌河区",
      "code": "210703"
    }, {
      "id": "513",
      "name": "太和区",
      "code": "210711"
    }, {
      "id": "514",
      "name": "黑山县",
      "code": "210726"
    }, {
      "id": "515",
      "name": "义县",
      "code": "210727"
    }, {
      "id": "516",
      "name": "凌海市",
      "code": "210781"
    }, {
      "id": "517",
      "name": "北镇市",
      "code": "210782"
    }]
  }, {
    "id": "45",
    "name": "营口市",
    "code": "210800",
    "children": [{
      "id": "518",
      "name": "市辖区",
      "code": "210801"
    }, {
      "id": "519",
      "name": "站前区",
      "code": "210802"
    }, {
      "id": "520",
      "name": "西市区",
      "code": "210803"
    }, {
      "id": "521",
      "name": "鲅鱼圈区",
      "code": "210804"
    }, {
      "id": "522",
      "name": "老边区",
      "code": "210811"
    }, {
      "id": "523",
      "name": "盖州市",
      "code": "210881"
    }, {
      "id": "524",
      "name": "大石桥市",
      "code": "210882"
    }]
  }, {
    "id": "46",
    "name": "阜新市",
    "code": "210900",
    "children": [{
      "id": "525",
      "name": "市辖区",
      "code": "210901"
    }, {
      "id": "526",
      "name": "海州区",
      "code": "210902"
    }, {
      "id": "527",
      "name": "新邱区",
      "code": "210903"
    }, {
      "id": "528",
      "name": "太平区",
      "code": "210904"
    }, {
      "id": "529",
      "name": "清河门区",
      "code": "210905"
    }, {
      "id": "530",
      "name": "细河区",
      "code": "210911"
    }, {
      "id": "531",
      "name": "阜新蒙古族自治县",
      "code": "210921"
    }, {
      "id": "532",
      "name": "彰武县",
      "code": "210922"
    }]
  }, {
    "id": "47",
    "name": "辽阳市",
    "code": "211000",
    "children": [{
      "id": "533",
      "name": "市辖区",
      "code": "211001"
    }, {
      "id": "534",
      "name": "白塔区",
      "code": "211002"
    }, {
      "id": "535",
      "name": "文圣区",
      "code": "211003"
    }, {
      "id": "536",
      "name": "宏伟区",
      "code": "211004"
    }, {
      "id": "537",
      "name": "弓长岭区",
      "code": "211005"
    }, {
      "id": "538",
      "name": "太子河区",
      "code": "211011"
    }, {
      "id": "539",
      "name": "辽阳县",
      "code": "211021"
    }, {
      "id": "540",
      "name": "灯塔市",
      "code": "211081"
    }]
  }, {
    "id": "48",
    "name": "盘锦市",
    "code": "211100",
    "children": [{
      "id": "541",
      "name": "市辖区",
      "code": "211101"
    }, {
      "id": "542",
      "name": "双台子区",
      "code": "211102"
    }, {
      "id": "543",
      "name": "兴隆台区",
      "code": "211103"
    }, {
      "id": "544",
      "name": "大洼区",
      "code": "211104"
    }, {
      "id": "545",
      "name": "盘山县",
      "code": "211122"
    }]
  }, {
    "id": "49",
    "name": "铁岭市",
    "code": "211200",
    "children": [{
      "id": "546",
      "name": "市辖区",
      "code": "211201"
    }, {
      "id": "547",
      "name": "银州区",
      "code": "211202"
    }, {
      "id": "548",
      "name": "清河区",
      "code": "211204"
    }, {
      "id": "549",
      "name": "铁岭县",
      "code": "211221"
    }, {
      "id": "550",
      "name": "西丰县",
      "code": "211223"
    }, {
      "id": "551",
      "name": "昌图县",
      "code": "211224"
    }, {
      "id": "552",
      "name": "调兵山市",
      "code": "211281"
    }, {
      "id": "553",
      "name": "开原市",
      "code": "211282"
    }]
  }, {
    "id": "50",
    "name": "朝阳市",
    "code": "211300",
    "children": [{
      "id": "554",
      "name": "市辖区",
      "code": "211301"
    }, {
      "id": "555",
      "name": "双塔区",
      "code": "211302"
    }, {
      "id": "556",
      "name": "龙城区",
      "code": "211303"
    }, {
      "id": "557",
      "name": "朝阳县",
      "code": "211321"
    }, {
      "id": "558",
      "name": "建平县",
      "code": "211322"
    }, {
      "id": "559",
      "name": "喀喇沁左翼蒙古族自治县",
      "code": "211324"
    }, {
      "id": "560",
      "name": "北票市",
      "code": "211381"
    }, {
      "id": "561",
      "name": "凌源市",
      "code": "211382"
    }]
  }, {
    "id": "51",
    "name": "葫芦岛市",
    "code": "211400",
    "children": [{
      "id": "562",
      "name": "市辖区",
      "code": "211401"
    }, {
      "id": "563",
      "name": "连山区",
      "code": "211402"
    }, {
      "id": "564",
      "name": "龙港区",
      "code": "211403"
    }, {
      "id": "565",
      "name": "南票区",
      "code": "211404"
    }, {
      "id": "566",
      "name": "绥中县",
      "code": "211421"
    }, {
      "id": "567",
      "name": "建昌县",
      "code": "211422"
    }, {
      "id": "568",
      "name": "兴城市",
      "code": "211481"
    }]
  }]
}, {
  "id": "7",
  "name": "吉林省",
  "code": "220000",
  "children": [{
    "id": "52",
    "name": "长春市",
    "code": "220100",
    "children": [{
      "id": "569",
      "name": "市辖区",
      "code": "220101"
    }, {
      "id": "570",
      "name": "南关区",
      "code": "220102"
    }, {
      "id": "571",
      "name": "宽城区",
      "code": "220103"
    }, {
      "id": "572",
      "name": "朝阳区",
      "code": "220104"
    }, {
      "id": "573",
      "name": "二道区",
      "code": "220105"
    }, {
      "id": "574",
      "name": "绿园区",
      "code": "220106"
    }, {
      "id": "575",
      "name": "双阳区",
      "code": "220112"
    }, {
      "id": "576",
      "name": "九台区",
      "code": "220113"
    }, {
      "id": "577",
      "name": "农安县",
      "code": "220122"
    }, {
      "id": "578",
      "name": "榆树市",
      "code": "220182"
    }, {
      "id": "579",
      "name": "德惠市",
      "code": "220183"
    }]
  }, {
    "id": "53",
    "name": "吉林市",
    "code": "220200",
    "children": [{
      "id": "580",
      "name": "市辖区",
      "code": "220201"
    }, {
      "id": "581",
      "name": "昌邑区",
      "code": "220202"
    }, {
      "id": "582",
      "name": "龙潭区",
      "code": "220203"
    }, {
      "id": "583",
      "name": "船营区",
      "code": "220204"
    }, {
      "id": "584",
      "name": "丰满区",
      "code": "220211"
    }, {
      "id": "585",
      "name": "永吉县",
      "code": "220221"
    }, {
      "id": "586",
      "name": "蛟河市",
      "code": "220281"
    }, {
      "id": "587",
      "name": "桦甸市",
      "code": "220282"
    }, {
      "id": "588",
      "name": "舒兰市",
      "code": "220283"
    }, {
      "id": "589",
      "name": "磐石市",
      "code": "220284"
    }]
  }, {
    "id": "54",
    "name": "四平市",
    "code": "220300",
    "children": [{
      "id": "590",
      "name": "市辖区",
      "code": "220301"
    }, {
      "id": "591",
      "name": "铁西区",
      "code": "220302"
    }, {
      "id": "592",
      "name": "铁东区",
      "code": "220303"
    }, {
      "id": "593",
      "name": "梨树县",
      "code": "220322"
    }, {
      "id": "594",
      "name": "伊通满族自治县",
      "code": "220323"
    }, {
      "id": "595",
      "name": "公主岭市",
      "code": "220381"
    }, {
      "id": "596",
      "name": "双辽市",
      "code": "220382"
    }]
  }, {
    "id": "55",
    "name": "辽源市",
    "code": "220400",
    "children": [{
      "id": "597",
      "name": "市辖区",
      "code": "220401"
    }, {
      "id": "598",
      "name": "龙山区",
      "code": "220402"
    }, {
      "id": "599",
      "name": "西安区",
      "code": "220403"
    }, {
      "id": "600",
      "name": "东丰县",
      "code": "220421"
    }, {
      "id": "601",
      "name": "东辽县",
      "code": "220422"
    }]
  }, {
    "id": "56",
    "name": "通化市",
    "code": "220500",
    "children": [{
      "id": "602",
      "name": "市辖区",
      "code": "220501"
    }, {
      "id": "603",
      "name": "东昌区",
      "code": "220502"
    }, {
      "id": "604",
      "name": "二道江区",
      "code": "220503"
    }, {
      "id": "605",
      "name": "通化县",
      "code": "220521"
    }, {
      "id": "606",
      "name": "辉南县",
      "code": "220523"
    }, {
      "id": "607",
      "name": "柳河县",
      "code": "220524"
    }, {
      "id": "608",
      "name": "梅河口市",
      "code": "220581"
    }, {
      "id": "609",
      "name": "集安市",
      "code": "220582"
    }]
  }, {
    "id": "57",
    "name": "白山市",
    "code": "220600",
    "children": [{
      "id": "610",
      "name": "市辖区",
      "code": "220601"
    }, {
      "id": "611",
      "name": "浑江区",
      "code": "220602"
    }, {
      "id": "612",
      "name": "江源区",
      "code": "220605"
    }, {
      "id": "613",
      "name": "抚松县",
      "code": "220621"
    }, {
      "id": "614",
      "name": "靖宇县",
      "code": "220622"
    }, {
      "id": "615",
      "name": "长白朝鲜族自治县",
      "code": "220623"
    }, {
      "id": "616",
      "name": "临江市",
      "code": "220681"
    }]
  }, {
    "id": "58",
    "name": "松原市",
    "code": "220700",
    "children": [{
      "id": "617",
      "name": "市辖区",
      "code": "220701"
    }, {
      "id": "618",
      "name": "宁江区",
      "code": "220702"
    }, {
      "id": "619",
      "name": "前郭尔罗斯蒙古族自治县",
      "code": "220721"
    }, {
      "id": "620",
      "name": "长岭县",
      "code": "220722"
    }, {
      "id": "621",
      "name": "乾安县",
      "code": "220723"
    }, {
      "id": "622",
      "name": "扶余市",
      "code": "220781"
    }]
  }, {
    "id": "59",
    "name": "白城市",
    "code": "220800",
    "children": [{
      "id": "623",
      "name": "市辖区",
      "code": "220801"
    }, {
      "id": "624",
      "name": "洮北区",
      "code": "220802"
    }, {
      "id": "625",
      "name": "镇赉县",
      "code": "220821"
    }, {
      "id": "626",
      "name": "通榆县",
      "code": "220822"
    }, {
      "id": "627",
      "name": "洮南市",
      "code": "220881"
    }, {
      "id": "628",
      "name": "大安市",
      "code": "220882"
    }]
  }, {
    "id": "60",
    "name": "延边朝鲜族自治州",
    "code": "222400",
    "children": [{
      "id": "629",
      "name": "延吉市",
      "code": "222401"
    }, {
      "id": "630",
      "name": "图们市",
      "code": "222402"
    }, {
      "id": "631",
      "name": "敦化市",
      "code": "222403"
    }, {
      "id": "632",
      "name": "珲春市",
      "code": "222404"
    }, {
      "id": "633",
      "name": "龙井市",
      "code": "222405"
    }, {
      "id": "634",
      "name": "和龙市",
      "code": "222406"
    }, {
      "id": "635",
      "name": "汪清县",
      "code": "222424"
    }, {
      "id": "636",
      "name": "安图县",
      "code": "222426"
    }]
  }]
}, {
  "id": "8",
  "name": "黑龙江省",
  "code": "230000",
  "children": [{
    "id": "61",
    "name": "哈尔滨市",
    "code": "230100",
    "children": [{
      "id": "637",
      "name": "市辖区",
      "code": "230101"
    }, {
      "id": "638",
      "name": "道里区",
      "code": "230102"
    }, {
      "id": "639",
      "name": "南岗区",
      "code": "230103"
    }, {
      "id": "640",
      "name": "道外区",
      "code": "230104"
    }, {
      "id": "641",
      "name": "平房区",
      "code": "230108"
    }, {
      "id": "642",
      "name": "松北区",
      "code": "230109"
    }, {
      "id": "643",
      "name": "香坊区",
      "code": "230110"
    }, {
      "id": "644",
      "name": "呼兰区",
      "code": "230111"
    }, {
      "id": "645",
      "name": "阿城区",
      "code": "230112"
    }, {
      "id": "646",
      "name": "双城区",
      "code": "230113"
    }, {
      "id": "647",
      "name": "依兰县",
      "code": "230123"
    }, {
      "id": "648",
      "name": "方正县",
      "code": "230124"
    }, {
      "id": "649",
      "name": "宾县",
      "code": "230125"
    }, {
      "id": "650",
      "name": "巴彦县",
      "code": "230126"
    }, {
      "id": "651",
      "name": "木兰县",
      "code": "230127"
    }, {
      "id": "652",
      "name": "通河县",
      "code": "230128"
    }, {
      "id": "653",
      "name": "延寿县",
      "code": "230129"
    }, {
      "id": "654",
      "name": "尚志市",
      "code": "230183"
    }, {
      "id": "655",
      "name": "五常市",
      "code": "230184"
    }]
  }, {
    "id": "62",
    "name": "齐齐哈尔市",
    "code": "230200",
    "children": [{
      "id": "656",
      "name": "市辖区",
      "code": "230201"
    }, {
      "id": "657",
      "name": "龙沙区",
      "code": "230202"
    }, {
      "id": "658",
      "name": "建华区",
      "code": "230203"
    }, {
      "id": "659",
      "name": "铁锋区",
      "code": "230204"
    }, {
      "id": "660",
      "name": "昂昂溪区",
      "code": "230205"
    }, {
      "id": "661",
      "name": "富拉尔基区",
      "code": "230206"
    }, {
      "id": "662",
      "name": "碾子山区",
      "code": "230207"
    }, {
      "id": "663",
      "name": "梅里斯达斡尔族区",
      "code": "230208"
    }, {
      "id": "664",
      "name": "龙江县",
      "code": "230221"
    }, {
      "id": "665",
      "name": "依安县",
      "code": "230223"
    }, {
      "id": "666",
      "name": "泰来县",
      "code": "230224"
    }, {
      "id": "667",
      "name": "甘南县",
      "code": "230225"
    }, {
      "id": "668",
      "name": "富裕县",
      "code": "230227"
    }, {
      "id": "669",
      "name": "克山县",
      "code": "230229"
    }, {
      "id": "670",
      "name": "克东县",
      "code": "230230"
    }, {
      "id": "671",
      "name": "拜泉县",
      "code": "230231"
    }, {
      "id": "672",
      "name": "讷河市",
      "code": "230281"
    }]
  }, {
    "id": "63",
    "name": "鸡西市",
    "code": "230300",
    "children": [{
      "id": "673",
      "name": "市辖区",
      "code": "230301"
    }, {
      "id": "674",
      "name": "鸡冠区",
      "code": "230302"
    }, {
      "id": "675",
      "name": "恒山区",
      "code": "230303"
    }, {
      "id": "676",
      "name": "滴道区",
      "code": "230304"
    }, {
      "id": "677",
      "name": "梨树区",
      "code": "230305"
    }, {
      "id": "678",
      "name": "城子河区",
      "code": "230306"
    }, {
      "id": "679",
      "name": "麻山区",
      "code": "230307"
    }, {
      "id": "680",
      "name": "鸡东县",
      "code": "230321"
    }, {
      "id": "681",
      "name": "虎林市",
      "code": "230381"
    }, {
      "id": "682",
      "name": "密山市",
      "code": "230382"
    }]
  }, {
    "id": "64",
    "name": "鹤岗市",
    "code": "230400",
    "children": [{
      "id": "683",
      "name": "市辖区",
      "code": "230401"
    }, {
      "id": "684",
      "name": "向阳区",
      "code": "230402"
    }, {
      "id": "685",
      "name": "工农区",
      "code": "230403"
    }, {
      "id": "686",
      "name": "南山区",
      "code": "230404"
    }, {
      "id": "687",
      "name": "兴安区",
      "code": "230405"
    }, {
      "id": "688",
      "name": "东山区",
      "code": "230406"
    }, {
      "id": "689",
      "name": "兴山区",
      "code": "230407"
    }, {
      "id": "690",
      "name": "萝北县",
      "code": "230421"
    }, {
      "id": "691",
      "name": "绥滨县",
      "code": "230422"
    }]
  }, {
    "id": "65",
    "name": "双鸭山市",
    "code": "230500",
    "children": [{
      "id": "692",
      "name": "市辖区",
      "code": "230501"
    }, {
      "id": "693",
      "name": "尖山区",
      "code": "230502"
    }, {
      "id": "694",
      "name": "岭东区",
      "code": "230503"
    }, {
      "id": "695",
      "name": "四方台区",
      "code": "230505"
    }, {
      "id": "696",
      "name": "宝山区",
      "code": "230506"
    }, {
      "id": "697",
      "name": "集贤县",
      "code": "230521"
    }, {
      "id": "698",
      "name": "友谊县",
      "code": "230522"
    }, {
      "id": "699",
      "name": "宝清县",
      "code": "230523"
    }, {
      "id": "700",
      "name": "饶河县",
      "code": "230524"
    }]
  }, {
    "id": "66",
    "name": "大庆市",
    "code": "230600",
    "children": [{
      "id": "701",
      "name": "市辖区",
      "code": "230601"
    }, {
      "id": "702",
      "name": "萨尔图区",
      "code": "230602"
    }, {
      "id": "703",
      "name": "龙凤区",
      "code": "230603"
    }, {
      "id": "704",
      "name": "让胡路区",
      "code": "230604"
    }, {
      "id": "705",
      "name": "红岗区",
      "code": "230605"
    }, {
      "id": "706",
      "name": "大同区",
      "code": "230606"
    }, {
      "id": "707",
      "name": "肇州县",
      "code": "230621"
    }, {
      "id": "708",
      "name": "肇源县",
      "code": "230622"
    }, {
      "id": "709",
      "name": "林甸县",
      "code": "230623"
    }, {
      "id": "710",
      "name": "杜尔伯特蒙古族自治县",
      "code": "230624"
    }]
  }, {
    "id": "67",
    "name": "伊春市",
    "code": "230700",
    "children": [{
      "id": "711",
      "name": "市辖区",
      "code": "230701"
    }, {
      "id": "712",
      "name": "伊春区",
      "code": "230702"
    }, {
      "id": "713",
      "name": "南岔区",
      "code": "230703"
    }, {
      "id": "714",
      "name": "友好区",
      "code": "230704"
    }, {
      "id": "715",
      "name": "西林区",
      "code": "230705"
    }, {
      "id": "716",
      "name": "翠峦区",
      "code": "230706"
    }, {
      "id": "717",
      "name": "新青区",
      "code": "230707"
    }, {
      "id": "718",
      "name": "美溪区",
      "code": "230708"
    }, {
      "id": "719",
      "name": "金山屯区",
      "code": "230709"
    }, {
      "id": "720",
      "name": "五营区",
      "code": "230710"
    }, {
      "id": "721",
      "name": "乌马河区",
      "code": "230711"
    }, {
      "id": "722",
      "name": "汤旺河区",
      "code": "230712"
    }, {
      "id": "723",
      "name": "带岭区",
      "code": "230713"
    }, {
      "id": "724",
      "name": "乌伊岭区",
      "code": "230714"
    }, {
      "id": "725",
      "name": "红星区",
      "code": "230715"
    }, {
      "id": "726",
      "name": "上甘岭区",
      "code": "230716"
    }, {
      "id": "727",
      "name": "嘉荫县",
      "code": "230722"
    }, {
      "id": "728",
      "name": "铁力市",
      "code": "230781"
    }]
  }, {
    "id": "68",
    "name": "佳木斯市",
    "code": "230800",
    "children": [{
      "id": "729",
      "name": "市辖区",
      "code": "230801"
    }, {
      "id": "730",
      "name": "向阳区",
      "code": "230803"
    }, {
      "id": "731",
      "name": "前进区",
      "code": "230804"
    }, {
      "id": "732",
      "name": "东风区",
      "code": "230805"
    }, {
      "id": "733",
      "name": "郊区",
      "code": "230811"
    }, {
      "id": "734",
      "name": "桦南县",
      "code": "230822"
    }, {
      "id": "735",
      "name": "桦川县",
      "code": "230826"
    }, {
      "id": "736",
      "name": "汤原县",
      "code": "230828"
    }, {
      "id": "737",
      "name": "同江市",
      "code": "230881"
    }, {
      "id": "738",
      "name": "富锦市",
      "code": "230882"
    }, {
      "id": "739",
      "name": "抚远市",
      "code": "230883"
    }]
  }, {
    "id": "69",
    "name": "七台河市",
    "code": "230900",
    "children": [{
      "id": "740",
      "name": "市辖区",
      "code": "230901"
    }, {
      "id": "741",
      "name": "新兴区",
      "code": "230902"
    }, {
      "id": "742",
      "name": "桃山区",
      "code": "230903"
    }, {
      "id": "743",
      "name": "茄子河区",
      "code": "230904"
    }, {
      "id": "744",
      "name": "勃利县",
      "code": "230921"
    }]
  }, {
    "id": "70",
    "name": "牡丹江市",
    "code": "231000",
    "children": [{
      "id": "745",
      "name": "市辖区",
      "code": "231001"
    }, {
      "id": "746",
      "name": "东安区",
      "code": "231002"
    }, {
      "id": "747",
      "name": "阳明区",
      "code": "231003"
    }, {
      "id": "748",
      "name": "爱民区",
      "code": "231004"
    }, {
      "id": "749",
      "name": "西安区",
      "code": "231005"
    }, {
      "id": "750",
      "name": "林口县",
      "code": "231025"
    }, {
      "id": "751",
      "name": "绥芬河市",
      "code": "231081"
    }, {
      "id": "752",
      "name": "海林市",
      "code": "231083"
    }, {
      "id": "753",
      "name": "宁安市",
      "code": "231084"
    }, {
      "id": "754",
      "name": "穆棱市",
      "code": "231085"
    }, {
      "id": "755",
      "name": "东宁市",
      "code": "231086"
    }]
  }, {
    "id": "71",
    "name": "黑河市",
    "code": "231100",
    "children": [{
      "id": "756",
      "name": "市辖区",
      "code": "231101"
    }, {
      "id": "757",
      "name": "爱辉区",
      "code": "231102"
    }, {
      "id": "758",
      "name": "嫩江县",
      "code": "231121"
    }, {
      "id": "759",
      "name": "逊克县",
      "code": "231123"
    }, {
      "id": "760",
      "name": "孙吴县",
      "code": "231124"
    }, {
      "id": "761",
      "name": "北安市",
      "code": "231181"
    }, {
      "id": "762",
      "name": "五大连池市",
      "code": "231182"
    }]
  }, {
    "id": "72",
    "name": "绥化市",
    "code": "231200",
    "children": [{
      "id": "763",
      "name": "市辖区",
      "code": "231201"
    }, {
      "id": "764",
      "name": "北林区",
      "code": "231202"
    }, {
      "id": "765",
      "name": "望奎县",
      "code": "231221"
    }, {
      "id": "766",
      "name": "兰西县",
      "code": "231222"
    }, {
      "id": "767",
      "name": "青冈县",
      "code": "231223"
    }, {
      "id": "768",
      "name": "庆安县",
      "code": "231224"
    }, {
      "id": "769",
      "name": "明水县",
      "code": "231225"
    }, {
      "id": "770",
      "name": "绥棱县",
      "code": "231226"
    }, {
      "id": "771",
      "name": "安达市",
      "code": "231281"
    }, {
      "id": "772",
      "name": "肇东市",
      "code": "231282"
    }, {
      "id": "773",
      "name": "海伦市",
      "code": "231283"
    }]
  }, {
    "id": "73",
    "name": "大兴安岭地区",
    "code": "232700",
    "children": [{
      "id": "774",
      "name": "呼玛县",
      "code": "232721"
    }, {
      "id": "775",
      "name": "塔河县",
      "code": "232722"
    }, {
      "id": "776",
      "name": "漠河县",
      "code": "232723"
    }]
  }]
}, {
  "id": "9",
  "name": "上海市",
  "code": "310000",
  "children": [{
    "id": "74",
    "name": "市辖区",
    "code": "310100",
    "children": [{
      "id": "777",
      "name": "黄浦区",
      "code": "310101"
    }, {
      "id": "778",
      "name": "徐汇区",
      "code": "310104"
    }, {
      "id": "779",
      "name": "长宁区",
      "code": "310105"
    }, {
      "id": "780",
      "name": "静安区",
      "code": "310106"
    }, {
      "id": "781",
      "name": "普陀区",
      "code": "310107"
    }, {
      "id": "782",
      "name": "虹口区",
      "code": "310109"
    }, {
      "id": "783",
      "name": "杨浦区",
      "code": "310110"
    }, {
      "id": "784",
      "name": "闵行区",
      "code": "310112"
    }, {
      "id": "785",
      "name": "宝山区",
      "code": "310113"
    }, {
      "id": "786",
      "name": "嘉定区",
      "code": "310114"
    }, {
      "id": "787",
      "name": "浦东新区",
      "code": "310115"
    }, {
      "id": "788",
      "name": "金山区",
      "code": "310116"
    }, {
      "id": "789",
      "name": "松江区",
      "code": "310117"
    }, {
      "id": "790",
      "name": "青浦区",
      "code": "310118"
    }, {
      "id": "791",
      "name": "奉贤区",
      "code": "310120"
    }, {
      "id": "792",
      "name": "崇明区",
      "code": "310151"
    }]
  }]
}, {
  "id": "10",
  "name": "江苏省",
  "code": "320000",
  "children": [{
    "id": "75",
    "name": "南京市",
    "code": "320100",
    "children": [{
      "id": "793",
      "name": "市辖区",
      "code": "320101"
    }, {
      "id": "794",
      "name": "玄武区",
      "code": "320102"
    }, {
      "id": "795",
      "name": "秦淮区",
      "code": "320104"
    }, {
      "id": "796",
      "name": "建邺区",
      "code": "320105"
    }, {
      "id": "797",
      "name": "鼓楼区",
      "code": "320106"
    }, {
      "id": "798",
      "name": "浦口区",
      "code": "320111"
    }, {
      "id": "799",
      "name": "栖霞区",
      "code": "320113"
    }, {
      "id": "800",
      "name": "雨花台区",
      "code": "320114"
    }, {
      "id": "801",
      "name": "江宁区",
      "code": "320115"
    }, {
      "id": "802",
      "name": "六合区",
      "code": "320116"
    }, {
      "id": "803",
      "name": "溧水区",
      "code": "320117"
    }, {
      "id": "804",
      "name": "高淳区",
      "code": "320118"
    }]
  }, {
    "id": "76",
    "name": "无锡市",
    "code": "320200",
    "children": [{
      "id": "805",
      "name": "市辖区",
      "code": "320201"
    }, {
      "id": "806",
      "name": "锡山区",
      "code": "320205"
    }, {
      "id": "807",
      "name": "惠山区",
      "code": "320206"
    }, {
      "id": "808",
      "name": "滨湖区",
      "code": "320211"
    }, {
      "id": "809",
      "name": "梁溪区",
      "code": "320213"
    }, {
      "id": "810",
      "name": "新吴区",
      "code": "320214"
    }, {
      "id": "811",
      "name": "江阴市",
      "code": "320281"
    }, {
      "id": "812",
      "name": "宜兴市",
      "code": "320282"
    }]
  }, {
    "id": "77",
    "name": "徐州市",
    "code": "320300",
    "children": [{
      "id": "813",
      "name": "市辖区",
      "code": "320301"
    }, {
      "id": "814",
      "name": "鼓楼区",
      "code": "320302"
    }, {
      "id": "815",
      "name": "云龙区",
      "code": "320303"
    }, {
      "id": "816",
      "name": "贾汪区",
      "code": "320305"
    }, {
      "id": "817",
      "name": "泉山区",
      "code": "320311"
    }, {
      "id": "818",
      "name": "铜山区",
      "code": "320312"
    }, {
      "id": "819",
      "name": "丰县",
      "code": "320321"
    }, {
      "id": "820",
      "name": "沛县",
      "code": "320322"
    }, {
      "id": "821",
      "name": "睢宁县",
      "code": "320324"
    }, {
      "id": "822",
      "name": "新沂市",
      "code": "320381"
    }, {
      "id": "823",
      "name": "邳州市",
      "code": "320382"
    }]
  }, {
    "id": "78",
    "name": "常州市",
    "code": "320400",
    "children": [{
      "id": "824",
      "name": "市辖区",
      "code": "320401"
    }, {
      "id": "825",
      "name": "天宁区",
      "code": "320402"
    }, {
      "id": "826",
      "name": "钟楼区",
      "code": "320404"
    }, {
      "id": "827",
      "name": "新北区",
      "code": "320411"
    }, {
      "id": "828",
      "name": "武进区",
      "code": "320412"
    }, {
      "id": "829",
      "name": "金坛区",
      "code": "320413"
    }, {
      "id": "830",
      "name": "溧阳市",
      "code": "320481"
    }]
  }, {
    "id": "79",
    "name": "苏州市",
    "code": "320500",
    "children": [{
      "id": "831",
      "name": "市辖区",
      "code": "320501"
    }, {
      "id": "832",
      "name": "虎丘区",
      "code": "320505"
    }, {
      "id": "833",
      "name": "吴中区",
      "code": "320506"
    }, {
      "id": "834",
      "name": "相城区",
      "code": "320507"
    }, {
      "id": "835",
      "name": "姑苏区",
      "code": "320508"
    }, {
      "id": "836",
      "name": "吴江区",
      "code": "320509"
    }, {
      "id": "837",
      "name": "常熟市",
      "code": "320581"
    }, {
      "id": "838",
      "name": "张家港市",
      "code": "320582"
    }, {
      "id": "839",
      "name": "昆山市",
      "code": "320583"
    }, {
      "id": "840",
      "name": "太仓市",
      "code": "320585"
    }]
  }, {
    "id": "80",
    "name": "南通市",
    "code": "320600",
    "children": [{
      "id": "841",
      "name": "市辖区",
      "code": "320601"
    }, {
      "id": "842",
      "name": "崇川区",
      "code": "320602"
    }, {
      "id": "843",
      "name": "港闸区",
      "code": "320611"
    }, {
      "id": "844",
      "name": "通州区",
      "code": "320612"
    }, {
      "id": "845",
      "name": "海安县",
      "code": "320621"
    }, {
      "id": "846",
      "name": "如东县",
      "code": "320623"
    }, {
      "id": "847",
      "name": "启东市",
      "code": "320681"
    }, {
      "id": "848",
      "name": "如皋市",
      "code": "320682"
    }, {
      "id": "849",
      "name": "海门市",
      "code": "320684"
    }]
  }, {
    "id": "81",
    "name": "连云港市",
    "code": "320700",
    "children": [{
      "id": "850",
      "name": "市辖区",
      "code": "320701"
    }, {
      "id": "851",
      "name": "连云区",
      "code": "320703"
    }, {
      "id": "852",
      "name": "海州区",
      "code": "320706"
    }, {
      "id": "853",
      "name": "赣榆区",
      "code": "320707"
    }, {
      "id": "854",
      "name": "东海县",
      "code": "320722"
    }, {
      "id": "855",
      "name": "灌云县",
      "code": "320723"
    }, {
      "id": "856",
      "name": "灌南县",
      "code": "320724"
    }]
  }, {
    "id": "82",
    "name": "淮安市",
    "code": "320800",
    "children": [{
      "id": "857",
      "name": "市辖区",
      "code": "320801"
    }, {
      "id": "858",
      "name": "淮安区",
      "code": "320803"
    }, {
      "id": "859",
      "name": "淮阴区",
      "code": "320804"
    }, {
      "id": "860",
      "name": "清江浦区",
      "code": "320812"
    }, {
      "id": "861",
      "name": "洪泽区",
      "code": "320813"
    }, {
      "id": "862",
      "name": "涟水县",
      "code": "320826"
    }, {
      "id": "863",
      "name": "盱眙县",
      "code": "320830"
    }, {
      "id": "864",
      "name": "金湖县",
      "code": "320831"
    }]
  }, {
    "id": "83",
    "name": "盐城市",
    "code": "320900",
    "children": [{
      "id": "865",
      "name": "市辖区",
      "code": "320901"
    }, {
      "id": "866",
      "name": "亭湖区",
      "code": "320902"
    }, {
      "id": "867",
      "name": "盐都区",
      "code": "320903"
    }, {
      "id": "868",
      "name": "大丰区",
      "code": "320904"
    }, {
      "id": "869",
      "name": "响水县",
      "code": "320921"
    }, {
      "id": "870",
      "name": "滨海县",
      "code": "320922"
    }, {
      "id": "871",
      "name": "阜宁县",
      "code": "320923"
    }, {
      "id": "872",
      "name": "射阳县",
      "code": "320924"
    }, {
      "id": "873",
      "name": "建湖县",
      "code": "320925"
    }, {
      "id": "874",
      "name": "东台市",
      "code": "320981"
    }]
  }, {
    "id": "84",
    "name": "扬州市",
    "code": "321000",
    "children": [{
      "id": "875",
      "name": "市辖区",
      "code": "321001"
    }, {
      "id": "876",
      "name": "广陵区",
      "code": "321002"
    }, {
      "id": "877",
      "name": "邗江区",
      "code": "321003"
    }, {
      "id": "878",
      "name": "江都区",
      "code": "321012"
    }, {
      "id": "879",
      "name": "宝应县",
      "code": "321023"
    }, {
      "id": "880",
      "name": "仪征市",
      "code": "321081"
    }, {
      "id": "881",
      "name": "高邮市",
      "code": "321084"
    }]
  }, {
    "id": "85",
    "name": "镇江市",
    "code": "321100",
    "children": [{
      "id": "882",
      "name": "市辖区",
      "code": "321101"
    }, {
      "id": "883",
      "name": "京口区",
      "code": "321102"
    }, {
      "id": "884",
      "name": "润州区",
      "code": "321111"
    }, {
      "id": "885",
      "name": "丹徒区",
      "code": "321112"
    }, {
      "id": "886",
      "name": "丹阳市",
      "code": "321181"
    }, {
      "id": "887",
      "name": "扬中市",
      "code": "321182"
    }, {
      "id": "888",
      "name": "句容市",
      "code": "321183"
    }]
  }, {
    "id": "86",
    "name": "泰州市",
    "code": "321200",
    "children": [{
      "id": "889",
      "name": "市辖区",
      "code": "321201"
    }, {
      "id": "890",
      "name": "海陵区",
      "code": "321202"
    }, {
      "id": "891",
      "name": "高港区",
      "code": "321203"
    }, {
      "id": "892",
      "name": "姜堰区",
      "code": "321204"
    }, {
      "id": "893",
      "name": "兴化市",
      "code": "321281"
    }, {
      "id": "894",
      "name": "靖江市",
      "code": "321282"
    }, {
      "id": "895",
      "name": "泰兴市",
      "code": "321283"
    }]
  }, {
    "id": "87",
    "name": "宿迁市",
    "code": "321300",
    "children": [{
      "id": "896",
      "name": "市辖区",
      "code": "321301"
    }, {
      "id": "897",
      "name": "宿城区",
      "code": "321302"
    }, {
      "id": "898",
      "name": "宿豫区",
      "code": "321311"
    }, {
      "id": "899",
      "name": "沭阳县",
      "code": "321322"
    }, {
      "id": "900",
      "name": "泗阳县",
      "code": "321323"
    }, {
      "id": "901",
      "name": "泗洪县",
      "code": "321324"
    }]
  }]
}, {
  "id": "11",
  "name": "浙江省",
  "code": "330000",
  "children": [{
    "id": "88",
    "name": "杭州市",
    "code": "330100",
    "children": [{
      "id": "902",
      "name": "市辖区",
      "code": "330101"
    }, {
      "id": "903",
      "name": "上城区",
      "code": "330102"
    }, {
      "id": "904",
      "name": "下城区",
      "code": "330103"
    }, {
      "id": "905",
      "name": "江干区",
      "code": "330104"
    }, {
      "id": "906",
      "name": "拱墅区",
      "code": "330105"
    }, {
      "id": "907",
      "name": "西湖区",
      "code": "330106"
    }, {
      "id": "908",
      "name": "滨江区",
      "code": "330108"
    }, {
      "id": "909",
      "name": "萧山区",
      "code": "330109"
    }, {
      "id": "910",
      "name": "余杭区",
      "code": "330110"
    }, {
      "id": "911",
      "name": "富阳区",
      "code": "330111"
    }, {
      "id": "912",
      "name": "桐庐县",
      "code": "330122"
    }, {
      "id": "913",
      "name": "淳安县",
      "code": "330127"
    }, {
      "id": "914",
      "name": "建德市",
      "code": "330182"
    }, {
      "id": "915",
      "name": "临安市",
      "code": "330185"
    }]
  }, {
    "id": "89",
    "name": "宁波市",
    "code": "330200",
    "children": [{
      "id": "916",
      "name": "市辖区",
      "code": "330201"
    }, {
      "id": "917",
      "name": "海曙区",
      "code": "330203"
    }, {
      "id": "918",
      "name": "江东区",
      "code": "330204"
    }, {
      "id": "919",
      "name": "江北区",
      "code": "330205"
    }, {
      "id": "920",
      "name": "北仑区",
      "code": "330206"
    }, {
      "id": "921",
      "name": "镇海区",
      "code": "330211"
    }, {
      "id": "922",
      "name": "鄞州区",
      "code": "330212"
    }, {
      "id": "923",
      "name": "象山县",
      "code": "330225"
    }, {
      "id": "924",
      "name": "宁海县",
      "code": "330226"
    }, {
      "id": "925",
      "name": "余姚市",
      "code": "330281"
    }, {
      "id": "926",
      "name": "慈溪市",
      "code": "330282"
    }, {
      "id": "927",
      "name": "奉化市",
      "code": "330283"
    }]
  }, {
    "id": "90",
    "name": "温州市",
    "code": "330300",
    "children": [{
      "id": "928",
      "name": "市辖区",
      "code": "330301"
    }, {
      "id": "929",
      "name": "鹿城区",
      "code": "330302"
    }, {
      "id": "930",
      "name": "龙湾区",
      "code": "330303"
    }, {
      "id": "931",
      "name": "瓯海区",
      "code": "330304"
    }, {
      "id": "932",
      "name": "洞头区",
      "code": "330305"
    }, {
      "id": "933",
      "name": "永嘉县",
      "code": "330324"
    }, {
      "id": "934",
      "name": "平阳县",
      "code": "330326"
    }, {
      "id": "935",
      "name": "苍南县",
      "code": "330327"
    }, {
      "id": "936",
      "name": "文成县",
      "code": "330328"
    }, {
      "id": "937",
      "name": "泰顺县",
      "code": "330329"
    }, {
      "id": "938",
      "name": "瑞安市",
      "code": "330381"
    }, {
      "id": "939",
      "name": "乐清市",
      "code": "330382"
    }]
  }, {
    "id": "91",
    "name": "嘉兴市",
    "code": "330400",
    "children": [{
      "id": "940",
      "name": "市辖区",
      "code": "330401"
    }, {
      "id": "941",
      "name": "南湖区",
      "code": "330402"
    }, {
      "id": "942",
      "name": "秀洲区",
      "code": "330411"
    }, {
      "id": "943",
      "name": "嘉善县",
      "code": "330421"
    }, {
      "id": "944",
      "name": "海盐县",
      "code": "330424"
    }, {
      "id": "945",
      "name": "海宁市",
      "code": "330481"
    }, {
      "id": "946",
      "name": "平湖市",
      "code": "330482"
    }, {
      "id": "947",
      "name": "桐乡市",
      "code": "330483"
    }]
  }, {
    "id": "92",
    "name": "湖州市",
    "code": "330500",
    "children": [{
      "id": "948",
      "name": "市辖区",
      "code": "330501"
    }, {
      "id": "949",
      "name": "吴兴区",
      "code": "330502"
    }, {
      "id": "950",
      "name": "南浔区",
      "code": "330503"
    }, {
      "id": "951",
      "name": "德清县",
      "code": "330521"
    }, {
      "id": "952",
      "name": "长兴县",
      "code": "330522"
    }, {
      "id": "953",
      "name": "安吉县",
      "code": "330523"
    }]
  }, {
    "id": "93",
    "name": "绍兴市",
    "code": "330600",
    "children": [{
      "id": "954",
      "name": "市辖区",
      "code": "330601"
    }, {
      "id": "955",
      "name": "越城区",
      "code": "330602"
    }, {
      "id": "956",
      "name": "柯桥区",
      "code": "330603"
    }, {
      "id": "957",
      "name": "上虞区",
      "code": "330604"
    }, {
      "id": "958",
      "name": "新昌县",
      "code": "330624"
    }, {
      "id": "959",
      "name": "诸暨市",
      "code": "330681"
    }, {
      "id": "960",
      "name": "嵊州市",
      "code": "330683"
    }]
  }, {
    "id": "94",
    "name": "金华市",
    "code": "330700",
    "children": [{
      "id": "961",
      "name": "市辖区",
      "code": "330701"
    }, {
      "id": "962",
      "name": "婺城区",
      "code": "330702"
    }, {
      "id": "963",
      "name": "金东区",
      "code": "330703"
    }, {
      "id": "964",
      "name": "武义县",
      "code": "330723"
    }, {
      "id": "965",
      "name": "浦江县",
      "code": "330726"
    }, {
      "id": "966",
      "name": "磐安县",
      "code": "330727"
    }, {
      "id": "967",
      "name": "兰溪市",
      "code": "330781"
    }, {
      "id": "968",
      "name": "义乌市",
      "code": "330782"
    }, {
      "id": "969",
      "name": "东阳市",
      "code": "330783"
    }, {
      "id": "970",
      "name": "永康市",
      "code": "330784"
    }]
  }, {
    "id": "95",
    "name": "衢州市",
    "code": "330800",
    "children": [{
      "id": "971",
      "name": "市辖区",
      "code": "330801"
    }, {
      "id": "972",
      "name": "柯城区",
      "code": "330802"
    }, {
      "id": "973",
      "name": "衢江区",
      "code": "330803"
    }, {
      "id": "974",
      "name": "常山县",
      "code": "330822"
    }, {
      "id": "975",
      "name": "开化县",
      "code": "330824"
    }, {
      "id": "976",
      "name": "龙游县",
      "code": "330825"
    }, {
      "id": "977",
      "name": "江山市",
      "code": "330881"
    }]
  }, {
    "id": "96",
    "name": "舟山市",
    "code": "330900",
    "children": [{
      "id": "978",
      "name": "市辖区",
      "code": "330901"
    }, {
      "id": "979",
      "name": "定海区",
      "code": "330902"
    }, {
      "id": "980",
      "name": "普陀区",
      "code": "330903"
    }, {
      "id": "981",
      "name": "岱山县",
      "code": "330921"
    }, {
      "id": "982",
      "name": "嵊泗县",
      "code": "330922"
    }]
  }, {
    "id": "97",
    "name": "台州市",
    "code": "331000",
    "children": [{
      "id": "983",
      "name": "市辖区",
      "code": "331001"
    }, {
      "id": "984",
      "name": "椒江区",
      "code": "331002"
    }, {
      "id": "985",
      "name": "黄岩区",
      "code": "331003"
    }, {
      "id": "986",
      "name": "路桥区",
      "code": "331004"
    }, {
      "id": "987",
      "name": "玉环县",
      "code": "331021"
    }, {
      "id": "988",
      "name": "三门县",
      "code": "331022"
    }, {
      "id": "989",
      "name": "天台县",
      "code": "331023"
    }, {
      "id": "990",
      "name": "仙居县",
      "code": "331024"
    }, {
      "id": "991",
      "name": "温岭市",
      "code": "331081"
    }, {
      "id": "992",
      "name": "临海市",
      "code": "331082"
    }]
  }, {
    "id": "98",
    "name": "丽水市",
    "code": "331100",
    "children": [{
      "id": "993",
      "name": "市辖区",
      "code": "331101"
    }, {
      "id": "994",
      "name": "莲都区",
      "code": "331102"
    }, {
      "id": "995",
      "name": "青田县",
      "code": "331121"
    }, {
      "id": "996",
      "name": "缙云县",
      "code": "331122"
    }, {
      "id": "997",
      "name": "遂昌县",
      "code": "331123"
    }, {
      "id": "998",
      "name": "松阳县",
      "code": "331124"
    }, {
      "id": "999",
      "name": "云和县",
      "code": "331125"
    }, {
      "id": "1000",
      "name": "庆元县",
      "code": "331126"
    }, {
      "id": "1001",
      "name": "景宁畲族自治县",
      "code": "331127"
    }, {
      "id": "1002",
      "name": "龙泉市",
      "code": "331181"
    }]
  }]
}, {
  "id": "12",
  "name": "安徽省",
  "code": "340000",
  "children": [{
    "id": "99",
    "name": "合肥市",
    "code": "340100",
    "children": [{
      "id": "1003",
      "name": "市辖区",
      "code": "340101"
    }, {
      "id": "1004",
      "name": "瑶海区",
      "code": "340102"
    }, {
      "id": "1005",
      "name": "庐阳区",
      "code": "340103"
    }, {
      "id": "1006",
      "name": "蜀山区",
      "code": "340104"
    }, {
      "id": "1007",
      "name": "包河区",
      "code": "340111"
    }, {
      "id": "1008",
      "name": "长丰县",
      "code": "340121"
    }, {
      "id": "1009",
      "name": "肥东县",
      "code": "340122"
    }, {
      "id": "1010",
      "name": "肥西县",
      "code": "340123"
    }, {
      "id": "1011",
      "name": "庐江县",
      "code": "340124"
    }, {
      "id": "1012",
      "name": "巢湖市",
      "code": "340181"
    }]
  }, {
    "id": "100",
    "name": "芜湖市",
    "code": "340200",
    "children": [{
      "id": "1013",
      "name": "市辖区",
      "code": "340201"
    }, {
      "id": "1014",
      "name": "镜湖区",
      "code": "340202"
    }, {
      "id": "1015",
      "name": "弋江区",
      "code": "340203"
    }, {
      "id": "1016",
      "name": "鸠江区",
      "code": "340207"
    }, {
      "id": "1017",
      "name": "三山区",
      "code": "340208"
    }, {
      "id": "1018",
      "name": "芜湖县",
      "code": "340221"
    }, {
      "id": "1019",
      "name": "繁昌县",
      "code": "340222"
    }, {
      "id": "1020",
      "name": "南陵县",
      "code": "340223"
    }, {
      "id": "1021",
      "name": "无为县",
      "code": "340225"
    }]
  }, {
    "id": "101",
    "name": "蚌埠市",
    "code": "340300",
    "children": [{
      "id": "1022",
      "name": "市辖区",
      "code": "340301"
    }, {
      "id": "1023",
      "name": "龙子湖区",
      "code": "340302"
    }, {
      "id": "1024",
      "name": "蚌山区",
      "code": "340303"
    }, {
      "id": "1025",
      "name": "禹会区",
      "code": "340304"
    }, {
      "id": "1026",
      "name": "淮上区",
      "code": "340311"
    }, {
      "id": "1027",
      "name": "怀远县",
      "code": "340321"
    }, {
      "id": "1028",
      "name": "五河县",
      "code": "340322"
    }, {
      "id": "1029",
      "name": "固镇县",
      "code": "340323"
    }]
  }, {
    "id": "102",
    "name": "淮南市",
    "code": "340400",
    "children": [{
      "id": "1030",
      "name": "市辖区",
      "code": "340401"
    }, {
      "id": "1031",
      "name": "大通区",
      "code": "340402"
    }, {
      "id": "1032",
      "name": "田家庵区",
      "code": "340403"
    }, {
      "id": "1033",
      "name": "谢家集区",
      "code": "340404"
    }, {
      "id": "1034",
      "name": "八公山区",
      "code": "340405"
    }, {
      "id": "1035",
      "name": "潘集区",
      "code": "340406"
    }, {
      "id": "1036",
      "name": "凤台县",
      "code": "340421"
    }, {
      "id": "1037",
      "name": "寿县",
      "code": "340422"
    }]
  }, {
    "id": "103",
    "name": "马鞍山市",
    "code": "340500",
    "children": [{
      "id": "1038",
      "name": "市辖区",
      "code": "340501"
    }, {
      "id": "1039",
      "name": "花山区",
      "code": "340503"
    }, {
      "id": "1040",
      "name": "雨山区",
      "code": "340504"
    }, {
      "id": "1041",
      "name": "博望区",
      "code": "340506"
    }, {
      "id": "1042",
      "name": "当涂县",
      "code": "340521"
    }, {
      "id": "1043",
      "name": "含山县",
      "code": "340522"
    }, {
      "id": "1044",
      "name": "和县",
      "code": "340523"
    }]
  }, {
    "id": "104",
    "name": "淮北市",
    "code": "340600",
    "children": [{
      "id": "1045",
      "name": "市辖区",
      "code": "340601"
    }, {
      "id": "1046",
      "name": "杜集区",
      "code": "340602"
    }, {
      "id": "1047",
      "name": "相山区",
      "code": "340603"
    }, {
      "id": "1048",
      "name": "烈山区",
      "code": "340604"
    }, {
      "id": "1049",
      "name": "濉溪县",
      "code": "340621"
    }]
  }, {
    "id": "105",
    "name": "铜陵市",
    "code": "340700",
    "children": [{
      "id": "1050",
      "name": "市辖区",
      "code": "340701"
    }, {
      "id": "1051",
      "name": "铜官区",
      "code": "340705"
    }, {
      "id": "1052",
      "name": "义安区",
      "code": "340706"
    }, {
      "id": "1053",
      "name": "郊区",
      "code": "340711"
    }, {
      "id": "1054",
      "name": "枞阳县",
      "code": "340722"
    }]
  }, {
    "id": "106",
    "name": "安庆市",
    "code": "340800",
    "children": [{
      "id": "1055",
      "name": "市辖区",
      "code": "340801"
    }, {
      "id": "1056",
      "name": "迎江区",
      "code": "340802"
    }, {
      "id": "1057",
      "name": "大观区",
      "code": "340803"
    }, {
      "id": "1058",
      "name": "宜秀区",
      "code": "340811"
    }, {
      "id": "1059",
      "name": "怀宁县",
      "code": "340822"
    }, {
      "id": "1060",
      "name": "潜山县",
      "code": "340824"
    }, {
      "id": "1061",
      "name": "太湖县",
      "code": "340825"
    }, {
      "id": "1062",
      "name": "宿松县",
      "code": "340826"
    }, {
      "id": "1063",
      "name": "望江县",
      "code": "340827"
    }, {
      "id": "1064",
      "name": "岳西县",
      "code": "340828"
    }, {
      "id": "1065",
      "name": "桐城市",
      "code": "340881"
    }]
  }, {
    "id": "107",
    "name": "黄山市",
    "code": "341000",
    "children": [{
      "id": "1066",
      "name": "市辖区",
      "code": "341001"
    }, {
      "id": "1067",
      "name": "屯溪区",
      "code": "341002"
    }, {
      "id": "1068",
      "name": "黄山区",
      "code": "341003"
    }, {
      "id": "1069",
      "name": "徽州区",
      "code": "341004"
    }, {
      "id": "1070",
      "name": "歙县",
      "code": "341021"
    }, {
      "id": "1071",
      "name": "休宁县",
      "code": "341022"
    }, {
      "id": "1072",
      "name": "黟县",
      "code": "341023"
    }, {
      "id": "1073",
      "name": "祁门县",
      "code": "341024"
    }]
  }, {
    "id": "108",
    "name": "滁州市",
    "code": "341100",
    "children": [{
      "id": "1074",
      "name": "市辖区",
      "code": "341101"
    }, {
      "id": "1075",
      "name": "琅琊区",
      "code": "341102"
    }, {
      "id": "1076",
      "name": "南谯区",
      "code": "341103"
    }, {
      "id": "1077",
      "name": "来安县",
      "code": "341122"
    }, {
      "id": "1078",
      "name": "全椒县",
      "code": "341124"
    }, {
      "id": "1079",
      "name": "定远县",
      "code": "341125"
    }, {
      "id": "1080",
      "name": "凤阳县",
      "code": "341126"
    }, {
      "id": "1081",
      "name": "天长市",
      "code": "341181"
    }, {
      "id": "1082",
      "name": "明光市",
      "code": "341182"
    }]
  }, {
    "id": "109",
    "name": "阜阳市",
    "code": "341200",
    "children": [{
      "id": "1083",
      "name": "市辖区",
      "code": "341201"
    }, {
      "id": "1084",
      "name": "颍州区",
      "code": "341202"
    }, {
      "id": "1085",
      "name": "颍东区",
      "code": "341203"
    }, {
      "id": "1086",
      "name": "颍泉区",
      "code": "341204"
    }, {
      "id": "1087",
      "name": "临泉县",
      "code": "341221"
    }, {
      "id": "1088",
      "name": "太和县",
      "code": "341222"
    }, {
      "id": "1089",
      "name": "阜南县",
      "code": "341225"
    }, {
      "id": "1090",
      "name": "颍上县",
      "code": "341226"
    }, {
      "id": "1091",
      "name": "界首市",
      "code": "341282"
    }]
  }, {
    "id": "110",
    "name": "宿州市",
    "code": "341300",
    "children": [{
      "id": "1092",
      "name": "市辖区",
      "code": "341301"
    }, {
      "id": "1093",
      "name": "埇桥区",
      "code": "341302"
    }, {
      "id": "1094",
      "name": "砀山县",
      "code": "341321"
    }, {
      "id": "1095",
      "name": "萧县",
      "code": "341322"
    }, {
      "id": "1096",
      "name": "灵璧县",
      "code": "341323"
    }, {
      "id": "1097",
      "name": "泗县",
      "code": "341324"
    }]
  }, {
    "id": "111",
    "name": "六安市",
    "code": "341500",
    "children": [{
      "id": "1098",
      "name": "市辖区",
      "code": "341501"
    }, {
      "id": "1099",
      "name": "金安区",
      "code": "341502"
    }, {
      "id": "1100",
      "name": "裕安区",
      "code": "341503"
    }, {
      "id": "1101",
      "name": "叶集区",
      "code": "341504"
    }, {
      "id": "1102",
      "name": "霍邱县",
      "code": "341522"
    }, {
      "id": "1103",
      "name": "舒城县",
      "code": "341523"
    }, {
      "id": "1104",
      "name": "金寨县",
      "code": "341524"
    }, {
      "id": "1105",
      "name": "霍山县",
      "code": "341525"
    }]
  }, {
    "id": "112",
    "name": "亳州市",
    "code": "341600",
    "children": [{
      "id": "1106",
      "name": "市辖区",
      "code": "341601"
    }, {
      "id": "1107",
      "name": "谯城区",
      "code": "341602"
    }, {
      "id": "1108",
      "name": "涡阳县",
      "code": "341621"
    }, {
      "id": "1109",
      "name": "蒙城县",
      "code": "341622"
    }, {
      "id": "1110",
      "name": "利辛县",
      "code": "341623"
    }]
  }, {
    "id": "113",
    "name": "池州市",
    "code": "341700",
    "children": [{
      "id": "1111",
      "name": "市辖区",
      "code": "341701"
    }, {
      "id": "1112",
      "name": "贵池区",
      "code": "341702"
    }, {
      "id": "1113",
      "name": "东至县",
      "code": "341721"
    }, {
      "id": "1114",
      "name": "石台县",
      "code": "341722"
    }, {
      "id": "1115",
      "name": "青阳县",
      "code": "341723"
    }]
  }, {
    "id": "114",
    "name": "宣城市",
    "code": "341800",
    "children": [{
      "id": "1116",
      "name": "市辖区",
      "code": "341801"
    }, {
      "id": "1117",
      "name": "宣州区",
      "code": "341802"
    }, {
      "id": "1118",
      "name": "郎溪县",
      "code": "341821"
    }, {
      "id": "1119",
      "name": "广德县",
      "code": "341822"
    }, {
      "id": "1120",
      "name": "泾县",
      "code": "341823"
    }, {
      "id": "1121",
      "name": "绩溪县",
      "code": "341824"
    }, {
      "id": "1122",
      "name": "旌德县",
      "code": "341825"
    }, {
      "id": "1123",
      "name": "宁国市",
      "code": "341881"
    }]
  }]
}, {
  "id": "13",
  "name": "福建省",
  "code": "350000",
  "children": [{
    "id": "115",
    "name": "福州市",
    "code": "350100",
    "children": [{
      "id": "1124",
      "name": "市辖区",
      "code": "350101"
    }, {
      "id": "1125",
      "name": "鼓楼区",
      "code": "350102"
    }, {
      "id": "1126",
      "name": "台江区",
      "code": "350103"
    }, {
      "id": "1127",
      "name": "仓山区",
      "code": "350104"
    }, {
      "id": "1128",
      "name": "马尾区",
      "code": "350105"
    }, {
      "id": "1129",
      "name": "晋安区",
      "code": "350111"
    }, {
      "id": "1130",
      "name": "闽侯县",
      "code": "350121"
    }, {
      "id": "1131",
      "name": "连江县",
      "code": "350122"
    }, {
      "id": "1132",
      "name": "罗源县",
      "code": "350123"
    }, {
      "id": "1133",
      "name": "闽清县",
      "code": "350124"
    }, {
      "id": "1134",
      "name": "永泰县",
      "code": "350125"
    }, {
      "id": "1135",
      "name": "平潭县",
      "code": "350128"
    }, {
      "id": "1136",
      "name": "福清市",
      "code": "350181"
    }, {
      "id": "1137",
      "name": "长乐市",
      "code": "350182"
    }]
  }, {
    "id": "116",
    "name": "厦门市",
    "code": "350200",
    "children": [{
      "id": "1138",
      "name": "市辖区",
      "code": "350201"
    }, {
      "id": "1139",
      "name": "思明区",
      "code": "350203"
    }, {
      "id": "1140",
      "name": "海沧区",
      "code": "350205"
    }, {
      "id": "1141",
      "name": "湖里区",
      "code": "350206"
    }, {
      "id": "1142",
      "name": "集美区",
      "code": "350211"
    }, {
      "id": "1143",
      "name": "同安区",
      "code": "350212"
    }, {
      "id": "1144",
      "name": "翔安区",
      "code": "350213"
    }]
  }, {
    "id": "117",
    "name": "莆田市",
    "code": "350300",
    "children": [{
      "id": "1145",
      "name": "市辖区",
      "code": "350301"
    }, {
      "id": "1146",
      "name": "城厢区",
      "code": "350302"
    }, {
      "id": "1147",
      "name": "涵江区",
      "code": "350303"
    }, {
      "id": "1148",
      "name": "荔城区",
      "code": "350304"
    }, {
      "id": "1149",
      "name": "秀屿区",
      "code": "350305"
    }, {
      "id": "1150",
      "name": "仙游县",
      "code": "350322"
    }]
  }, {
    "id": "118",
    "name": "三明市",
    "code": "350400",
    "children": [{
      "id": "1151",
      "name": "市辖区",
      "code": "350401"
    }, {
      "id": "1152",
      "name": "梅列区",
      "code": "350402"
    }, {
      "id": "1153",
      "name": "三元区",
      "code": "350403"
    }, {
      "id": "1154",
      "name": "明溪县",
      "code": "350421"
    }, {
      "id": "1155",
      "name": "清流县",
      "code": "350423"
    }, {
      "id": "1156",
      "name": "宁化县",
      "code": "350424"
    }, {
      "id": "1157",
      "name": "大田县",
      "code": "350425"
    }, {
      "id": "1158",
      "name": "尤溪县",
      "code": "350426"
    }, {
      "id": "1159",
      "name": "沙县",
      "code": "350427"
    }, {
      "id": "1160",
      "name": "将乐县",
      "code": "350428"
    }, {
      "id": "1161",
      "name": "泰宁县",
      "code": "350429"
    }, {
      "id": "1162",
      "name": "建宁县",
      "code": "350430"
    }, {
      "id": "1163",
      "name": "永安市",
      "code": "350481"
    }]
  }, {
    "id": "119",
    "name": "泉州市",
    "code": "350500",
    "children": [{
      "id": "1164",
      "name": "市辖区",
      "code": "350501"
    }, {
      "id": "1165",
      "name": "鲤城区",
      "code": "350502"
    }, {
      "id": "1166",
      "name": "丰泽区",
      "code": "350503"
    }, {
      "id": "1167",
      "name": "洛江区",
      "code": "350504"
    }, {
      "id": "1168",
      "name": "泉港区",
      "code": "350505"
    }, {
      "id": "1169",
      "name": "惠安县",
      "code": "350521"
    }, {
      "id": "1170",
      "name": "安溪县",
      "code": "350524"
    }, {
      "id": "1171",
      "name": "永春县",
      "code": "350525"
    }, {
      "id": "1172",
      "name": "德化县",
      "code": "350526"
    }, {
      "id": "1173",
      "name": "金门县",
      "code": "350527"
    }, {
      "id": "1174",
      "name": "石狮市",
      "code": "350581"
    }, {
      "id": "1175",
      "name": "晋江市",
      "code": "350582"
    }, {
      "id": "1176",
      "name": "南安市",
      "code": "350583"
    }]
  }, {
    "id": "120",
    "name": "漳州市",
    "code": "350600",
    "children": [{
      "id": "1177",
      "name": "市辖区",
      "code": "350601"
    }, {
      "id": "1178",
      "name": "芗城区",
      "code": "350602"
    }, {
      "id": "1179",
      "name": "龙文区",
      "code": "350603"
    }, {
      "id": "1180",
      "name": "云霄县",
      "code": "350622"
    }, {
      "id": "1181",
      "name": "漳浦县",
      "code": "350623"
    }, {
      "id": "1182",
      "name": "诏安县",
      "code": "350624"
    }, {
      "id": "1183",
      "name": "长泰县",
      "code": "350625"
    }, {
      "id": "1184",
      "name": "东山县",
      "code": "350626"
    }, {
      "id": "1185",
      "name": "南靖县",
      "code": "350627"
    }, {
      "id": "1186",
      "name": "平和县",
      "code": "350628"
    }, {
      "id": "1187",
      "name": "华安县",
      "code": "350629"
    }, {
      "id": "1188",
      "name": "龙海市",
      "code": "350681"
    }]
  }, {
    "id": "121",
    "name": "南平市",
    "code": "350700",
    "children": [{
      "id": "1189",
      "name": "市辖区",
      "code": "350701"
    }, {
      "id": "1190",
      "name": "延平区",
      "code": "350702"
    }, {
      "id": "1191",
      "name": "建阳区",
      "code": "350703"
    }, {
      "id": "1192",
      "name": "顺昌县",
      "code": "350721"
    }, {
      "id": "1193",
      "name": "浦城县",
      "code": "350722"
    }, {
      "id": "1194",
      "name": "光泽县",
      "code": "350723"
    }, {
      "id": "1195",
      "name": "松溪县",
      "code": "350724"
    }, {
      "id": "1196",
      "name": "政和县",
      "code": "350725"
    }, {
      "id": "1197",
      "name": "邵武市",
      "code": "350781"
    }, {
      "id": "1198",
      "name": "武夷山市",
      "code": "350782"
    }, {
      "id": "1199",
      "name": "建瓯市",
      "code": "350783"
    }]
  }, {
    "id": "122",
    "name": "龙岩市",
    "code": "350800",
    "children": [{
      "id": "1200",
      "name": "市辖区",
      "code": "350801"
    }, {
      "id": "1201",
      "name": "新罗区",
      "code": "350802"
    }, {
      "id": "1202",
      "name": "永定区",
      "code": "350803"
    }, {
      "id": "1203",
      "name": "长汀县",
      "code": "350821"
    }, {
      "id": "1204",
      "name": "上杭县",
      "code": "350823"
    }, {
      "id": "1205",
      "name": "武平县",
      "code": "350824"
    }, {
      "id": "1206",
      "name": "连城县",
      "code": "350825"
    }, {
      "id": "1207",
      "name": "漳平市",
      "code": "350881"
    }]
  }, {
    "id": "123",
    "name": "宁德市",
    "code": "350900",
    "children": [{
      "id": "1208",
      "name": "市辖区",
      "code": "350901"
    }, {
      "id": "1209",
      "name": "蕉城区",
      "code": "350902"
    }, {
      "id": "1210",
      "name": "霞浦县",
      "code": "350921"
    }, {
      "id": "1211",
      "name": "古田县",
      "code": "350922"
    }, {
      "id": "1212",
      "name": "屏南县",
      "code": "350923"
    }, {
      "id": "1213",
      "name": "寿宁县",
      "code": "350924"
    }, {
      "id": "1214",
      "name": "周宁县",
      "code": "350925"
    }, {
      "id": "1215",
      "name": "柘荣县",
      "code": "350926"
    }, {
      "id": "1216",
      "name": "福安市",
      "code": "350981"
    }, {
      "id": "1217",
      "name": "福鼎市",
      "code": "350982"
    }]
  }]
}, {
  "id": "14",
  "name": "江西省",
  "code": "360000",
  "children": [{
    "id": "124",
    "name": "南昌市",
    "code": "360100",
    "children": [{
      "id": "1218",
      "name": "市辖区",
      "code": "360101"
    }, {
      "id": "1219",
      "name": "东湖区",
      "code": "360102"
    }, {
      "id": "1220",
      "name": "西湖区",
      "code": "360103"
    }, {
      "id": "1221",
      "name": "青云谱区",
      "code": "360104"
    }, {
      "id": "1222",
      "name": "湾里区",
      "code": "360105"
    }, {
      "id": "1223",
      "name": "青山湖区",
      "code": "360111"
    }, {
      "id": "1224",
      "name": "新建区",
      "code": "360112"
    }, {
      "id": "1225",
      "name": "南昌县",
      "code": "360121"
    }, {
      "id": "1226",
      "name": "安义县",
      "code": "360123"
    }, {
      "id": "1227",
      "name": "进贤县",
      "code": "360124"
    }]
  }, {
    "id": "125",
    "name": "景德镇市",
    "code": "360200",
    "children": [{
      "id": "1228",
      "name": "市辖区",
      "code": "360201"
    }, {
      "id": "1229",
      "name": "昌江区",
      "code": "360202"
    }, {
      "id": "1230",
      "name": "珠山区",
      "code": "360203"
    }, {
      "id": "1231",
      "name": "浮梁县",
      "code": "360222"
    }, {
      "id": "1232",
      "name": "乐平市",
      "code": "360281"
    }]
  }, {
    "id": "126",
    "name": "萍乡市",
    "code": "360300",
    "children": [{
      "id": "1233",
      "name": "市辖区",
      "code": "360301"
    }, {
      "id": "1234",
      "name": "安源区",
      "code": "360302"
    }, {
      "id": "1235",
      "name": "湘东区",
      "code": "360313"
    }, {
      "id": "1236",
      "name": "莲花县",
      "code": "360321"
    }, {
      "id": "1237",
      "name": "上栗县",
      "code": "360322"
    }, {
      "id": "1238",
      "name": "芦溪县",
      "code": "360323"
    }]
  }, {
    "id": "127",
    "name": "九江市",
    "code": "360400",
    "children": [{
      "id": "1239",
      "name": "市辖区",
      "code": "360401"
    }, {
      "id": "1240",
      "name": "濂溪区",
      "code": "360402"
    }, {
      "id": "1241",
      "name": "浔阳区",
      "code": "360403"
    }, {
      "id": "1242",
      "name": "九江县",
      "code": "360421"
    }, {
      "id": "1243",
      "name": "武宁县",
      "code": "360423"
    }, {
      "id": "1244",
      "name": "修水县",
      "code": "360424"
    }, {
      "id": "1245",
      "name": "永修县",
      "code": "360425"
    }, {
      "id": "1246",
      "name": "德安县",
      "code": "360426"
    }, {
      "id": "1247",
      "name": "都昌县",
      "code": "360428"
    }, {
      "id": "1248",
      "name": "湖口县",
      "code": "360429"
    }, {
      "id": "1249",
      "name": "彭泽县",
      "code": "360430"
    }, {
      "id": "1250",
      "name": "瑞昌市",
      "code": "360481"
    }, {
      "id": "1251",
      "name": "共青城市",
      "code": "360482"
    }, {
      "id": "1252",
      "name": "庐山市",
      "code": "360483"
    }]
  }, {
    "id": "128",
    "name": "新余市",
    "code": "360500",
    "children": [{
      "id": "1253",
      "name": "市辖区",
      "code": "360501"
    }, {
      "id": "1254",
      "name": "渝水区",
      "code": "360502"
    }, {
      "id": "1255",
      "name": "分宜县",
      "code": "360521"
    }]
  }, {
    "id": "129",
    "name": "鹰潭市",
    "code": "360600",
    "children": [{
      "id": "1256",
      "name": "市辖区",
      "code": "360601"
    }, {
      "id": "1257",
      "name": "月湖区",
      "code": "360602"
    }, {
      "id": "1258",
      "name": "余江县",
      "code": "360622"
    }, {
      "id": "1259",
      "name": "贵溪市",
      "code": "360681"
    }]
  }, {
    "id": "130",
    "name": "赣州市",
    "code": "360700",
    "children": [{
      "id": "1260",
      "name": "市辖区",
      "code": "360701"
    }, {
      "id": "1261",
      "name": "章贡区",
      "code": "360702"
    }, {
      "id": "1262",
      "name": "南康区",
      "code": "360703"
    }, {
      "id": "1263",
      "name": "赣县",
      "code": "360721"
    }, {
      "id": "1264",
      "name": "信丰县",
      "code": "360722"
    }, {
      "id": "1265",
      "name": "大余县",
      "code": "360723"
    }, {
      "id": "1266",
      "name": "上犹县",
      "code": "360724"
    }, {
      "id": "1267",
      "name": "崇义县",
      "code": "360725"
    }, {
      "id": "1268",
      "name": "安远县",
      "code": "360726"
    }, {
      "id": "1269",
      "name": "龙南县",
      "code": "360727"
    }, {
      "id": "1270",
      "name": "定南县",
      "code": "360728"
    }, {
      "id": "1271",
      "name": "全南县",
      "code": "360729"
    }, {
      "id": "1272",
      "name": "宁都县",
      "code": "360730"
    }, {
      "id": "1273",
      "name": "于都县",
      "code": "360731"
    }, {
      "id": "1274",
      "name": "兴国县",
      "code": "360732"
    }, {
      "id": "1275",
      "name": "会昌县",
      "code": "360733"
    }, {
      "id": "1276",
      "name": "寻乌县",
      "code": "360734"
    }, {
      "id": "1277",
      "name": "石城县",
      "code": "360735"
    }, {
      "id": "1278",
      "name": "瑞金市",
      "code": "360781"
    }]
  }, {
    "id": "131",
    "name": "吉安市",
    "code": "360800",
    "children": [{
      "id": "1279",
      "name": "市辖区",
      "code": "360801"
    }, {
      "id": "1280",
      "name": "吉州区",
      "code": "360802"
    }, {
      "id": "1281",
      "name": "青原区",
      "code": "360803"
    }, {
      "id": "1282",
      "name": "吉安县",
      "code": "360821"
    }, {
      "id": "1283",
      "name": "吉水县",
      "code": "360822"
    }, {
      "id": "1284",
      "name": "峡江县",
      "code": "360823"
    }, {
      "id": "1285",
      "name": "新干县",
      "code": "360824"
    }, {
      "id": "1286",
      "name": "永丰县",
      "code": "360825"
    }, {
      "id": "1287",
      "name": "泰和县",
      "code": "360826"
    }, {
      "id": "1288",
      "name": "遂川县",
      "code": "360827"
    }, {
      "id": "1289",
      "name": "万安县",
      "code": "360828"
    }, {
      "id": "1290",
      "name": "安福县",
      "code": "360829"
    }, {
      "id": "1291",
      "name": "永新县",
      "code": "360830"
    }, {
      "id": "1292",
      "name": "井冈山市",
      "code": "360881"
    }]
  }, {
    "id": "132",
    "name": "宜春市",
    "code": "360900",
    "children": [{
      "id": "1293",
      "name": "市辖区",
      "code": "360901"
    }, {
      "id": "1294",
      "name": "袁州区",
      "code": "360902"
    }, {
      "id": "1295",
      "name": "奉新县",
      "code": "360921"
    }, {
      "id": "1296",
      "name": "万载县",
      "code": "360922"
    }, {
      "id": "1297",
      "name": "上高县",
      "code": "360923"
    }, {
      "id": "1298",
      "name": "宜丰县",
      "code": "360924"
    }, {
      "id": "1299",
      "name": "靖安县",
      "code": "360925"
    }, {
      "id": "1300",
      "name": "铜鼓县",
      "code": "360926"
    }, {
      "id": "1301",
      "name": "丰城市",
      "code": "360981"
    }, {
      "id": "1302",
      "name": "樟树市",
      "code": "360982"
    }, {
      "id": "1303",
      "name": "高安市",
      "code": "360983"
    }]
  }, {
    "id": "133",
    "name": "抚州市",
    "code": "361000",
    "children": [{
      "id": "1304",
      "name": "市辖区",
      "code": "361001"
    }, {
      "id": "1305",
      "name": "临川区",
      "code": "361002"
    }, {
      "id": "1306",
      "name": "南城县",
      "code": "361021"
    }, {
      "id": "1307",
      "name": "黎川县",
      "code": "361022"
    }, {
      "id": "1308",
      "name": "南丰县",
      "code": "361023"
    }, {
      "id": "1309",
      "name": "崇仁县",
      "code": "361024"
    }, {
      "id": "1310",
      "name": "乐安县",
      "code": "361025"
    }, {
      "id": "1311",
      "name": "宜黄县",
      "code": "361026"
    }, {
      "id": "1312",
      "name": "金溪县",
      "code": "361027"
    }, {
      "id": "1313",
      "name": "资溪县",
      "code": "361028"
    }, {
      "id": "1314",
      "name": "东乡县",
      "code": "361029"
    }, {
      "id": "1315",
      "name": "广昌县",
      "code": "361030"
    }]
  }, {
    "id": "134",
    "name": "上饶市",
    "code": "361100",
    "children": [{
      "id": "1316",
      "name": "市辖区",
      "code": "361101"
    }, {
      "id": "1317",
      "name": "信州区",
      "code": "361102"
    }, {
      "id": "1318",
      "name": "广丰区",
      "code": "361103"
    }, {
      "id": "1319",
      "name": "上饶县",
      "code": "361121"
    }, {
      "id": "1320",
      "name": "玉山县",
      "code": "361123"
    }, {
      "id": "1321",
      "name": "铅山县",
      "code": "361124"
    }, {
      "id": "1322",
      "name": "横峰县",
      "code": "361125"
    }, {
      "id": "1323",
      "name": "弋阳县",
      "code": "361126"
    }, {
      "id": "1324",
      "name": "余干县",
      "code": "361127"
    }, {
      "id": "1325",
      "name": "鄱阳县",
      "code": "361128"
    }, {
      "id": "1326",
      "name": "万年县",
      "code": "361129"
    }, {
      "id": "1327",
      "name": "婺源县",
      "code": "361130"
    }, {
      "id": "1328",
      "name": "德兴市",
      "code": "361181"
    }]
  }]
}, {
  "id": "15",
  "name": "山东省",
  "code": "370000",
  "children": [{
    "id": "135",
    "name": "济南市",
    "code": "370100",
    "children": [{
      "id": "1329",
      "name": "市辖区",
      "code": "370101"
    }, {
      "id": "1330",
      "name": "历下区",
      "code": "370102"
    }, {
      "id": "1331",
      "name": "市中区",
      "code": "370103"
    }, {
      "id": "1332",
      "name": "槐荫区",
      "code": "370104"
    }, {
      "id": "1333",
      "name": "天桥区",
      "code": "370105"
    }, {
      "id": "1334",
      "name": "历城区",
      "code": "370112"
    }, {
      "id": "1335",
      "name": "长清区",
      "code": "370113"
    }, {
      "id": "1336",
      "name": "平阴县",
      "code": "370124"
    }, {
      "id": "1337",
      "name": "济阳县",
      "code": "370125"
    }, {
      "id": "1338",
      "name": "商河县",
      "code": "370126"
    }, {
      "id": "1339",
      "name": "章丘市",
      "code": "370181"
    }]
  }, {
    "id": "136",
    "name": "青岛市",
    "code": "370200",
    "children": [{
      "id": "1340",
      "name": "市辖区",
      "code": "370201"
    }, {
      "id": "1341",
      "name": "市南区",
      "code": "370202"
    }, {
      "id": "1342",
      "name": "市北区",
      "code": "370203"
    }, {
      "id": "1343",
      "name": "黄岛区",
      "code": "370211"
    }, {
      "id": "1344",
      "name": "崂山区",
      "code": "370212"
    }, {
      "id": "1345",
      "name": "李沧区",
      "code": "370213"
    }, {
      "id": "1346",
      "name": "城阳区",
      "code": "370214"
    }, {
      "id": "1347",
      "name": "胶州市",
      "code": "370281"
    }, {
      "id": "1348",
      "name": "即墨市",
      "code": "370282"
    }, {
      "id": "1349",
      "name": "平度市",
      "code": "370283"
    }, {
      "id": "1350",
      "name": "莱西市",
      "code": "370285"
    }]
  }, {
    "id": "137",
    "name": "淄博市",
    "code": "370300",
    "children": [{
      "id": "1351",
      "name": "市辖区",
      "code": "370301"
    }, {
      "id": "1352",
      "name": "淄川区",
      "code": "370302"
    }, {
      "id": "1353",
      "name": "张店区",
      "code": "370303"
    }, {
      "id": "1354",
      "name": "博山区",
      "code": "370304"
    }, {
      "id": "1355",
      "name": "临淄区",
      "code": "370305"
    }, {
      "id": "1356",
      "name": "周村区",
      "code": "370306"
    }, {
      "id": "1357",
      "name": "桓台县",
      "code": "370321"
    }, {
      "id": "1358",
      "name": "高青县",
      "code": "370322"
    }, {
      "id": "1359",
      "name": "沂源县",
      "code": "370323"
    }]
  }, {
    "id": "138",
    "name": "枣庄市",
    "code": "370400",
    "children": [{
      "id": "1360",
      "name": "市辖区",
      "code": "370401"
    }, {
      "id": "1361",
      "name": "市中区",
      "code": "370402"
    }, {
      "id": "1362",
      "name": "薛城区",
      "code": "370403"
    }, {
      "id": "1363",
      "name": "峄城区",
      "code": "370404"
    }, {
      "id": "1364",
      "name": "台儿庄区",
      "code": "370405"
    }, {
      "id": "1365",
      "name": "山亭区",
      "code": "370406"
    }, {
      "id": "1366",
      "name": "滕州市",
      "code": "370481"
    }]
  }, {
    "id": "139",
    "name": "东营市",
    "code": "370500",
    "children": [{
      "id": "1367",
      "name": "市辖区",
      "code": "370501"
    }, {
      "id": "1368",
      "name": "东营区",
      "code": "370502"
    }, {
      "id": "1369",
      "name": "河口区",
      "code": "370503"
    }, {
      "id": "1370",
      "name": "垦利区",
      "code": "370505"
    }, {
      "id": "1371",
      "name": "利津县",
      "code": "370522"
    }, {
      "id": "1372",
      "name": "广饶县",
      "code": "370523"
    }]
  }, {
    "id": "140",
    "name": "烟台市",
    "code": "370600",
    "children": [{
      "id": "1373",
      "name": "市辖区",
      "code": "370601"
    }, {
      "id": "1374",
      "name": "芝罘区",
      "code": "370602"
    }, {
      "id": "1375",
      "name": "福山区",
      "code": "370611"
    }, {
      "id": "1376",
      "name": "牟平区",
      "code": "370612"
    }, {
      "id": "1377",
      "name": "莱山区",
      "code": "370613"
    }, {
      "id": "1378",
      "name": "长岛县",
      "code": "370634"
    }, {
      "id": "1379",
      "name": "龙口市",
      "code": "370681"
    }, {
      "id": "1380",
      "name": "莱阳市",
      "code": "370682"
    }, {
      "id": "1381",
      "name": "莱州市",
      "code": "370683"
    }, {
      "id": "1382",
      "name": "蓬莱市",
      "code": "370684"
    }, {
      "id": "1383",
      "name": "招远市",
      "code": "370685"
    }, {
      "id": "1384",
      "name": "栖霞市",
      "code": "370686"
    }, {
      "id": "1385",
      "name": "海阳市",
      "code": "370687"
    }]
  }, {
    "id": "141",
    "name": "潍坊市",
    "code": "370700",
    "children": [{
      "id": "1386",
      "name": "市辖区",
      "code": "370701"
    }, {
      "id": "1387",
      "name": "潍城区",
      "code": "370702"
    }, {
      "id": "1388",
      "name": "寒亭区",
      "code": "370703"
    }, {
      "id": "1389",
      "name": "坊子区",
      "code": "370704"
    }, {
      "id": "1390",
      "name": "奎文区",
      "code": "370705"
    }, {
      "id": "1391",
      "name": "临朐县",
      "code": "370724"
    }, {
      "id": "1392",
      "name": "昌乐县",
      "code": "370725"
    }, {
      "id": "1393",
      "name": "青州市",
      "code": "370781"
    }, {
      "id": "1394",
      "name": "诸城市",
      "code": "370782"
    }, {
      "id": "1395",
      "name": "寿光市",
      "code": "370783"
    }, {
      "id": "1396",
      "name": "安丘市",
      "code": "370784"
    }, {
      "id": "1397",
      "name": "高密市",
      "code": "370785"
    }, {
      "id": "1398",
      "name": "昌邑市",
      "code": "370786"
    }]
  }, {
    "id": "142",
    "name": "济宁市",
    "code": "370800",
    "children": [{
      "id": "1399",
      "name": "市辖区",
      "code": "370801"
    }, {
      "id": "1400",
      "name": "任城区",
      "code": "370811"
    }, {
      "id": "1401",
      "name": "兖州区",
      "code": "370812"
    }, {
      "id": "1402",
      "name": "微山县",
      "code": "370826"
    }, {
      "id": "1403",
      "name": "鱼台县",
      "code": "370827"
    }, {
      "id": "1404",
      "name": "金乡县",
      "code": "370828"
    }, {
      "id": "1405",
      "name": "嘉祥县",
      "code": "370829"
    }, {
      "id": "1406",
      "name": "汶上县",
      "code": "370830"
    }, {
      "id": "1407",
      "name": "泗水县",
      "code": "370831"
    }, {
      "id": "1408",
      "name": "梁山县",
      "code": "370832"
    }, {
      "id": "1409",
      "name": "曲阜市",
      "code": "370881"
    }, {
      "id": "1410",
      "name": "邹城市",
      "code": "370883"
    }]
  }, {
    "id": "143",
    "name": "泰安市",
    "code": "370900",
    "children": [{
      "id": "1411",
      "name": "市辖区",
      "code": "370901"
    }, {
      "id": "1412",
      "name": "泰山区",
      "code": "370902"
    }, {
      "id": "1413",
      "name": "岱岳区",
      "code": "370911"
    }, {
      "id": "1414",
      "name": "宁阳县",
      "code": "370921"
    }, {
      "id": "1415",
      "name": "东平县",
      "code": "370923"
    }, {
      "id": "1416",
      "name": "新泰市",
      "code": "370982"
    }, {
      "id": "1417",
      "name": "肥城市",
      "code": "370983"
    }]
  }, {
    "id": "144",
    "name": "威海市",
    "code": "371000",
    "children": [{
      "id": "1418",
      "name": "市辖区",
      "code": "371001"
    }, {
      "id": "1419",
      "name": "环翠区",
      "code": "371002"
    }, {
      "id": "1420",
      "name": "文登区",
      "code": "371003"
    }, {
      "id": "1421",
      "name": "荣成市",
      "code": "371082"
    }, {
      "id": "1422",
      "name": "乳山市",
      "code": "371083"
    }]
  }, {
    "id": "145",
    "name": "日照市",
    "code": "371100",
    "children": [{
      "id": "1423",
      "name": "市辖区",
      "code": "371101"
    }, {
      "id": "1424",
      "name": "东港区",
      "code": "371102"
    }, {
      "id": "1425",
      "name": "岚山区",
      "code": "371103"
    }, {
      "id": "1426",
      "name": "五莲县",
      "code": "371121"
    }, {
      "id": "1427",
      "name": "莒县",
      "code": "371122"
    }]
  }, {
    "id": "146",
    "name": "莱芜市",
    "code": "371200",
    "children": [{
      "id": "1428",
      "name": "市辖区",
      "code": "371201"
    }, {
      "id": "1429",
      "name": "莱城区",
      "code": "371202"
    }, {
      "id": "1430",
      "name": "钢城区",
      "code": "371203"
    }]
  }, {
    "id": "147",
    "name": "临沂市",
    "code": "371300",
    "children": [{
      "id": "1431",
      "name": "市辖区",
      "code": "371301"
    }, {
      "id": "1432",
      "name": "兰山区",
      "code": "371302"
    }, {
      "id": "1433",
      "name": "罗庄区",
      "code": "371311"
    }, {
      "id": "1434",
      "name": "河东区",
      "code": "371312"
    }, {
      "id": "1435",
      "name": "沂南县",
      "code": "371321"
    }, {
      "id": "1436",
      "name": "郯城县",
      "code": "371322"
    }, {
      "id": "1437",
      "name": "沂水县",
      "code": "371323"
    }, {
      "id": "1438",
      "name": "兰陵县",
      "code": "371324"
    }, {
      "id": "1439",
      "name": "费县",
      "code": "371325"
    }, {
      "id": "1440",
      "name": "平邑县",
      "code": "371326"
    }, {
      "id": "1441",
      "name": "莒南县",
      "code": "371327"
    }, {
      "id": "1442",
      "name": "蒙阴县",
      "code": "371328"
    }, {
      "id": "1443",
      "name": "临沭县",
      "code": "371329"
    }]
  }, {
    "id": "148",
    "name": "德州市",
    "code": "371400",
    "children": [{
      "id": "1444",
      "name": "市辖区",
      "code": "371401"
    }, {
      "id": "1445",
      "name": "德城区",
      "code": "371402"
    }, {
      "id": "1446",
      "name": "陵城区",
      "code": "371403"
    }, {
      "id": "1447",
      "name": "宁津县",
      "code": "371422"
    }, {
      "id": "1448",
      "name": "庆云县",
      "code": "371423"
    }, {
      "id": "1449",
      "name": "临邑县",
      "code": "371424"
    }, {
      "id": "1450",
      "name": "齐河县",
      "code": "371425"
    }, {
      "id": "1451",
      "name": "平原县",
      "code": "371426"
    }, {
      "id": "1452",
      "name": "夏津县",
      "code": "371427"
    }, {
      "id": "1453",
      "name": "武城县",
      "code": "371428"
    }, {
      "id": "1454",
      "name": "乐陵市",
      "code": "371481"
    }, {
      "id": "1455",
      "name": "禹城市",
      "code": "371482"
    }]
  }, {
    "id": "149",
    "name": "聊城市",
    "code": "371500",
    "children": [{
      "id": "1456",
      "name": "市辖区",
      "code": "371501"
    }, {
      "id": "1457",
      "name": "东昌府区",
      "code": "371502"
    }, {
      "id": "1458",
      "name": "阳谷县",
      "code": "371521"
    }, {
      "id": "1459",
      "name": "莘县",
      "code": "371522"
    }, {
      "id": "1460",
      "name": "茌平县",
      "code": "371523"
    }, {
      "id": "1461",
      "name": "东阿县",
      "code": "371524"
    }, {
      "id": "1462",
      "name": "冠县",
      "code": "371525"
    }, {
      "id": "1463",
      "name": "高唐县",
      "code": "371526"
    }, {
      "id": "1464",
      "name": "临清市",
      "code": "371581"
    }]
  }, {
    "id": "150",
    "name": "滨州市",
    "code": "371600",
    "children": [{
      "id": "1465",
      "name": "市辖区",
      "code": "371601"
    }, {
      "id": "1466",
      "name": "滨城区",
      "code": "371602"
    }, {
      "id": "1467",
      "name": "沾化区",
      "code": "371603"
    }, {
      "id": "1468",
      "name": "惠民县",
      "code": "371621"
    }, {
      "id": "1469",
      "name": "阳信县",
      "code": "371622"
    }, {
      "id": "1470",
      "name": "无棣县",
      "code": "371623"
    }, {
      "id": "1471",
      "name": "博兴县",
      "code": "371625"
    }, {
      "id": "1472",
      "name": "邹平县",
      "code": "371626"
    }]
  }, {
    "id": "151",
    "name": "菏泽市",
    "code": "371700",
    "children": [{
      "id": "1473",
      "name": "市辖区",
      "code": "371701"
    }, {
      "id": "1474",
      "name": "牡丹区",
      "code": "371702"
    }, {
      "id": "1475",
      "name": "定陶区",
      "code": "371703"
    }, {
      "id": "1476",
      "name": "曹县",
      "code": "371721"
    }, {
      "id": "1477",
      "name": "单县",
      "code": "371722"
    }, {
      "id": "1478",
      "name": "成武县",
      "code": "371723"
    }, {
      "id": "1479",
      "name": "巨野县",
      "code": "371724"
    }, {
      "id": "1480",
      "name": "郓城县",
      "code": "371725"
    }, {
      "id": "1481",
      "name": "鄄城县",
      "code": "371726"
    }, {
      "id": "1482",
      "name": "东明县",
      "code": "371728"
    }]
  }]
}, {
  "id": "16",
  "name": "河南省",
  "code": "410000",
  "children": [{
    "id": "152",
    "name": "郑州市",
    "code": "410100",
    "children": [{
      "id": "1483",
      "name": "市辖区",
      "code": "410101"
    }, {
      "id": "1484",
      "name": "中原区",
      "code": "410102"
    }, {
      "id": "1485",
      "name": "二七区",
      "code": "410103"
    }, {
      "id": "1486",
      "name": "管城回族区",
      "code": "410104"
    }, {
      "id": "1487",
      "name": "金水区",
      "code": "410105"
    }, {
      "id": "1488",
      "name": "上街区",
      "code": "410106"
    }, {
      "id": "1489",
      "name": "惠济区",
      "code": "410108"
    }, {
      "id": "1490",
      "name": "中牟县",
      "code": "410122"
    }, {
      "id": "1491",
      "name": "巩义市",
      "code": "410181"
    }, {
      "id": "1492",
      "name": "荥阳市",
      "code": "410182"
    }, {
      "id": "1493",
      "name": "新密市",
      "code": "410183"
    }, {
      "id": "1494",
      "name": "新郑市",
      "code": "410184"
    }, {
      "id": "1495",
      "name": "登封市",
      "code": "410185"
    }]
  }, {
    "id": "153",
    "name": "开封市",
    "code": "410200",
    "children": [{
      "id": "1496",
      "name": "市辖区",
      "code": "410201"
    }, {
      "id": "1497",
      "name": "龙亭区",
      "code": "410202"
    }, {
      "id": "1498",
      "name": "顺河回族区",
      "code": "410203"
    }, {
      "id": "1499",
      "name": "鼓楼区",
      "code": "410204"
    }, {
      "id": "1500",
      "name": "禹王台区",
      "code": "410205"
    }, {
      "id": "1501",
      "name": "金明区",
      "code": "410211"
    }, {
      "id": "1502",
      "name": "祥符区",
      "code": "410212"
    }, {
      "id": "1503",
      "name": "杞县",
      "code": "410221"
    }, {
      "id": "1504",
      "name": "通许县",
      "code": "410222"
    }, {
      "id": "1505",
      "name": "尉氏县",
      "code": "410223"
    }, {
      "id": "1506",
      "name": "兰考县",
      "code": "410225"
    }]
  }, {
    "id": "154",
    "name": "洛阳市",
    "code": "410300",
    "children": [{
      "id": "1507",
      "name": "市辖区",
      "code": "410301"
    }, {
      "id": "1508",
      "name": "老城区",
      "code": "410302"
    }, {
      "id": "1509",
      "name": "西工区",
      "code": "410303"
    }, {
      "id": "1510",
      "name": "瀍河回族区",
      "code": "410304"
    }, {
      "id": "1511",
      "name": "涧西区",
      "code": "410305"
    }, {
      "id": "1512",
      "name": "吉利区",
      "code": "410306"
    }, {
      "id": "1513",
      "name": "洛龙区",
      "code": "410311"
    }, {
      "id": "1514",
      "name": "孟津县",
      "code": "410322"
    }, {
      "id": "1515",
      "name": "新安县",
      "code": "410323"
    }, {
      "id": "1516",
      "name": "栾川县",
      "code": "410324"
    }, {
      "id": "1517",
      "name": "嵩县",
      "code": "410325"
    }, {
      "id": "1518",
      "name": "汝阳县",
      "code": "410326"
    }, {
      "id": "1519",
      "name": "宜阳县",
      "code": "410327"
    }, {
      "id": "1520",
      "name": "洛宁县",
      "code": "410328"
    }, {
      "id": "1521",
      "name": "伊川县",
      "code": "410329"
    }, {
      "id": "1522",
      "name": "偃师市",
      "code": "410381"
    }]
  }, {
    "id": "155",
    "name": "平顶山市",
    "code": "410400",
    "children": [{
      "id": "1523",
      "name": "市辖区",
      "code": "410401"
    }, {
      "id": "1524",
      "name": "新华区",
      "code": "410402"
    }, {
      "id": "1525",
      "name": "卫东区",
      "code": "410403"
    }, {
      "id": "1526",
      "name": "石龙区",
      "code": "410404"
    }, {
      "id": "1527",
      "name": "湛河区",
      "code": "410411"
    }, {
      "id": "1528",
      "name": "宝丰县",
      "code": "410421"
    }, {
      "id": "1529",
      "name": "叶县",
      "code": "410422"
    }, {
      "id": "1530",
      "name": "鲁山县",
      "code": "410423"
    }, {
      "id": "1531",
      "name": "郏县",
      "code": "410425"
    }, {
      "id": "1532",
      "name": "舞钢市",
      "code": "410481"
    }, {
      "id": "1533",
      "name": "汝州市",
      "code": "410482"
    }]
  }, {
    "id": "156",
    "name": "安阳市",
    "code": "410500",
    "children": [{
      "id": "1534",
      "name": "市辖区",
      "code": "410501"
    }, {
      "id": "1535",
      "name": "文峰区",
      "code": "410502"
    }, {
      "id": "1536",
      "name": "北关区",
      "code": "410503"
    }, {
      "id": "1537",
      "name": "殷都区",
      "code": "410505"
    }, {
      "id": "1538",
      "name": "龙安区",
      "code": "410506"
    }, {
      "id": "1539",
      "name": "安阳县",
      "code": "410522"
    }, {
      "id": "1540",
      "name": "汤阴县",
      "code": "410523"
    }, {
      "id": "1541",
      "name": "滑县",
      "code": "410526"
    }, {
      "id": "1542",
      "name": "内黄县",
      "code": "410527"
    }, {
      "id": "1543",
      "name": "林州市",
      "code": "410581"
    }]
  }, {
    "id": "157",
    "name": "鹤壁市",
    "code": "410600",
    "children": [{
      "id": "1544",
      "name": "市辖区",
      "code": "410601"
    }, {
      "id": "1545",
      "name": "鹤山区",
      "code": "410602"
    }, {
      "id": "1546",
      "name": "山城区",
      "code": "410603"
    }, {
      "id": "1547",
      "name": "淇滨区",
      "code": "410611"
    }, {
      "id": "1548",
      "name": "浚县",
      "code": "410621"
    }, {
      "id": "1549",
      "name": "淇县",
      "code": "410622"
    }]
  }, {
    "id": "158",
    "name": "新乡市",
    "code": "410700",
    "children": [{
      "id": "1550",
      "name": "市辖区",
      "code": "410701"
    }, {
      "id": "1551",
      "name": "红旗区",
      "code": "410702"
    }, {
      "id": "1552",
      "name": "卫滨区",
      "code": "410703"
    }, {
      "id": "1553",
      "name": "凤泉区",
      "code": "410704"
    }, {
      "id": "1554",
      "name": "牧野区",
      "code": "410711"
    }, {
      "id": "1555",
      "name": "新乡县",
      "code": "410721"
    }, {
      "id": "1556",
      "name": "获嘉县",
      "code": "410724"
    }, {
      "id": "1557",
      "name": "原阳县",
      "code": "410725"
    }, {
      "id": "1558",
      "name": "延津县",
      "code": "410726"
    }, {
      "id": "1559",
      "name": "封丘县",
      "code": "410727"
    }, {
      "id": "1560",
      "name": "长垣县",
      "code": "410728"
    }, {
      "id": "1561",
      "name": "卫辉市",
      "code": "410781"
    }, {
      "id": "1562",
      "name": "辉县市",
      "code": "410782"
    }]
  }, {
    "id": "159",
    "name": "焦作市",
    "code": "410800",
    "children": [{
      "id": "1563",
      "name": "市辖区",
      "code": "410801"
    }, {
      "id": "1564",
      "name": "解放区",
      "code": "410802"
    }, {
      "id": "1565",
      "name": "中站区",
      "code": "410803"
    }, {
      "id": "1566",
      "name": "马村区",
      "code": "410804"
    }, {
      "id": "1567",
      "name": "山阳区",
      "code": "410811"
    }, {
      "id": "1568",
      "name": "修武县",
      "code": "410821"
    }, {
      "id": "1569",
      "name": "博爱县",
      "code": "410822"
    }, {
      "id": "1570",
      "name": "武陟县",
      "code": "410823"
    }, {
      "id": "1571",
      "name": "温县",
      "code": "410825"
    }, {
      "id": "1572",
      "name": "沁阳市",
      "code": "410882"
    }, {
      "id": "1573",
      "name": "孟州市",
      "code": "410883"
    }]
  }, {
    "id": "160",
    "name": "濮阳市",
    "code": "410900",
    "children": [{
      "id": "1574",
      "name": "市辖区",
      "code": "410901"
    }, {
      "id": "1575",
      "name": "华龙区",
      "code": "410902"
    }, {
      "id": "1576",
      "name": "清丰县",
      "code": "410922"
    }, {
      "id": "1577",
      "name": "南乐县",
      "code": "410923"
    }, {
      "id": "1578",
      "name": "范县",
      "code": "410926"
    }, {
      "id": "1579",
      "name": "台前县",
      "code": "410927"
    }, {
      "id": "1580",
      "name": "濮阳县",
      "code": "410928"
    }]
  }, {
    "id": "161",
    "name": "许昌市",
    "code": "411000",
    "children": [{
      "id": "1581",
      "name": "市辖区",
      "code": "411001"
    }, {
      "id": "1582",
      "name": "魏都区",
      "code": "411002"
    }, {
      "id": "1583",
      "name": "许昌县",
      "code": "411023"
    }, {
      "id": "1584",
      "name": "鄢陵县",
      "code": "411024"
    }, {
      "id": "1585",
      "name": "襄城县",
      "code": "411025"
    }, {
      "id": "1586",
      "name": "禹州市",
      "code": "411081"
    }, {
      "id": "1587",
      "name": "长葛市",
      "code": "411082"
    }]
  }, {
    "id": "162",
    "name": "漯河市",
    "code": "411100",
    "children": [{
      "id": "1588",
      "name": "市辖区",
      "code": "411101"
    }, {
      "id": "1589",
      "name": "源汇区",
      "code": "411102"
    }, {
      "id": "1590",
      "name": "郾城区",
      "code": "411103"
    }, {
      "id": "1591",
      "name": "召陵区",
      "code": "411104"
    }, {
      "id": "1592",
      "name": "舞阳县",
      "code": "411121"
    }, {
      "id": "1593",
      "name": "临颍县",
      "code": "411122"
    }]
  }, {
    "id": "163",
    "name": "三门峡市",
    "code": "411200",
    "children": [{
      "id": "1594",
      "name": "市辖区",
      "code": "411201"
    }, {
      "id": "1595",
      "name": "湖滨区",
      "code": "411202"
    }, {
      "id": "1596",
      "name": "陕州区",
      "code": "411203"
    }, {
      "id": "1597",
      "name": "渑池县",
      "code": "411221"
    }, {
      "id": "1598",
      "name": "卢氏县",
      "code": "411224"
    }, {
      "id": "1599",
      "name": "义马市",
      "code": "411281"
    }, {
      "id": "1600",
      "name": "灵宝市",
      "code": "411282"
    }]
  }, {
    "id": "164",
    "name": "南阳市",
    "code": "411300",
    "children": [{
      "id": "1601",
      "name": "市辖区",
      "code": "411301"
    }, {
      "id": "1602",
      "name": "宛城区",
      "code": "411302"
    }, {
      "id": "1603",
      "name": "卧龙区",
      "code": "411303"
    }, {
      "id": "1604",
      "name": "南召县",
      "code": "411321"
    }, {
      "id": "1605",
      "name": "方城县",
      "code": "411322"
    }, {
      "id": "1606",
      "name": "西峡县",
      "code": "411323"
    }, {
      "id": "1607",
      "name": "镇平县",
      "code": "411324"
    }, {
      "id": "1608",
      "name": "内乡县",
      "code": "411325"
    }, {
      "id": "1609",
      "name": "淅川县",
      "code": "411326"
    }, {
      "id": "1610",
      "name": "社旗县",
      "code": "411327"
    }, {
      "id": "1611",
      "name": "唐河县",
      "code": "411328"
    }, {
      "id": "1612",
      "name": "新野县",
      "code": "411329"
    }, {
      "id": "1613",
      "name": "桐柏县",
      "code": "411330"
    }, {
      "id": "1614",
      "name": "邓州市",
      "code": "411381"
    }]
  }, {
    "id": "165",
    "name": "商丘市",
    "code": "411400",
    "children": [{
      "id": "1615",
      "name": "市辖区",
      "code": "411401"
    }, {
      "id": "1616",
      "name": "梁园区",
      "code": "411402"
    }, {
      "id": "1617",
      "name": "睢阳区",
      "code": "411403"
    }, {
      "id": "1618",
      "name": "民权县",
      "code": "411421"
    }, {
      "id": "1619",
      "name": "睢县",
      "code": "411422"
    }, {
      "id": "1620",
      "name": "宁陵县",
      "code": "411423"
    }, {
      "id": "1621",
      "name": "柘城县",
      "code": "411424"
    }, {
      "id": "1622",
      "name": "虞城县",
      "code": "411425"
    }, {
      "id": "1623",
      "name": "夏邑县",
      "code": "411426"
    }, {
      "id": "1624",
      "name": "永城市",
      "code": "411481"
    }]
  }, {
    "id": "166",
    "name": "信阳市",
    "code": "411500",
    "children": [{
      "id": "1625",
      "name": "市辖区",
      "code": "411501"
    }, {
      "id": "1626",
      "name": "浉河区",
      "code": "411502"
    }, {
      "id": "1627",
      "name": "平桥区",
      "code": "411503"
    }, {
      "id": "1628",
      "name": "罗山县",
      "code": "411521"
    }, {
      "id": "1629",
      "name": "光山县",
      "code": "411522"
    }, {
      "id": "1630",
      "name": "新县",
      "code": "411523"
    }, {
      "id": "1631",
      "name": "商城县",
      "code": "411524"
    }, {
      "id": "1632",
      "name": "固始县",
      "code": "411525"
    }, {
      "id": "1633",
      "name": "潢川县",
      "code": "411526"
    }, {
      "id": "1634",
      "name": "淮滨县",
      "code": "411527"
    }, {
      "id": "1635",
      "name": "息县",
      "code": "411528"
    }]
  }, {
    "id": "167",
    "name": "周口市",
    "code": "411600",
    "children": [{
      "id": "1636",
      "name": "市辖区",
      "code": "411601"
    }, {
      "id": "1637",
      "name": "川汇区",
      "code": "411602"
    }, {
      "id": "1638",
      "name": "扶沟县",
      "code": "411621"
    }, {
      "id": "1639",
      "name": "西华县",
      "code": "411622"
    }, {
      "id": "1640",
      "name": "商水县",
      "code": "411623"
    }, {
      "id": "1641",
      "name": "沈丘县",
      "code": "411624"
    }, {
      "id": "1642",
      "name": "郸城县",
      "code": "411625"
    }, {
      "id": "1643",
      "name": "淮阳县",
      "code": "411626"
    }, {
      "id": "1644",
      "name": "太康县",
      "code": "411627"
    }, {
      "id": "1645",
      "name": "鹿邑县",
      "code": "411628"
    }, {
      "id": "1646",
      "name": "项城市",
      "code": "411681"
    }]
  }, {
    "id": "168",
    "name": "驻马店市",
    "code": "411700",
    "children": [{
      "id": "1647",
      "name": "市辖区",
      "code": "411701"
    }, {
      "id": "1648",
      "name": "驿城区",
      "code": "411702"
    }, {
      "id": "1649",
      "name": "西平县",
      "code": "411721"
    }, {
      "id": "1650",
      "name": "上蔡县",
      "code": "411722"
    }, {
      "id": "1651",
      "name": "平舆县",
      "code": "411723"
    }, {
      "id": "1652",
      "name": "正阳县",
      "code": "411724"
    }, {
      "id": "1653",
      "name": "确山县",
      "code": "411725"
    }, {
      "id": "1654",
      "name": "泌阳县",
      "code": "411726"
    }, {
      "id": "1655",
      "name": "汝南县",
      "code": "411727"
    }, {
      "id": "1656",
      "name": "遂平县",
      "code": "411728"
    }, {
      "id": "1657",
      "name": "新蔡县",
      "code": "411729"
    }]
  }, {
    "id": "169",
    "name": "省直辖县级行政区划",
    "code": "419000",
    "children": [{
      "id": "1658",
      "name": "济源市",
      "code": "419001"
    }]
  }]
}, {
  "id": "17",
  "name": "湖北省",
  "code": "420000",
  "children": [{
    "id": "170",
    "name": "武汉市",
    "code": "420100",
    "children": [{
      "id": "1659",
      "name": "市辖区",
      "code": "420101"
    }, {
      "id": "1660",
      "name": "江岸区",
      "code": "420102"
    }, {
      "id": "1661",
      "name": "江汉区",
      "code": "420103"
    }, {
      "id": "1662",
      "name": "硚口区",
      "code": "420104"
    }, {
      "id": "1663",
      "name": "汉阳区",
      "code": "420105"
    }, {
      "id": "1664",
      "name": "武昌区",
      "code": "420106"
    }, {
      "id": "1665",
      "name": "青山区",
      "code": "420107"
    }, {
      "id": "1666",
      "name": "洪山区",
      "code": "420111"
    }, {
      "id": "1667",
      "name": "东西湖区",
      "code": "420112"
    }, {
      "id": "1668",
      "name": "汉南区",
      "code": "420113"
    }, {
      "id": "1669",
      "name": "蔡甸区",
      "code": "420114"
    }, {
      "id": "1670",
      "name": "江夏区",
      "code": "420115"
    }, {
      "id": "1671",
      "name": "黄陂区",
      "code": "420116"
    }, {
      "id": "1672",
      "name": "新洲区",
      "code": "420117"
    }]
  }, {
    "id": "171",
    "name": "黄石市",
    "code": "420200",
    "children": [{
      "id": "1673",
      "name": "市辖区",
      "code": "420201"
    }, {
      "id": "1674",
      "name": "黄石港区",
      "code": "420202"
    }, {
      "id": "1675",
      "name": "西塞山区",
      "code": "420203"
    }, {
      "id": "1676",
      "name": "下陆区",
      "code": "420204"
    }, {
      "id": "1677",
      "name": "铁山区",
      "code": "420205"
    }, {
      "id": "1678",
      "name": "阳新县",
      "code": "420222"
    }, {
      "id": "1679",
      "name": "大冶市",
      "code": "420281"
    }]
  }, {
    "id": "172",
    "name": "十堰市",
    "code": "420300",
    "children": [{
      "id": "1680",
      "name": "市辖区",
      "code": "420301"
    }, {
      "id": "1681",
      "name": "茅箭区",
      "code": "420302"
    }, {
      "id": "1682",
      "name": "张湾区",
      "code": "420303"
    }, {
      "id": "1683",
      "name": "郧阳区",
      "code": "420304"
    }, {
      "id": "1684",
      "name": "郧西县",
      "code": "420322"
    }, {
      "id": "1685",
      "name": "竹山县",
      "code": "420323"
    }, {
      "id": "1686",
      "name": "竹溪县",
      "code": "420324"
    }, {
      "id": "1687",
      "name": "房县",
      "code": "420325"
    }, {
      "id": "1688",
      "name": "丹江口市",
      "code": "420381"
    }]
  }, {
    "id": "173",
    "name": "宜昌市",
    "code": "420500",
    "children": [{
      "id": "1689",
      "name": "市辖区",
      "code": "420501"
    }, {
      "id": "1690",
      "name": "西陵区",
      "code": "420502"
    }, {
      "id": "1691",
      "name": "伍家岗区",
      "code": "420503"
    }, {
      "id": "1692",
      "name": "点军区",
      "code": "420504"
    }, {
      "id": "1693",
      "name": "猇亭区",
      "code": "420505"
    }, {
      "id": "1694",
      "name": "夷陵区",
      "code": "420506"
    }, {
      "id": "1695",
      "name": "远安县",
      "code": "420525"
    }, {
      "id": "1696",
      "name": "兴山县",
      "code": "420526"
    }, {
      "id": "1697",
      "name": "秭归县",
      "code": "420527"
    }, {
      "id": "1698",
      "name": "长阳土家族自治县",
      "code": "420528"
    }, {
      "id": "1699",
      "name": "五峰土家族自治县",
      "code": "420529"
    }, {
      "id": "1700",
      "name": "宜都市",
      "code": "420581"
    }, {
      "id": "1701",
      "name": "当阳市",
      "code": "420582"
    }, {
      "id": "1702",
      "name": "枝江市",
      "code": "420583"
    }]
  }, {
    "id": "174",
    "name": "襄阳市",
    "code": "420600",
    "children": [{
      "id": "1703",
      "name": "市辖区",
      "code": "420601"
    }, {
      "id": "1704",
      "name": "襄城区",
      "code": "420602"
    }, {
      "id": "1705",
      "name": "樊城区",
      "code": "420606"
    }, {
      "id": "1706",
      "name": "襄州区",
      "code": "420607"
    }, {
      "id": "1707",
      "name": "南漳县",
      "code": "420624"
    }, {
      "id": "1708",
      "name": "谷城县",
      "code": "420625"
    }, {
      "id": "1709",
      "name": "保康县",
      "code": "420626"
    }, {
      "id": "1710",
      "name": "老河口市",
      "code": "420682"
    }, {
      "id": "1711",
      "name": "枣阳市",
      "code": "420683"
    }, {
      "id": "1712",
      "name": "宜城市",
      "code": "420684"
    }]
  }, {
    "id": "175",
    "name": "鄂州市",
    "code": "420700",
    "children": [{
      "id": "1713",
      "name": "市辖区",
      "code": "420701"
    }, {
      "id": "1714",
      "name": "梁子湖区",
      "code": "420702"
    }, {
      "id": "1715",
      "name": "华容区",
      "code": "420703"
    }, {
      "id": "1716",
      "name": "鄂城区",
      "code": "420704"
    }]
  }, {
    "id": "176",
    "name": "荆门市",
    "code": "420800",
    "children": [{
      "id": "1717",
      "name": "市辖区",
      "code": "420801"
    }, {
      "id": "1718",
      "name": "东宝区",
      "code": "420802"
    }, {
      "id": "1719",
      "name": "掇刀区",
      "code": "420804"
    }, {
      "id": "1720",
      "name": "京山县",
      "code": "420821"
    }, {
      "id": "1721",
      "name": "沙洋县",
      "code": "420822"
    }, {
      "id": "1722",
      "name": "钟祥市",
      "code": "420881"
    }]
  }, {
    "id": "177",
    "name": "孝感市",
    "code": "420900",
    "children": [{
      "id": "1723",
      "name": "市辖区",
      "code": "420901"
    }, {
      "id": "1724",
      "name": "孝南区",
      "code": "420902"
    }, {
      "id": "1725",
      "name": "孝昌县",
      "code": "420921"
    }, {
      "id": "1726",
      "name": "大悟县",
      "code": "420922"
    }, {
      "id": "1727",
      "name": "云梦县",
      "code": "420923"
    }, {
      "id": "1728",
      "name": "应城市",
      "code": "420981"
    }, {
      "id": "1729",
      "name": "安陆市",
      "code": "420982"
    }, {
      "id": "1730",
      "name": "汉川市",
      "code": "420984"
    }]
  }, {
    "id": "178",
    "name": "荆州市",
    "code": "421000",
    "children": [{
      "id": "1731",
      "name": "市辖区",
      "code": "421001"
    }, {
      "id": "1732",
      "name": "沙市区",
      "code": "421002"
    }, {
      "id": "1733",
      "name": "荆州区",
      "code": "421003"
    }, {
      "id": "1734",
      "name": "公安县",
      "code": "421022"
    }, {
      "id": "1735",
      "name": "监利县",
      "code": "421023"
    }, {
      "id": "1736",
      "name": "江陵县",
      "code": "421024"
    }, {
      "id": "1737",
      "name": "石首市",
      "code": "421081"
    }, {
      "id": "1738",
      "name": "洪湖市",
      "code": "421083"
    }, {
      "id": "1739",
      "name": "松滋市",
      "code": "421087"
    }]
  }, {
    "id": "179",
    "name": "黄冈市",
    "code": "421100",
    "children": [{
      "id": "1740",
      "name": "市辖区",
      "code": "421101"
    }, {
      "id": "1741",
      "name": "黄州区",
      "code": "421102"
    }, {
      "id": "1742",
      "name": "团风县",
      "code": "421121"
    }, {
      "id": "1743",
      "name": "红安县",
      "code": "421122"
    }, {
      "id": "1744",
      "name": "罗田县",
      "code": "421123"
    }, {
      "id": "1745",
      "name": "英山县",
      "code": "421124"
    }, {
      "id": "1746",
      "name": "浠水县",
      "code": "421125"
    }, {
      "id": "1747",
      "name": "蕲春县",
      "code": "421126"
    }, {
      "id": "1748",
      "name": "黄梅县",
      "code": "421127"
    }, {
      "id": "1749",
      "name": "麻城市",
      "code": "421181"
    }, {
      "id": "1750",
      "name": "武穴市",
      "code": "421182"
    }]
  }, {
    "id": "180",
    "name": "咸宁市",
    "code": "421200",
    "children": [{
      "id": "1751",
      "name": "市辖区",
      "code": "421201"
    }, {
      "id": "1752",
      "name": "咸安区",
      "code": "421202"
    }, {
      "id": "1753",
      "name": "嘉鱼县",
      "code": "421221"
    }, {
      "id": "1754",
      "name": "通城县",
      "code": "421222"
    }, {
      "id": "1755",
      "name": "崇阳县",
      "code": "421223"
    }, {
      "id": "1756",
      "name": "通山县",
      "code": "421224"
    }, {
      "id": "1757",
      "name": "赤壁市",
      "code": "421281"
    }]
  }, {
    "id": "181",
    "name": "随州市",
    "code": "421300",
    "children": [{
      "id": "1758",
      "name": "市辖区",
      "code": "421301"
    }, {
      "id": "1759",
      "name": "曾都区",
      "code": "421303"
    }, {
      "id": "1760",
      "name": "随县",
      "code": "421321"
    }, {
      "id": "1761",
      "name": "广水市",
      "code": "421381"
    }]
  }, {
    "id": "182",
    "name": "恩施土家族苗族自治州",
    "code": "422800",
    "children": [{
      "id": "1762",
      "name": "恩施市",
      "code": "422801"
    }, {
      "id": "1763",
      "name": "利川市",
      "code": "422802"
    }, {
      "id": "1764",
      "name": "建始县",
      "code": "422822"
    }, {
      "id": "1765",
      "name": "巴东县",
      "code": "422823"
    }, {
      "id": "1766",
      "name": "宣恩县",
      "code": "422825"
    }, {
      "id": "1767",
      "name": "咸丰县",
      "code": "422826"
    }, {
      "id": "1768",
      "name": "来凤县",
      "code": "422827"
    }, {
      "id": "1769",
      "name": "鹤峰县",
      "code": "422828"
    }]
  }, {
    "id": "183",
    "name": "省直辖县级行政区划",
    "code": "429000",
    "children": [{
      "id": "1770",
      "name": "仙桃市",
      "code": "429004"
    }, {
      "id": "1771",
      "name": "潜江市",
      "code": "429005"
    }, {
      "id": "1772",
      "name": "天门市",
      "code": "429006"
    }, {
      "id": "1773",
      "name": "神农架林区",
      "code": "429021"
    }]
  }]
}, {
  "id": "18",
  "name": "湖南省",
  "code": "430000",
  "children": [{
    "id": "184",
    "name": "长沙市",
    "code": "430100",
    "children": [{
      "id": "1774",
      "name": "市辖区",
      "code": "430101"
    }, {
      "id": "1775",
      "name": "芙蓉区",
      "code": "430102"
    }, {
      "id": "1776",
      "name": "天心区",
      "code": "430103"
    }, {
      "id": "1777",
      "name": "岳麓区",
      "code": "430104"
    }, {
      "id": "1778",
      "name": "开福区",
      "code": "430105"
    }, {
      "id": "1779",
      "name": "雨花区",
      "code": "430111"
    }, {
      "id": "1780",
      "name": "望城区",
      "code": "430112"
    }, {
      "id": "1781",
      "name": "长沙县",
      "code": "430121"
    }, {
      "id": "1782",
      "name": "宁乡县",
      "code": "430124"
    }, {
      "id": "1783",
      "name": "浏阳市",
      "code": "430181"
    }]
  }, {
    "id": "185",
    "name": "株洲市",
    "code": "430200",
    "children": [{
      "id": "1784",
      "name": "市辖区",
      "code": "430201"
    }, {
      "id": "1785",
      "name": "荷塘区",
      "code": "430202"
    }, {
      "id": "1786",
      "name": "芦淞区",
      "code": "430203"
    }, {
      "id": "1787",
      "name": "石峰区",
      "code": "430204"
    }, {
      "id": "1788",
      "name": "天元区",
      "code": "430211"
    }, {
      "id": "1789",
      "name": "株洲县",
      "code": "430221"
    }, {
      "id": "1790",
      "name": "攸县",
      "code": "430223"
    }, {
      "id": "1791",
      "name": "茶陵县",
      "code": "430224"
    }, {
      "id": "1792",
      "name": "炎陵县",
      "code": "430225"
    }, {
      "id": "1793",
      "name": "醴陵市",
      "code": "430281"
    }]
  }, {
    "id": "186",
    "name": "湘潭市",
    "code": "430300",
    "children": [{
      "id": "1794",
      "name": "市辖区",
      "code": "430301"
    }, {
      "id": "1795",
      "name": "雨湖区",
      "code": "430302"
    }, {
      "id": "1796",
      "name": "岳塘区",
      "code": "430304"
    }, {
      "id": "1797",
      "name": "湘潭县",
      "code": "430321"
    }, {
      "id": "1798",
      "name": "湘乡市",
      "code": "430381"
    }, {
      "id": "1799",
      "name": "韶山市",
      "code": "430382"
    }]
  }, {
    "id": "187",
    "name": "衡阳市",
    "code": "430400",
    "children": [{
      "id": "1800",
      "name": "市辖区",
      "code": "430401"
    }, {
      "id": "1801",
      "name": "珠晖区",
      "code": "430405"
    }, {
      "id": "1802",
      "name": "雁峰区",
      "code": "430406"
    }, {
      "id": "1803",
      "name": "石鼓区",
      "code": "430407"
    }, {
      "id": "1804",
      "name": "蒸湘区",
      "code": "430408"
    }, {
      "id": "1805",
      "name": "南岳区",
      "code": "430412"
    }, {
      "id": "1806",
      "name": "衡阳县",
      "code": "430421"
    }, {
      "id": "1807",
      "name": "衡南县",
      "code": "430422"
    }, {
      "id": "1808",
      "name": "衡山县",
      "code": "430423"
    }, {
      "id": "1809",
      "name": "衡东县",
      "code": "430424"
    }, {
      "id": "1810",
      "name": "祁东县",
      "code": "430426"
    }, {
      "id": "1811",
      "name": "耒阳市",
      "code": "430481"
    }, {
      "id": "1812",
      "name": "常宁市",
      "code": "430482"
    }]
  }, {
    "id": "188",
    "name": "邵阳市",
    "code": "430500",
    "children": [{
      "id": "1813",
      "name": "市辖区",
      "code": "430501"
    }, {
      "id": "1814",
      "name": "双清区",
      "code": "430502"
    }, {
      "id": "1815",
      "name": "大祥区",
      "code": "430503"
    }, {
      "id": "1816",
      "name": "北塔区",
      "code": "430511"
    }, {
      "id": "1817",
      "name": "邵东县",
      "code": "430521"
    }, {
      "id": "1818",
      "name": "新邵县",
      "code": "430522"
    }, {
      "id": "1819",
      "name": "邵阳县",
      "code": "430523"
    }, {
      "id": "1820",
      "name": "隆回县",
      "code": "430524"
    }, {
      "id": "1821",
      "name": "洞口县",
      "code": "430525"
    }, {
      "id": "1822",
      "name": "绥宁县",
      "code": "430527"
    }, {
      "id": "1823",
      "name": "新宁县",
      "code": "430528"
    }, {
      "id": "1824",
      "name": "城步苗族自治县",
      "code": "430529"
    }, {
      "id": "1825",
      "name": "武冈市",
      "code": "430581"
    }]
  }, {
    "id": "189",
    "name": "岳阳市",
    "code": "430600",
    "children": [{
      "id": "1826",
      "name": "市辖区",
      "code": "430601"
    }, {
      "id": "1827",
      "name": "岳阳楼区",
      "code": "430602"
    }, {
      "id": "1828",
      "name": "云溪区",
      "code": "430603"
    }, {
      "id": "1829",
      "name": "君山区",
      "code": "430611"
    }, {
      "id": "1830",
      "name": "岳阳县",
      "code": "430621"
    }, {
      "id": "1831",
      "name": "华容县",
      "code": "430623"
    }, {
      "id": "1832",
      "name": "湘阴县",
      "code": "430624"
    }, {
      "id": "1833",
      "name": "平江县",
      "code": "430626"
    }, {
      "id": "1834",
      "name": "汨罗市",
      "code": "430681"
    }, {
      "id": "1835",
      "name": "临湘市",
      "code": "430682"
    }]
  }, {
    "id": "190",
    "name": "常德市",
    "code": "430700",
    "children": [{
      "id": "1836",
      "name": "市辖区",
      "code": "430701"
    }, {
      "id": "1837",
      "name": "武陵区",
      "code": "430702"
    }, {
      "id": "1838",
      "name": "鼎城区",
      "code": "430703"
    }, {
      "id": "1839",
      "name": "安乡县",
      "code": "430721"
    }, {
      "id": "1840",
      "name": "汉寿县",
      "code": "430722"
    }, {
      "id": "1841",
      "name": "澧县",
      "code": "430723"
    }, {
      "id": "1842",
      "name": "临澧县",
      "code": "430724"
    }, {
      "id": "1843",
      "name": "桃源县",
      "code": "430725"
    }, {
      "id": "1844",
      "name": "石门县",
      "code": "430726"
    }, {
      "id": "1845",
      "name": "津市市",
      "code": "430781"
    }]
  }, {
    "id": "191",
    "name": "张家界市",
    "code": "430800",
    "children": [{
      "id": "1846",
      "name": "市辖区",
      "code": "430801"
    }, {
      "id": "1847",
      "name": "永定区",
      "code": "430802"
    }, {
      "id": "1848",
      "name": "武陵源区",
      "code": "430811"
    }, {
      "id": "1849",
      "name": "慈利县",
      "code": "430821"
    }, {
      "id": "1850",
      "name": "桑植县",
      "code": "430822"
    }]
  }, {
    "id": "192",
    "name": "益阳市",
    "code": "430900",
    "children": [{
      "id": "1851",
      "name": "市辖区",
      "code": "430901"
    }, {
      "id": "1852",
      "name": "资阳区",
      "code": "430902"
    }, {
      "id": "1853",
      "name": "赫山区",
      "code": "430903"
    }, {
      "id": "1854",
      "name": "南县",
      "code": "430921"
    }, {
      "id": "1855",
      "name": "桃江县",
      "code": "430922"
    }, {
      "id": "1856",
      "name": "安化县",
      "code": "430923"
    }, {
      "id": "1857",
      "name": "沅江市",
      "code": "430981"
    }]
  }, {
    "id": "193",
    "name": "郴州市",
    "code": "431000",
    "children": [{
      "id": "1858",
      "name": "市辖区",
      "code": "431001"
    }, {
      "id": "1859",
      "name": "北湖区",
      "code": "431002"
    }, {
      "id": "1860",
      "name": "苏仙区",
      "code": "431003"
    }, {
      "id": "1861",
      "name": "桂阳县",
      "code": "431021"
    }, {
      "id": "1862",
      "name": "宜章县",
      "code": "431022"
    }, {
      "id": "1863",
      "name": "永兴县",
      "code": "431023"
    }, {
      "id": "1864",
      "name": "嘉禾县",
      "code": "431024"
    }, {
      "id": "1865",
      "name": "临武县",
      "code": "431025"
    }, {
      "id": "1866",
      "name": "汝城县",
      "code": "431026"
    }, {
      "id": "1867",
      "name": "桂东县",
      "code": "431027"
    }, {
      "id": "1868",
      "name": "安仁县",
      "code": "431028"
    }, {
      "id": "1869",
      "name": "资兴市",
      "code": "431081"
    }]
  }, {
    "id": "194",
    "name": "永州市",
    "code": "431100",
    "children": [{
      "id": "1870",
      "name": "市辖区",
      "code": "431101"
    }, {
      "id": "1871",
      "name": "零陵区",
      "code": "431102"
    }, {
      "id": "1872",
      "name": "冷水滩区",
      "code": "431103"
    }, {
      "id": "1873",
      "name": "祁阳县",
      "code": "431121"
    }, {
      "id": "1874",
      "name": "东安县",
      "code": "431122"
    }, {
      "id": "1875",
      "name": "双牌县",
      "code": "431123"
    }, {
      "id": "1876",
      "name": "道县",
      "code": "431124"
    }, {
      "id": "1877",
      "name": "江永县",
      "code": "431125"
    }, {
      "id": "1878",
      "name": "宁远县",
      "code": "431126"
    }, {
      "id": "1879",
      "name": "蓝山县",
      "code": "431127"
    }, {
      "id": "1880",
      "name": "新田县",
      "code": "431128"
    }, {
      "id": "1881",
      "name": "江华瑶族自治县",
      "code": "431129"
    }]
  }, {
    "id": "195",
    "name": "怀化市",
    "code": "431200",
    "children": [{
      "id": "1882",
      "name": "市辖区",
      "code": "431201"
    }, {
      "id": "1883",
      "name": "鹤城区",
      "code": "431202"
    }, {
      "id": "1884",
      "name": "中方县",
      "code": "431221"
    }, {
      "id": "1885",
      "name": "沅陵县",
      "code": "431222"
    }, {
      "id": "1886",
      "name": "辰溪县",
      "code": "431223"
    }, {
      "id": "1887",
      "name": "溆浦县",
      "code": "431224"
    }, {
      "id": "1888",
      "name": "会同县",
      "code": "431225"
    }, {
      "id": "1889",
      "name": "麻阳苗族自治县",
      "code": "431226"
    }, {
      "id": "1890",
      "name": "新晃侗族自治县",
      "code": "431227"
    }, {
      "id": "1891",
      "name": "芷江侗族自治县",
      "code": "431228"
    }, {
      "id": "1892",
      "name": "靖州苗族侗族自治县",
      "code": "431229"
    }, {
      "id": "1893",
      "name": "通道侗族自治县",
      "code": "431230"
    }, {
      "id": "1894",
      "name": "洪江市",
      "code": "431281"
    }]
  }, {
    "id": "196",
    "name": "娄底市",
    "code": "431300",
    "children": [{
      "id": "1895",
      "name": "市辖区",
      "code": "431301"
    }, {
      "id": "1896",
      "name": "娄星区",
      "code": "431302"
    }, {
      "id": "1897",
      "name": "双峰县",
      "code": "431321"
    }, {
      "id": "1898",
      "name": "新化县",
      "code": "431322"
    }, {
      "id": "1899",
      "name": "冷水江市",
      "code": "431381"
    }, {
      "id": "1900",
      "name": "涟源市",
      "code": "431382"
    }]
  }, {
    "id": "197",
    "name": "湘西土家族苗族自治州",
    "code": "433100",
    "children": [{
      "id": "1901",
      "name": "吉首市",
      "code": "433101"
    }, {
      "id": "1902",
      "name": "泸溪县",
      "code": "433122"
    }, {
      "id": "1903",
      "name": "凤凰县",
      "code": "433123"
    }, {
      "id": "1904",
      "name": "花垣县",
      "code": "433124"
    }, {
      "id": "1905",
      "name": "保靖县",
      "code": "433125"
    }, {
      "id": "1906",
      "name": "古丈县",
      "code": "433126"
    }, {
      "id": "1907",
      "name": "永顺县",
      "code": "433127"
    }, {
      "id": "1908",
      "name": "龙山县",
      "code": "433130"
    }]
  }]
}, {
  "id": "19",
  "name": "广东省",
  "code": "440000",
  "children": [{
    "id": "198",
    "name": "广州市",
    "code": "440100",
    "children": [{
      "id": "1909",
      "name": "市辖区",
      "code": "440101"
    }, {
      "id": "1910",
      "name": "荔湾区",
      "code": "440103"
    }, {
      "id": "1911",
      "name": "越秀区",
      "code": "440104"
    }, {
      "id": "1912",
      "name": "海珠区",
      "code": "440105"
    }, {
      "id": "1913",
      "name": "天河区",
      "code": "440106"
    }, {
      "id": "1914",
      "name": "白云区",
      "code": "440111"
    }, {
      "id": "1915",
      "name": "黄埔区",
      "code": "440112"
    }, {
      "id": "1916",
      "name": "番禺区",
      "code": "440113"
    }, {
      "id": "1917",
      "name": "花都区",
      "code": "440114"
    }, {
      "id": "1918",
      "name": "南沙区",
      "code": "440115"
    }, {
      "id": "1919",
      "name": "从化区",
      "code": "440117"
    }, {
      "id": "1920",
      "name": "增城区",
      "code": "440118"
    }]
  }, {
    "id": "199",
    "name": "韶关市",
    "code": "440200",
    "children": [{
      "id": "1921",
      "name": "市辖区",
      "code": "440201"
    }, {
      "id": "1922",
      "name": "武江区",
      "code": "440203"
    }, {
      "id": "1923",
      "name": "浈江区",
      "code": "440204"
    }, {
      "id": "1924",
      "name": "曲江区",
      "code": "440205"
    }, {
      "id": "1925",
      "name": "始兴县",
      "code": "440222"
    }, {
      "id": "1926",
      "name": "仁化县",
      "code": "440224"
    }, {
      "id": "1927",
      "name": "翁源县",
      "code": "440229"
    }, {
      "id": "1928",
      "name": "乳源瑶族自治县",
      "code": "440232"
    }, {
      "id": "1929",
      "name": "新丰县",
      "code": "440233"
    }, {
      "id": "1930",
      "name": "乐昌市",
      "code": "440281"
    }, {
      "id": "1931",
      "name": "南雄市",
      "code": "440282"
    }]
  }, {
    "id": "200",
    "name": "深圳市",
    "code": "440300",
    "children": [{
      "id": "1932",
      "name": "市辖区",
      "code": "440301"
    }, {
      "id": "1933",
      "name": "罗湖区",
      "code": "440303"
    }, {
      "id": "1934",
      "name": "福田区",
      "code": "440304"
    }, {
      "id": "1935",
      "name": "南山区",
      "code": "440305"
    }, {
      "id": "1936",
      "name": "宝安区",
      "code": "440306"
    }, {
      "id": "1937",
      "name": "龙岗区",
      "code": "440307"
    }, {
      "id": "1938",
      "name": "盐田区",
      "code": "440308"
    }]
  }, {
    "id": "201",
    "name": "珠海市",
    "code": "440400",
    "children": [{
      "id": "1939",
      "name": "市辖区",
      "code": "440401"
    }, {
      "id": "1940",
      "name": "香洲区",
      "code": "440402"
    }, {
      "id": "1941",
      "name": "斗门区",
      "code": "440403"
    }, {
      "id": "1942",
      "name": "金湾区",
      "code": "440404"
    }]
  }, {
    "id": "202",
    "name": "汕头市",
    "code": "440500",
    "children": [{
      "id": "1943",
      "name": "市辖区",
      "code": "440501"
    }, {
      "id": "1944",
      "name": "龙湖区",
      "code": "440507"
    }, {
      "id": "1945",
      "name": "金平区",
      "code": "440511"
    }, {
      "id": "1946",
      "name": "濠江区",
      "code": "440512"
    }, {
      "id": "1947",
      "name": "潮阳区",
      "code": "440513"
    }, {
      "id": "1948",
      "name": "潮南区",
      "code": "440514"
    }, {
      "id": "1949",
      "name": "澄海区",
      "code": "440515"
    }, {
      "id": "1950",
      "name": "南澳县",
      "code": "440523"
    }]
  }, {
    "id": "203",
    "name": "佛山市",
    "code": "440600",
    "children": [{
      "id": "1951",
      "name": "市辖区",
      "code": "440601"
    }, {
      "id": "1952",
      "name": "禅城区",
      "code": "440604"
    }, {
      "id": "1953",
      "name": "南海区",
      "code": "440605"
    }, {
      "id": "1954",
      "name": "顺德区",
      "code": "440606"
    }, {
      "id": "1955",
      "name": "三水区",
      "code": "440607"
    }, {
      "id": "1956",
      "name": "高明区",
      "code": "440608"
    }]
  }, {
    "id": "204",
    "name": "江门市",
    "code": "440700",
    "children": [{
      "id": "1957",
      "name": "市辖区",
      "code": "440701"
    }, {
      "id": "1958",
      "name": "蓬江区",
      "code": "440703"
    }, {
      "id": "1959",
      "name": "江海区",
      "code": "440704"
    }, {
      "id": "1960",
      "name": "新会区",
      "code": "440705"
    }, {
      "id": "1961",
      "name": "台山市",
      "code": "440781"
    }, {
      "id": "1962",
      "name": "开平市",
      "code": "440783"
    }, {
      "id": "1963",
      "name": "鹤山市",
      "code": "440784"
    }, {
      "id": "1964",
      "name": "恩平市",
      "code": "440785"
    }]
  }, {
    "id": "205",
    "name": "湛江市",
    "code": "440800",
    "children": [{
      "id": "1965",
      "name": "市辖区",
      "code": "440801"
    }, {
      "id": "1966",
      "name": "赤坎区",
      "code": "440802"
    }, {
      "id": "1967",
      "name": "霞山区",
      "code": "440803"
    }, {
      "id": "1968",
      "name": "坡头区",
      "code": "440804"
    }, {
      "id": "1969",
      "name": "麻章区",
      "code": "440811"
    }, {
      "id": "1970",
      "name": "遂溪县",
      "code": "440823"
    }, {
      "id": "1971",
      "name": "徐闻县",
      "code": "440825"
    }, {
      "id": "1972",
      "name": "廉江市",
      "code": "440881"
    }, {
      "id": "1973",
      "name": "雷州市",
      "code": "440882"
    }, {
      "id": "1974",
      "name": "吴川市",
      "code": "440883"
    }]
  }, {
    "id": "206",
    "name": "茂名市",
    "code": "440900",
    "children": [{
      "id": "1975",
      "name": "市辖区",
      "code": "440901"
    }, {
      "id": "1976",
      "name": "茂南区",
      "code": "440902"
    }, {
      "id": "1977",
      "name": "电白区",
      "code": "440904"
    }, {
      "id": "1978",
      "name": "高州市",
      "code": "440981"
    }, {
      "id": "1979",
      "name": "化州市",
      "code": "440982"
    }, {
      "id": "1980",
      "name": "信宜市",
      "code": "440983"
    }]
  }, {
    "id": "207",
    "name": "肇庆市",
    "code": "441200",
    "children": [{
      "id": "1981",
      "name": "市辖区",
      "code": "441201"
    }, {
      "id": "1982",
      "name": "端州区",
      "code": "441202"
    }, {
      "id": "1983",
      "name": "鼎湖区",
      "code": "441203"
    }, {
      "id": "1984",
      "name": "高要区",
      "code": "441204"
    }, {
      "id": "1985",
      "name": "广宁县",
      "code": "441223"
    }, {
      "id": "1986",
      "name": "怀集县",
      "code": "441224"
    }, {
      "id": "1987",
      "name": "封开县",
      "code": "441225"
    }, {
      "id": "1988",
      "name": "德庆县",
      "code": "441226"
    }, {
      "id": "1989",
      "name": "四会市",
      "code": "441284"
    }]
  }, {
    "id": "208",
    "name": "惠州市",
    "code": "441300",
    "children": [{
      "id": "1990",
      "name": "市辖区",
      "code": "441301"
    }, {
      "id": "1991",
      "name": "惠城区",
      "code": "441302"
    }, {
      "id": "1992",
      "name": "惠阳区",
      "code": "441303"
    }, {
      "id": "1993",
      "name": "博罗县",
      "code": "441322"
    }, {
      "id": "1994",
      "name": "惠东县",
      "code": "441323"
    }, {
      "id": "1995",
      "name": "龙门县",
      "code": "441324"
    }]
  }, {
    "id": "209",
    "name": "梅州市",
    "code": "441400",
    "children": [{
      "id": "1996",
      "name": "市辖区",
      "code": "441401"
    }, {
      "id": "1997",
      "name": "梅江区",
      "code": "441402"
    }, {
      "id": "1998",
      "name": "梅县区",
      "code": "441403"
    }, {
      "id": "1999",
      "name": "大埔县",
      "code": "441422"
    }, {
      "id": "2000",
      "name": "丰顺县",
      "code": "441423"
    }, {
      "id": "2001",
      "name": "五华县",
      "code": "441424"
    }, {
      "id": "2002",
      "name": "平远县",
      "code": "441426"
    }, {
      "id": "2003",
      "name": "蕉岭县",
      "code": "441427"
    }, {
      "id": "2004",
      "name": "兴宁市",
      "code": "441481"
    }]
  }, {
    "id": "210",
    "name": "汕尾市",
    "code": "441500",
    "children": [{
      "id": "2005",
      "name": "市辖区",
      "code": "441501"
    }, {
      "id": "2006",
      "name": "城区",
      "code": "441502"
    }, {
      "id": "2007",
      "name": "海丰县",
      "code": "441521"
    }, {
      "id": "2008",
      "name": "陆河县",
      "code": "441523"
    }, {
      "id": "2009",
      "name": "陆丰市",
      "code": "441581"
    }]
  }, {
    "id": "211",
    "name": "河源市",
    "code": "441600",
    "children": [{
      "id": "2010",
      "name": "市辖区",
      "code": "441601"
    }, {
      "id": "2011",
      "name": "源城区",
      "code": "441602"
    }, {
      "id": "2012",
      "name": "紫金县",
      "code": "441621"
    }, {
      "id": "2013",
      "name": "龙川县",
      "code": "441622"
    }, {
      "id": "2014",
      "name": "连平县",
      "code": "441623"
    }, {
      "id": "2015",
      "name": "和平县",
      "code": "441624"
    }, {
      "id": "2016",
      "name": "东源县",
      "code": "441625"
    }]
  }, {
    "id": "212",
    "name": "阳江市",
    "code": "441700",
    "children": [{
      "id": "2017",
      "name": "市辖区",
      "code": "441701"
    }, {
      "id": "2018",
      "name": "江城区",
      "code": "441702"
    }, {
      "id": "2019",
      "name": "阳东区",
      "code": "441704"
    }, {
      "id": "2020",
      "name": "阳西县",
      "code": "441721"
    }, {
      "id": "2021",
      "name": "阳春市",
      "code": "441781"
    }]
  }, {
    "id": "213",
    "name": "清远市",
    "code": "441800",
    "children": [{
      "id": "2022",
      "name": "市辖区",
      "code": "441801"
    }, {
      "id": "2023",
      "name": "清城区",
      "code": "441802"
    }, {
      "id": "2024",
      "name": "清新区",
      "code": "441803"
    }, {
      "id": "2025",
      "name": "佛冈县",
      "code": "441821"
    }, {
      "id": "2026",
      "name": "阳山县",
      "code": "441823"
    }, {
      "id": "2027",
      "name": "连山壮族瑶族自治县",
      "code": "441825"
    }, {
      "id": "2028",
      "name": "连南瑶族自治县",
      "code": "441826"
    }, {
      "id": "2029",
      "name": "英德市",
      "code": "441881"
    }, {
      "id": "2030",
      "name": "连州市",
      "code": "441882"
    }]
  }, {
    "id": "214",
    "name": "东莞市",
    "code": "441900",
    "children": [{
      "id": "9004",
      "name": "莞城街道",
      "code": "441900006"
    }, {
      "id": "9003",
      "name": "万江街道",
      "code": "441900005"
    }, {
      "id": "9002",
      "name": "南城街道",
      "code": "441900004"
    }, {
      "id": "9001",
      "name": "东城街道",
      "code": "441900003"
    }, {
      "id": "9005",
      "name": "石碣镇",
      "code": "441900101"
    }, {
      "id": "9006",
      "name": "石龙镇",
      "code": "441900102"
    }, {
      "id": "9007",
      "name": "茶山镇",
      "code": "441900103"
    }, {
      "id": "9008",
      "name": "石排镇",
      "code": "441900104"
    }, {
      "id": "9009",
      "name": "企石镇",
      "code": "441900105"
    }, {
      "id": "9010",
      "name": "横沥镇",
      "code": "441900106"
    }, {
      "id": "9011",
      "name": "桥头镇",
      "code": "441900107"
    }, {
      "id": "9012",
      "name": "谢岗镇",
      "code": "441900108"
    }, {
      "id": "9013",
      "name": "东坑镇",
      "code": "441900109"
    }, {
      "id": "9014",
      "name": "常平镇",
      "code": "441900110"
    }, {
      "id": "9015",
      "name": "寮步镇",
      "code": "441900111"
    }, {
      "id": "9016",
      "name": "樟木头镇",
      "code": "441900112"
    }, {
      "id": "9017",
      "name": "大朗镇",
      "code": "441900113"
    }, {
      "id": "9018",
      "name": "黄江镇",
      "code": "441900114"
    }, {
      "id": "9019",
      "name": "清溪镇",
      "code": "441900115"
    }, {
      "id": "9020",
      "name": "塘厦镇",
      "code": "441900116"
    }, {
      "id": "9021",
      "name": "凤岗镇",
      "code": "441900117"
    }, {
      "id": "9022",
      "name": "大岭山镇",
      "code": "441900118"
    }, {
      "id": "9023",
      "name": "长安镇",
      "code": "441900119"
    }, {
      "id": "9024",
      "name": "虎门镇",
      "code": "441900121"
    }, {
      "id": "9025",
      "name": "厚街镇",
      "code": "441900122"
    }, {
      "id": "9026",
      "name": "沙田镇",
      "code": "441900123"
    }, {
      "id": "9027",
      "name": "道滘镇",
      "code": "441900124"
    }, {
      "id": "9028",
      "name": "洪梅镇",
      "code": "441900125"
    }, {
      "id": "9029",
      "name": "麻涌镇",
      "code": "441900126"
    }, {
      "id": "9030",
      "name": "望牛墩镇",
      "code": "441900127"
    }, {
      "id": "9031",
      "name": "中堂镇",
      "code": "441900128"
    }, {
      "id": "9032",
      "name": "高埗镇",
      "code": "441900129"
    }, {
      "id": "9033",
      "name": "松山湖管委会",
      "code": "441900401"
    }, {
      "id": "9034",
      "name": "东莞港",
      "code": "441900402"
    }, {
      "id": "9035",
      "name": "东莞生态园",
      "code": "441900403"
    }]
  }, {
    "id": "215",
    "name": "中山市",
    "code": "442000",
    "children": [{
      "id": "9101",
      "name": "石岐区街道",
      "code": "442000001"
    }, {
      "id": "9102",
      "name": "东区街道",
      "code": "442000002"
    }, {
      "id": "9103",
      "name": "火炬开发区街道",
      "code": "442000003"
    }, {
      "id": "9104",
      "name": "西区街道",
      "code": "442000004"
    }, {
      "id": "9105",
      "name": "南区街道",
      "code": "442000005"
    }, {
      "id": "9106",
      "name": "五桂山街道",
      "code": "442000006"
    }, {
      "id": "9107",
      "name": "小榄镇",
      "code": "442000100"
    }, {
      "id": "9108",
      "name": "黄圃镇",
      "code": "442000101"
    }, {
      "id": "9109",
      "name": "民众镇",
      "code": "442000102"
    }, {
      "id": "9110",
      "name": "东凤镇",
      "code": "442000103"
    }, {
      "id": "9111",
      "name": "东升镇",
      "code": "442000104"
    }, {
      "id": "9112",
      "name": "古镇镇",
      "code": "442000105"
    }, {
      "id": "9113",
      "name": "沙溪镇",
      "code": "442000106"
    }, {
      "id": "9114",
      "name": "坦洲镇",
      "code": "442000107"
    }, {
      "id": "9115",
      "name": "港口镇",
      "code": "442000108"
    }, {
      "id": "9116",
      "name": "三角镇",
      "code": "442000109"
    }, {
      "id": "9117",
      "name": "横栏镇",
      "code": "442000110"
    }, {
      "id": "9118",
      "name": "南头镇",
      "code": "442000111"
    }, {
      "id": "9119",
      "name": "阜沙镇",
      "code": "442000112"
    }, {
      "id": "9120",
      "name": "南朗镇",
      "code": "442000113"
    }, {
      "id": "9121",
      "name": "三乡镇",
      "code": "442000114"
    }, {
      "id": "9122",
      "name": "板芙镇",
      "code": "442000115"
    }, {
      "id": "9123",
      "name": "大涌镇",
      "code": "442000116"
    }, {
      "id": "9124",
      "name": "神湾镇",
      "code": "442000117"
    }]
  }, {
    "id": "216",
    "name": "潮州市",
    "code": "445100",
    "children": [{
      "id": "2031",
      "name": "市辖区",
      "code": "445101"
    }, {
      "id": "2032",
      "name": "湘桥区",
      "code": "445102"
    }, {
      "id": "2033",
      "name": "潮安区",
      "code": "445103"
    }, {
      "id": "2034",
      "name": "饶平县",
      "code": "445122"
    }]
  }, {
    "id": "217",
    "name": "揭阳市",
    "code": "445200",
    "children": [{
      "id": "2035",
      "name": "市辖区",
      "code": "445201"
    }, {
      "id": "2036",
      "name": "榕城区",
      "code": "445202"
    }, {
      "id": "2037",
      "name": "揭东区",
      "code": "445203"
    }, {
      "id": "2038",
      "name": "揭西县",
      "code": "445222"
    }, {
      "id": "2039",
      "name": "惠来县",
      "code": "445224"
    }, {
      "id": "2040",
      "name": "普宁市",
      "code": "445281"
    }]
  }, {
    "id": "218",
    "name": "云浮市",
    "code": "445300",
    "children": [{
      "id": "2041",
      "name": "市辖区",
      "code": "445301"
    }, {
      "id": "2042",
      "name": "云城区",
      "code": "445302"
    }, {
      "id": "2043",
      "name": "云安区",
      "code": "445303"
    }, {
      "id": "2044",
      "name": "新兴县",
      "code": "445321"
    }, {
      "id": "2045",
      "name": "郁南县",
      "code": "445322"
    }, {
      "id": "2046",
      "name": "罗定市",
      "code": "445381"
    }]
  }]
}, {
  "id": "20",
  "name": "广西壮族自治区",
  "code": "450000",
  "children": [{
    "id": "219",
    "name": "南宁市",
    "code": "450100",
    "children": [{
      "id": "2047",
      "name": "市辖区",
      "code": "450101"
    }, {
      "id": "2048",
      "name": "兴宁区",
      "code": "450102"
    }, {
      "id": "2049",
      "name": "青秀区",
      "code": "450103"
    }, {
      "id": "2050",
      "name": "江南区",
      "code": "450105"
    }, {
      "id": "2051",
      "name": "西乡塘区",
      "code": "450107"
    }, {
      "id": "2052",
      "name": "良庆区",
      "code": "450108"
    }, {
      "id": "2053",
      "name": "邕宁区",
      "code": "450109"
    }, {
      "id": "2054",
      "name": "武鸣区",
      "code": "450110"
    }, {
      "id": "2055",
      "name": "隆安县",
      "code": "450123"
    }, {
      "id": "2056",
      "name": "马山县",
      "code": "450124"
    }, {
      "id": "2057",
      "name": "上林县",
      "code": "450125"
    }, {
      "id": "2058",
      "name": "宾阳县",
      "code": "450126"
    }, {
      "id": "2059",
      "name": "横县",
      "code": "450127"
    }]
  }, {
    "id": "220",
    "name": "柳州市",
    "code": "450200",
    "children": [{
      "id": "2060",
      "name": "市辖区",
      "code": "450201"
    }, {
      "id": "2061",
      "name": "城中区",
      "code": "450202"
    }, {
      "id": "2062",
      "name": "鱼峰区",
      "code": "450203"
    }, {
      "id": "2063",
      "name": "柳南区",
      "code": "450204"
    }, {
      "id": "2064",
      "name": "柳北区",
      "code": "450205"
    }, {
      "id": "2065",
      "name": "柳江区",
      "code": "450206"
    }, {
      "id": "2066",
      "name": "柳城县",
      "code": "450222"
    }, {
      "id": "2067",
      "name": "鹿寨县",
      "code": "450223"
    }, {
      "id": "2068",
      "name": "融安县",
      "code": "450224"
    }, {
      "id": "2069",
      "name": "融水苗族自治县",
      "code": "450225"
    }, {
      "id": "2070",
      "name": "三江侗族自治县",
      "code": "450226"
    }]
  }, {
    "id": "221",
    "name": "桂林市",
    "code": "450300",
    "children": [{
      "id": "2071",
      "name": "市辖区",
      "code": "450301"
    }, {
      "id": "2072",
      "name": "秀峰区",
      "code": "450302"
    }, {
      "id": "2073",
      "name": "叠彩区",
      "code": "450303"
    }, {
      "id": "2074",
      "name": "象山区",
      "code": "450304"
    }, {
      "id": "2075",
      "name": "七星区",
      "code": "450305"
    }, {
      "id": "2076",
      "name": "雁山区",
      "code": "450311"
    }, {
      "id": "2077",
      "name": "临桂区",
      "code": "450312"
    }, {
      "id": "2078",
      "name": "阳朔县",
      "code": "450321"
    }, {
      "id": "2079",
      "name": "灵川县",
      "code": "450323"
    }, {
      "id": "2080",
      "name": "全州县",
      "code": "450324"
    }, {
      "id": "2081",
      "name": "兴安县",
      "code": "450325"
    }, {
      "id": "2082",
      "name": "永福县",
      "code": "450326"
    }, {
      "id": "2083",
      "name": "灌阳县",
      "code": "450327"
    }, {
      "id": "2084",
      "name": "龙胜各族自治县",
      "code": "450328"
    }, {
      "id": "2085",
      "name": "资源县",
      "code": "450329"
    }, {
      "id": "2086",
      "name": "平乐县",
      "code": "450330"
    }, {
      "id": "2087",
      "name": "荔浦县",
      "code": "450331"
    }, {
      "id": "2088",
      "name": "恭城瑶族自治县",
      "code": "450332"
    }]
  }, {
    "id": "222",
    "name": "梧州市",
    "code": "450400",
    "children": [{
      "id": "2089",
      "name": "市辖区",
      "code": "450401"
    }, {
      "id": "2090",
      "name": "万秀区",
      "code": "450403"
    }, {
      "id": "2091",
      "name": "长洲区",
      "code": "450405"
    }, {
      "id": "2092",
      "name": "龙圩区",
      "code": "450406"
    }, {
      "id": "2093",
      "name": "苍梧县",
      "code": "450421"
    }, {
      "id": "2094",
      "name": "藤县",
      "code": "450422"
    }, {
      "id": "2095",
      "name": "蒙山县",
      "code": "450423"
    }, {
      "id": "2096",
      "name": "岑溪市",
      "code": "450481"
    }]
  }, {
    "id": "223",
    "name": "北海市",
    "code": "450500",
    "children": [{
      "id": "2097",
      "name": "市辖区",
      "code": "450501"
    }, {
      "id": "2098",
      "name": "海城区",
      "code": "450502"
    }, {
      "id": "2099",
      "name": "银海区",
      "code": "450503"
    }, {
      "id": "2100",
      "name": "铁山港区",
      "code": "450512"
    }, {
      "id": "2101",
      "name": "合浦县",
      "code": "450521"
    }]
  }, {
    "id": "224",
    "name": "防城港市",
    "code": "450600",
    "children": [{
      "id": "2102",
      "name": "市辖区",
      "code": "450601"
    }, {
      "id": "2103",
      "name": "港口区",
      "code": "450602"
    }, {
      "id": "2104",
      "name": "防城区",
      "code": "450603"
    }, {
      "id": "2105",
      "name": "上思县",
      "code": "450621"
    }, {
      "id": "2106",
      "name": "东兴市",
      "code": "450681"
    }]
  }, {
    "id": "225",
    "name": "钦州市",
    "code": "450700",
    "children": [{
      "id": "2107",
      "name": "市辖区",
      "code": "450701"
    }, {
      "id": "2108",
      "name": "钦南区",
      "code": "450702"
    }, {
      "id": "2109",
      "name": "钦北区",
      "code": "450703"
    }, {
      "id": "2110",
      "name": "灵山县",
      "code": "450721"
    }, {
      "id": "2111",
      "name": "浦北县",
      "code": "450722"
    }]
  }, {
    "id": "226",
    "name": "贵港市",
    "code": "450800",
    "children": [{
      "id": "2112",
      "name": "市辖区",
      "code": "450801"
    }, {
      "id": "2113",
      "name": "港北区",
      "code": "450802"
    }, {
      "id": "2114",
      "name": "港南区",
      "code": "450803"
    }, {
      "id": "2115",
      "name": "覃塘区",
      "code": "450804"
    }, {
      "id": "2116",
      "name": "平南县",
      "code": "450821"
    }, {
      "id": "2117",
      "name": "桂平市",
      "code": "450881"
    }]
  }, {
    "id": "227",
    "name": "玉林市",
    "code": "450900",
    "children": [{
      "id": "2118",
      "name": "市辖区",
      "code": "450901"
    }, {
      "id": "2119",
      "name": "玉州区",
      "code": "450902"
    }, {
      "id": "2120",
      "name": "福绵区",
      "code": "450903"
    }, {
      "id": "2121",
      "name": "容县",
      "code": "450921"
    }, {
      "id": "2122",
      "name": "陆川县",
      "code": "450922"
    }, {
      "id": "2123",
      "name": "博白县",
      "code": "450923"
    }, {
      "id": "2124",
      "name": "兴业县",
      "code": "450924"
    }, {
      "id": "2125",
      "name": "北流市",
      "code": "450981"
    }]
  }, {
    "id": "228",
    "name": "百色市",
    "code": "451000",
    "children": [{
      "id": "2126",
      "name": "市辖区",
      "code": "451001"
    }, {
      "id": "2127",
      "name": "右江区",
      "code": "451002"
    }, {
      "id": "2128",
      "name": "田阳县",
      "code": "451021"
    }, {
      "id": "2129",
      "name": "田东县",
      "code": "451022"
    }, {
      "id": "2130",
      "name": "平果县",
      "code": "451023"
    }, {
      "id": "2131",
      "name": "德保县",
      "code": "451024"
    }, {
      "id": "2132",
      "name": "那坡县",
      "code": "451026"
    }, {
      "id": "2133",
      "name": "凌云县",
      "code": "451027"
    }, {
      "id": "2134",
      "name": "乐业县",
      "code": "451028"
    }, {
      "id": "2135",
      "name": "田林县",
      "code": "451029"
    }, {
      "id": "2136",
      "name": "西林县",
      "code": "451030"
    }, {
      "id": "2137",
      "name": "隆林各族自治县",
      "code": "451031"
    }, {
      "id": "2138",
      "name": "靖西市",
      "code": "451081"
    }]
  }, {
    "id": "229",
    "name": "贺州市",
    "code": "451100",
    "children": [{
      "id": "2139",
      "name": "市辖区",
      "code": "451101"
    }, {
      "id": "2140",
      "name": "八步区",
      "code": "451102"
    }, {
      "id": "2141",
      "name": "平桂区",
      "code": "451103"
    }, {
      "id": "2142",
      "name": "昭平县",
      "code": "451121"
    }, {
      "id": "2143",
      "name": "钟山县",
      "code": "451122"
    }, {
      "id": "2144",
      "name": "富川瑶族自治县",
      "code": "451123"
    }]
  }, {
    "id": "230",
    "name": "河池市",
    "code": "451200",
    "children": [{
      "id": "2145",
      "name": "市辖区",
      "code": "451201"
    }, {
      "id": "2146",
      "name": "金城江区",
      "code": "451202"
    }, {
      "id": "2147",
      "name": "南丹县",
      "code": "451221"
    }, {
      "id": "2148",
      "name": "天峨县",
      "code": "451222"
    }, {
      "id": "2149",
      "name": "凤山县",
      "code": "451223"
    }, {
      "id": "2150",
      "name": "东兰县",
      "code": "451224"
    }, {
      "id": "2151",
      "name": "罗城仫佬族自治县",
      "code": "451225"
    }, {
      "id": "2152",
      "name": "环江毛南族自治县",
      "code": "451226"
    }, {
      "id": "2153",
      "name": "巴马瑶族自治县",
      "code": "451227"
    }, {
      "id": "2154",
      "name": "都安瑶族自治县",
      "code": "451228"
    }, {
      "id": "2155",
      "name": "大化瑶族自治县",
      "code": "451229"
    }, {
      "id": "2156",
      "name": "宜州市",
      "code": "451281"
    }]
  }, {
    "id": "231",
    "name": "来宾市",
    "code": "451300",
    "children": [{
      "id": "2157",
      "name": "市辖区",
      "code": "451301"
    }, {
      "id": "2158",
      "name": "兴宾区",
      "code": "451302"
    }, {
      "id": "2159",
      "name": "忻城县",
      "code": "451321"
    }, {
      "id": "2160",
      "name": "象州县",
      "code": "451322"
    }, {
      "id": "2161",
      "name": "武宣县",
      "code": "451323"
    }, {
      "id": "2162",
      "name": "金秀瑶族自治县",
      "code": "451324"
    }, {
      "id": "2163",
      "name": "合山市",
      "code": "451381"
    }]
  }, {
    "id": "232",
    "name": "崇左市",
    "code": "451400",
    "children": [{
      "id": "2164",
      "name": "市辖区",
      "code": "451401"
    }, {
      "id": "2165",
      "name": "江州区",
      "code": "451402"
    }, {
      "id": "2166",
      "name": "扶绥县",
      "code": "451421"
    }, {
      "id": "2167",
      "name": "宁明县",
      "code": "451422"
    }, {
      "id": "2168",
      "name": "龙州县",
      "code": "451423"
    }, {
      "id": "2169",
      "name": "大新县",
      "code": "451424"
    }, {
      "id": "2170",
      "name": "天等县",
      "code": "451425"
    }, {
      "id": "2171",
      "name": "凭祥市",
      "code": "451481"
    }]
  }]
}, {
  "id": "21",
  "name": "海南省",
  "code": "460000",
  "children": [{
    "id": "233",
    "name": "海口市",
    "code": "460100",
    "children": [{
      "id": "2172",
      "name": "市辖区",
      "code": "460101"
    }, {
      "id": "2173",
      "name": "秀英区",
      "code": "460105"
    }, {
      "id": "2174",
      "name": "龙华区",
      "code": "460106"
    }, {
      "id": "2175",
      "name": "琼山区",
      "code": "460107"
    }, {
      "id": "2176",
      "name": "美兰区",
      "code": "460108"
    }]
  }, {
    "id": "234",
    "name": "三亚市",
    "code": "460200",
    "children": [{
      "id": "2177",
      "name": "市辖区",
      "code": "460201"
    }, {
      "id": "2178",
      "name": "海棠区",
      "code": "460202"
    }, {
      "id": "2179",
      "name": "吉阳区",
      "code": "460203"
    }, {
      "id": "2180",
      "name": "天涯区",
      "code": "460204"
    }, {
      "id": "2181",
      "name": "崖州区",
      "code": "460205"
    }]
  }, {
    "id": "235",
    "name": "三沙市",
    "code": "460300",
    "children": [{
      "id": "9201",
      "name": "西沙群岛",
      "code": "460321"
    }, {
      "id": "9202",
      "name": "南沙群岛",
      "code": "460322"
    }, {
      "id": "9203",
      "name": "中沙群岛的岛礁及其海域",
      "code": "460323"
    }]
  }, {
    "id": "236",
    "name": "儋州市",
    "code": "460400",
    "children": [{
      "id": "9301",
      "name": "那大镇",
      "code": "460400100"
    }, {
      "id": "9302",
      "name": "和庆镇",
      "code": "460400101"
    }, {
      "id": "9303",
      "name": "南丰镇",
      "code": "460400102"
    }, {
      "id": "9304",
      "name": "大成镇",
      "code": "460400103"
    }, {
      "id": "9305",
      "name": "雅星镇",
      "code": "460400104"
    }, {
      "id": "9306",
      "name": "兰洋镇",
      "code": "460400105"
    }, {
      "id": "9307",
      "name": "光村镇",
      "code": "460400106"
    }, {
      "id": "9308",
      "name": "木棠镇",
      "code": "460400107"
    }, {
      "id": "9309",
      "name": "海头镇",
      "code": "460400108"
    }, {
      "id": "9310",
      "name": "峨蔓镇",
      "code": "460400109"
    }, {
      "id": "9311",
      "name": "王五镇",
      "code": "460400111"
    }, {
      "id": "9312",
      "name": "白马井镇",
      "code": "460400112"
    }, {
      "id": "9313",
      "name": "中和镇",
      "code": "460400113"
    }, {
      "id": "9314",
      "name": "排浦镇",
      "code": "460400114"
    }, {
      "id": "9315",
      "name": "东成镇",
      "code": "460400115"
    }, {
      "id": "9316",
      "name": "新州镇",
      "code": "460400116"
    }, {
      "id": "9317",
      "name": "洋浦经济开发区",
      "code": "460400499"
    }, {
      "id": "9318",
      "name": "华南热作学院",
      "code": "460400500"
    }]
  }, {
    "id": "237",
    "name": "省直辖县级行政区划",
    "code": "469000",
    "children": [{
      "id": "2182",
      "name": "五指山市",
      "code": "469001"
    }, {
      "id": "2183",
      "name": "琼海市",
      "code": "469002"
    }, {
      "id": "2184",
      "name": "文昌市",
      "code": "469005"
    }, {
      "id": "2185",
      "name": "万宁市",
      "code": "469006"
    }, {
      "id": "2186",
      "name": "东方市",
      "code": "469007"
    }, {
      "id": "2187",
      "name": "定安县",
      "code": "469021"
    }, {
      "id": "2188",
      "name": "屯昌县",
      "code": "469022"
    }, {
      "id": "2189",
      "name": "澄迈县",
      "code": "469023"
    }, {
      "id": "2190",
      "name": "临高县",
      "code": "469024"
    }, {
      "id": "2191",
      "name": "白沙黎族自治县",
      "code": "469025"
    }, {
      "id": "2192",
      "name": "昌江黎族自治县",
      "code": "469026"
    }, {
      "id": "2193",
      "name": "乐东黎族自治县",
      "code": "469027"
    }, {
      "id": "2194",
      "name": "陵水黎族自治县",
      "code": "469028"
    }, {
      "id": "2195",
      "name": "保亭黎族苗族自治县",
      "code": "469029"
    }, {
      "id": "2196",
      "name": "琼中黎族苗族自治县",
      "code": "469030"
    }]
  }]
}, {
  "id": "22",
  "name": "重庆市",
  "code": "500000",
  "children": [{
    "id": "238",
    "name": "市辖区",
    "code": "500100",
    "children": [{
      "id": "2197",
      "name": "万州区",
      "code": "500101"
    }, {
      "id": "2198",
      "name": "涪陵区",
      "code": "500102"
    }, {
      "id": "2199",
      "name": "渝中区",
      "code": "500103"
    }, {
      "id": "2200",
      "name": "大渡口区",
      "code": "500104"
    }, {
      "id": "2201",
      "name": "江北区",
      "code": "500105"
    }, {
      "id": "2202",
      "name": "沙坪坝区",
      "code": "500106"
    }, {
      "id": "2203",
      "name": "九龙坡区",
      "code": "500107"
    }, {
      "id": "2204",
      "name": "南岸区",
      "code": "500108"
    }, {
      "id": "2205",
      "name": "北碚区",
      "code": "500109"
    }, {
      "id": "2206",
      "name": "綦江区",
      "code": "500110"
    }, {
      "id": "2207",
      "name": "大足区",
      "code": "500111"
    }, {
      "id": "2208",
      "name": "渝北区",
      "code": "500112"
    }, {
      "id": "2209",
      "name": "巴南区",
      "code": "500113"
    }, {
      "id": "2210",
      "name": "黔江区",
      "code": "500114"
    }, {
      "id": "2211",
      "name": "长寿区",
      "code": "500115"
    }, {
      "id": "2212",
      "name": "江津区",
      "code": "500116"
    }, {
      "id": "2213",
      "name": "合川区",
      "code": "500117"
    }, {
      "id": "2214",
      "name": "永川区",
      "code": "500118"
    }, {
      "id": "2215",
      "name": "南川区",
      "code": "500119"
    }, {
      "id": "2216",
      "name": "璧山区",
      "code": "500120"
    }, {
      "id": "2217",
      "name": "铜梁区",
      "code": "500151"
    }, {
      "id": "2218",
      "name": "潼南区",
      "code": "500152"
    }, {
      "id": "2219",
      "name": "荣昌区",
      "code": "500153"
    }, {
      "id": "2220",
      "name": "开州区",
      "code": "500154"
    }]
  }, {
    "id": "239",
    "name": "县",
    "code": "500200",
    "children": [{
      "id": "2221",
      "name": "梁平县",
      "code": "500228"
    }, {
      "id": "2222",
      "name": "城口县",
      "code": "500229"
    }, {
      "id": "2223",
      "name": "丰都县",
      "code": "500230"
    }, {
      "id": "2224",
      "name": "垫江县",
      "code": "500231"
    }, {
      "id": "2225",
      "name": "武隆县",
      "code": "500232"
    }, {
      "id": "2226",
      "name": "忠县",
      "code": "500233"
    }, {
      "id": "2227",
      "name": "云阳县",
      "code": "500235"
    }, {
      "id": "2228",
      "name": "奉节县",
      "code": "500236"
    }, {
      "id": "2229",
      "name": "巫山县",
      "code": "500237"
    }, {
      "id": "2230",
      "name": "巫溪县",
      "code": "500238"
    }, {
      "id": "2231",
      "name": "石柱土家族自治县",
      "code": "500240"
    }, {
      "id": "2232",
      "name": "秀山土家族苗族自治县",
      "code": "500241"
    }, {
      "id": "2233",
      "name": "酉阳土家族苗族自治县",
      "code": "500242"
    }, {
      "id": "2234",
      "name": "彭水苗族土家族自治县",
      "code": "500243"
    }]
  }]
}, {
  "id": "23",
  "name": "四川省",
  "code": "510000",
  "children": [{
    "id": "240",
    "name": "成都市",
    "code": "510100",
    "children": [{
      "id": "2235",
      "name": "市辖区",
      "code": "510101"
    }, {
      "id": "2236",
      "name": "锦江区",
      "code": "510104"
    }, {
      "id": "2237",
      "name": "青羊区",
      "code": "510105"
    }, {
      "id": "2238",
      "name": "金牛区",
      "code": "510106"
    }, {
      "id": "2239",
      "name": "武侯区",
      "code": "510107"
    }, {
      "id": "2240",
      "name": "成华区",
      "code": "510108"
    }, {
      "id": "2241",
      "name": "龙泉驿区",
      "code": "510112"
    }, {
      "id": "2242",
      "name": "青白江区",
      "code": "510113"
    }, {
      "id": "2243",
      "name": "新都区",
      "code": "510114"
    }, {
      "id": "2244",
      "name": "温江区",
      "code": "510115"
    }, {
      "id": "2245",
      "name": "双流区",
      "code": "510116"
    }, {
      "id": "2246",
      "name": "金堂县",
      "code": "510121"
    }, {
      "id": "2247",
      "name": "郫县",
      "code": "510124"
    }, {
      "id": "2248",
      "name": "大邑县",
      "code": "510129"
    }, {
      "id": "2249",
      "name": "蒲江县",
      "code": "510131"
    }, {
      "id": "2250",
      "name": "新津县",
      "code": "510132"
    }, {
      "id": "2251",
      "name": "都江堰市",
      "code": "510181"
    }, {
      "id": "2252",
      "name": "彭州市",
      "code": "510182"
    }, {
      "id": "2253",
      "name": "邛崃市",
      "code": "510183"
    }, {
      "id": "2254",
      "name": "崇州市",
      "code": "510184"
    }, {
      "id": "2255",
      "name": "简阳市",
      "code": "510185"
    }]
  }, {
    "id": "241",
    "name": "自贡市",
    "code": "510300",
    "children": [{
      "id": "2256",
      "name": "市辖区",
      "code": "510301"
    }, {
      "id": "2257",
      "name": "自流井区",
      "code": "510302"
    }, {
      "id": "2258",
      "name": "贡井区",
      "code": "510303"
    }, {
      "id": "2259",
      "name": "大安区",
      "code": "510304"
    }, {
      "id": "2260",
      "name": "沿滩区",
      "code": "510311"
    }, {
      "id": "2261",
      "name": "荣县",
      "code": "510321"
    }, {
      "id": "2262",
      "name": "富顺县",
      "code": "510322"
    }]
  }, {
    "id": "242",
    "name": "攀枝花市",
    "code": "510400",
    "children": [{
      "id": "2263",
      "name": "市辖区",
      "code": "510401"
    }, {
      "id": "2264",
      "name": "东区",
      "code": "510402"
    }, {
      "id": "2265",
      "name": "西区",
      "code": "510403"
    }, {
      "id": "2266",
      "name": "仁和区",
      "code": "510411"
    }, {
      "id": "2267",
      "name": "米易县",
      "code": "510421"
    }, {
      "id": "2268",
      "name": "盐边县",
      "code": "510422"
    }]
  }, {
    "id": "243",
    "name": "泸州市",
    "code": "510500",
    "children": [{
      "id": "2269",
      "name": "市辖区",
      "code": "510501"
    }, {
      "id": "2270",
      "name": "江阳区",
      "code": "510502"
    }, {
      "id": "2271",
      "name": "纳溪区",
      "code": "510503"
    }, {
      "id": "2272",
      "name": "龙马潭区",
      "code": "510504"
    }, {
      "id": "2273",
      "name": "泸县",
      "code": "510521"
    }, {
      "id": "2274",
      "name": "合江县",
      "code": "510522"
    }, {
      "id": "2275",
      "name": "叙永县",
      "code": "510524"
    }, {
      "id": "2276",
      "name": "古蔺县",
      "code": "510525"
    }]
  }, {
    "id": "244",
    "name": "德阳市",
    "code": "510600",
    "children": [{
      "id": "2277",
      "name": "市辖区",
      "code": "510601"
    }, {
      "id": "2278",
      "name": "旌阳区",
      "code": "510603"
    }, {
      "id": "2279",
      "name": "中江县",
      "code": "510623"
    }, {
      "id": "2280",
      "name": "罗江县",
      "code": "510626"
    }, {
      "id": "2281",
      "name": "广汉市",
      "code": "510681"
    }, {
      "id": "2282",
      "name": "什邡市",
      "code": "510682"
    }, {
      "id": "2283",
      "name": "绵竹市",
      "code": "510683"
    }]
  }, {
    "id": "245",
    "name": "绵阳市",
    "code": "510700",
    "children": [{
      "id": "2284",
      "name": "市辖区",
      "code": "510701"
    }, {
      "id": "2285",
      "name": "涪城区",
      "code": "510703"
    }, {
      "id": "2286",
      "name": "游仙区",
      "code": "510704"
    }, {
      "id": "2287",
      "name": "安州区",
      "code": "510705"
    }, {
      "id": "2288",
      "name": "三台县",
      "code": "510722"
    }, {
      "id": "2289",
      "name": "盐亭县",
      "code": "510723"
    }, {
      "id": "2290",
      "name": "梓潼县",
      "code": "510725"
    }, {
      "id": "2291",
      "name": "北川羌族自治县",
      "code": "510726"
    }, {
      "id": "2292",
      "name": "平武县",
      "code": "510727"
    }, {
      "id": "2293",
      "name": "江油市",
      "code": "510781"
    }]
  }, {
    "id": "246",
    "name": "广元市",
    "code": "510800",
    "children": [{
      "id": "2294",
      "name": "市辖区",
      "code": "510801"
    }, {
      "id": "2295",
      "name": "利州区",
      "code": "510802"
    }, {
      "id": "2296",
      "name": "昭化区",
      "code": "510811"
    }, {
      "id": "2297",
      "name": "朝天区",
      "code": "510812"
    }, {
      "id": "2298",
      "name": "旺苍县",
      "code": "510821"
    }, {
      "id": "2299",
      "name": "青川县",
      "code": "510822"
    }, {
      "id": "2300",
      "name": "剑阁县",
      "code": "510823"
    }, {
      "id": "2301",
      "name": "苍溪县",
      "code": "510824"
    }]
  }, {
    "id": "247",
    "name": "遂宁市",
    "code": "510900",
    "children": [{
      "id": "2302",
      "name": "市辖区",
      "code": "510901"
    }, {
      "id": "2303",
      "name": "船山区",
      "code": "510903"
    }, {
      "id": "2304",
      "name": "安居区",
      "code": "510904"
    }, {
      "id": "2305",
      "name": "蓬溪县",
      "code": "510921"
    }, {
      "id": "2306",
      "name": "射洪县",
      "code": "510922"
    }, {
      "id": "2307",
      "name": "大英县",
      "code": "510923"
    }]
  }, {
    "id": "248",
    "name": "内江市",
    "code": "511000",
    "children": [{
      "id": "2308",
      "name": "市辖区",
      "code": "511001"
    }, {
      "id": "2309",
      "name": "市中区",
      "code": "511002"
    }, {
      "id": "2310",
      "name": "东兴区",
      "code": "511011"
    }, {
      "id": "2311",
      "name": "威远县",
      "code": "511024"
    }, {
      "id": "2312",
      "name": "资中县",
      "code": "511025"
    }, {
      "id": "2313",
      "name": "隆昌县",
      "code": "511028"
    }]
  }, {
    "id": "249",
    "name": "乐山市",
    "code": "511100",
    "children": [{
      "id": "2314",
      "name": "市辖区",
      "code": "511101"
    }, {
      "id": "2315",
      "name": "市中区",
      "code": "511102"
    }, {
      "id": "2316",
      "name": "沙湾区",
      "code": "511111"
    }, {
      "id": "2317",
      "name": "五通桥区",
      "code": "511112"
    }, {
      "id": "2318",
      "name": "金口河区",
      "code": "511113"
    }, {
      "id": "2319",
      "name": "犍为县",
      "code": "511123"
    }, {
      "id": "2320",
      "name": "井研县",
      "code": "511124"
    }, {
      "id": "2321",
      "name": "夹江县",
      "code": "511126"
    }, {
      "id": "2322",
      "name": "沐川县",
      "code": "511129"
    }, {
      "id": "2323",
      "name": "峨边彝族自治县",
      "code": "511132"
    }, {
      "id": "2324",
      "name": "马边彝族自治县",
      "code": "511133"
    }, {
      "id": "2325",
      "name": "峨眉山市",
      "code": "511181"
    }]
  }, {
    "id": "250",
    "name": "南充市",
    "code": "511300",
    "children": [{
      "id": "2326",
      "name": "市辖区",
      "code": "511301"
    }, {
      "id": "2327",
      "name": "顺庆区",
      "code": "511302"
    }, {
      "id": "2328",
      "name": "高坪区",
      "code": "511303"
    }, {
      "id": "2329",
      "name": "嘉陵区",
      "code": "511304"
    }, {
      "id": "2330",
      "name": "南部县",
      "code": "511321"
    }, {
      "id": "2331",
      "name": "营山县",
      "code": "511322"
    }, {
      "id": "2332",
      "name": "蓬安县",
      "code": "511323"
    }, {
      "id": "2333",
      "name": "仪陇县",
      "code": "511324"
    }, {
      "id": "2334",
      "name": "西充县",
      "code": "511325"
    }, {
      "id": "2335",
      "name": "阆中市",
      "code": "511381"
    }]
  }, {
    "id": "251",
    "name": "眉山市",
    "code": "511400",
    "children": [{
      "id": "2336",
      "name": "市辖区",
      "code": "511401"
    }, {
      "id": "2337",
      "name": "东坡区",
      "code": "511402"
    }, {
      "id": "2338",
      "name": "彭山区",
      "code": "511403"
    }, {
      "id": "2339",
      "name": "仁寿县",
      "code": "511421"
    }, {
      "id": "2340",
      "name": "洪雅县",
      "code": "511423"
    }, {
      "id": "2341",
      "name": "丹棱县",
      "code": "511424"
    }, {
      "id": "2342",
      "name": "青神县",
      "code": "511425"
    }]
  }, {
    "id": "252",
    "name": "宜宾市",
    "code": "511500",
    "children": [{
      "id": "2343",
      "name": "市辖区",
      "code": "511501"
    }, {
      "id": "2344",
      "name": "翠屏区",
      "code": "511502"
    }, {
      "id": "2345",
      "name": "南溪区",
      "code": "511503"
    }, {
      "id": "2346",
      "name": "宜宾县",
      "code": "511521"
    }, {
      "id": "2347",
      "name": "江安县",
      "code": "511523"
    }, {
      "id": "2348",
      "name": "长宁县",
      "code": "511524"
    }, {
      "id": "2349",
      "name": "高县",
      "code": "511525"
    }, {
      "id": "2350",
      "name": "珙县",
      "code": "511526"
    }, {
      "id": "2351",
      "name": "筠连县",
      "code": "511527"
    }, {
      "id": "2352",
      "name": "兴文县",
      "code": "511528"
    }, {
      "id": "2353",
      "name": "屏山县",
      "code": "511529"
    }]
  }, {
    "id": "253",
    "name": "广安市",
    "code": "511600",
    "children": [{
      "id": "2354",
      "name": "市辖区",
      "code": "511601"
    }, {
      "id": "2355",
      "name": "广安区",
      "code": "511602"
    }, {
      "id": "2356",
      "name": "前锋区",
      "code": "511603"
    }, {
      "id": "2357",
      "name": "岳池县",
      "code": "511621"
    }, {
      "id": "2358",
      "name": "武胜县",
      "code": "511622"
    }, {
      "id": "2359",
      "name": "邻水县",
      "code": "511623"
    }, {
      "id": "2360",
      "name": "华蓥市",
      "code": "511681"
    }]
  }, {
    "id": "254",
    "name": "达州市",
    "code": "511700",
    "children": [{
      "id": "2361",
      "name": "市辖区",
      "code": "511701"
    }, {
      "id": "2362",
      "name": "通川区",
      "code": "511702"
    }, {
      "id": "2363",
      "name": "达川区",
      "code": "511703"
    }, {
      "id": "2364",
      "name": "宣汉县",
      "code": "511722"
    }, {
      "id": "2365",
      "name": "开江县",
      "code": "511723"
    }, {
      "id": "2366",
      "name": "大竹县",
      "code": "511724"
    }, {
      "id": "2367",
      "name": "渠县",
      "code": "511725"
    }, {
      "id": "2368",
      "name": "万源市",
      "code": "511781"
    }]
  }, {
    "id": "255",
    "name": "雅安市",
    "code": "511800",
    "children": [{
      "id": "2369",
      "name": "市辖区",
      "code": "511801"
    }, {
      "id": "2370",
      "name": "雨城区",
      "code": "511802"
    }, {
      "id": "2371",
      "name": "名山区",
      "code": "511803"
    }, {
      "id": "2372",
      "name": "荥经县",
      "code": "511822"
    }, {
      "id": "2373",
      "name": "汉源县",
      "code": "511823"
    }, {
      "id": "2374",
      "name": "石棉县",
      "code": "511824"
    }, {
      "id": "2375",
      "name": "天全县",
      "code": "511825"
    }, {
      "id": "2376",
      "name": "芦山县",
      "code": "511826"
    }, {
      "id": "2377",
      "name": "宝兴县",
      "code": "511827"
    }]
  }, {
    "id": "256",
    "name": "巴中市",
    "code": "511900",
    "children": [{
      "id": "2378",
      "name": "市辖区",
      "code": "511901"
    }, {
      "id": "2379",
      "name": "巴州区",
      "code": "511902"
    }, {
      "id": "2380",
      "name": "恩阳区",
      "code": "511903"
    }, {
      "id": "2381",
      "name": "通江县",
      "code": "511921"
    }, {
      "id": "2382",
      "name": "南江县",
      "code": "511922"
    }, {
      "id": "2383",
      "name": "平昌县",
      "code": "511923"
    }]
  }, {
    "id": "257",
    "name": "资阳市",
    "code": "512000",
    "children": [{
      "id": "2384",
      "name": "市辖区",
      "code": "512001"
    }, {
      "id": "2385",
      "name": "雁江区",
      "code": "512002"
    }, {
      "id": "2386",
      "name": "安岳县",
      "code": "512021"
    }, {
      "id": "2387",
      "name": "乐至县",
      "code": "512022"
    }]
  }, {
    "id": "258",
    "name": "阿坝藏族羌族自治州",
    "code": "513200",
    "children": [{
      "id": "2388",
      "name": "马尔康市",
      "code": "513201"
    }, {
      "id": "2389",
      "name": "汶川县",
      "code": "513221"
    }, {
      "id": "2390",
      "name": "理县",
      "code": "513222"
    }, {
      "id": "2391",
      "name": "茂县",
      "code": "513223"
    }, {
      "id": "2392",
      "name": "松潘县",
      "code": "513224"
    }, {
      "id": "2393",
      "name": "九寨沟县",
      "code": "513225"
    }, {
      "id": "2394",
      "name": "金川县",
      "code": "513226"
    }, {
      "id": "2395",
      "name": "小金县",
      "code": "513227"
    }, {
      "id": "2396",
      "name": "黑水县",
      "code": "513228"
    }, {
      "id": "2397",
      "name": "壤塘县",
      "code": "513230"
    }, {
      "id": "2398",
      "name": "阿坝县",
      "code": "513231"
    }, {
      "id": "2399",
      "name": "若尔盖县",
      "code": "513232"
    }, {
      "id": "2400",
      "name": "红原县",
      "code": "513233"
    }]
  }, {
    "id": "259",
    "name": "甘孜藏族自治州",
    "code": "513300",
    "children": [{
      "id": "2401",
      "name": "康定市",
      "code": "513301"
    }, {
      "id": "2402",
      "name": "泸定县",
      "code": "513322"
    }, {
      "id": "2403",
      "name": "丹巴县",
      "code": "513323"
    }, {
      "id": "2404",
      "name": "九龙县",
      "code": "513324"
    }, {
      "id": "2405",
      "name": "雅江县",
      "code": "513325"
    }, {
      "id": "2406",
      "name": "道孚县",
      "code": "513326"
    }, {
      "id": "2407",
      "name": "炉霍县",
      "code": "513327"
    }, {
      "id": "2408",
      "name": "甘孜县",
      "code": "513328"
    }, {
      "id": "2409",
      "name": "新龙县",
      "code": "513329"
    }, {
      "id": "2410",
      "name": "德格县",
      "code": "513330"
    }, {
      "id": "2411",
      "name": "白玉县",
      "code": "513331"
    }, {
      "id": "2412",
      "name": "石渠县",
      "code": "513332"
    }, {
      "id": "2413",
      "name": "色达县",
      "code": "513333"
    }, {
      "id": "2414",
      "name": "理塘县",
      "code": "513334"
    }, {
      "id": "2415",
      "name": "巴塘县",
      "code": "513335"
    }, {
      "id": "2416",
      "name": "乡城县",
      "code": "513336"
    }, {
      "id": "2417",
      "name": "稻城县",
      "code": "513337"
    }, {
      "id": "2418",
      "name": "得荣县",
      "code": "513338"
    }]
  }, {
    "id": "260",
    "name": "凉山彝族自治州",
    "code": "513400",
    "children": [{
      "id": "2419",
      "name": "西昌市",
      "code": "513401"
    }, {
      "id": "2420",
      "name": "木里藏族自治县",
      "code": "513422"
    }, {
      "id": "2421",
      "name": "盐源县",
      "code": "513423"
    }, {
      "id": "2422",
      "name": "德昌县",
      "code": "513424"
    }, {
      "id": "2423",
      "name": "会理县",
      "code": "513425"
    }, {
      "id": "2424",
      "name": "会东县",
      "code": "513426"
    }, {
      "id": "2425",
      "name": "宁南县",
      "code": "513427"
    }, {
      "id": "2426",
      "name": "普格县",
      "code": "513428"
    }, {
      "id": "2427",
      "name": "布拖县",
      "code": "513429"
    }, {
      "id": "2428",
      "name": "金阳县",
      "code": "513430"
    }, {
      "id": "2429",
      "name": "昭觉县",
      "code": "513431"
    }, {
      "id": "2430",
      "name": "喜德县",
      "code": "513432"
    }, {
      "id": "2431",
      "name": "冕宁县",
      "code": "513433"
    }, {
      "id": "2432",
      "name": "越西县",
      "code": "513434"
    }, {
      "id": "2433",
      "name": "甘洛县",
      "code": "513435"
    }, {
      "id": "2434",
      "name": "美姑县",
      "code": "513436"
    }, {
      "id": "2435",
      "name": "雷波县",
      "code": "513437"
    }]
  }]
}, {
  "id": "24",
  "name": "贵州省",
  "code": "520000",
  "children": [{
    "id": "261",
    "name": "贵阳市",
    "code": "520100",
    "children": [{
      "id": "2436",
      "name": "市辖区",
      "code": "520101"
    }, {
      "id": "2437",
      "name": "南明区",
      "code": "520102"
    }, {
      "id": "2438",
      "name": "云岩区",
      "code": "520103"
    }, {
      "id": "2439",
      "name": "花溪区",
      "code": "520111"
    }, {
      "id": "2440",
      "name": "乌当区",
      "code": "520112"
    }, {
      "id": "2441",
      "name": "白云区",
      "code": "520113"
    }, {
      "id": "2442",
      "name": "观山湖区",
      "code": "520115"
    }, {
      "id": "2443",
      "name": "开阳县",
      "code": "520121"
    }, {
      "id": "2444",
      "name": "息烽县",
      "code": "520122"
    }, {
      "id": "2445",
      "name": "修文县",
      "code": "520123"
    }, {
      "id": "2446",
      "name": "清镇市",
      "code": "520181"
    }]
  }, {
    "id": "262",
    "name": "六盘水市",
    "code": "520200",
    "children": [{
      "id": "2447",
      "name": "钟山区",
      "code": "520201"
    }, {
      "id": "2448",
      "name": "六枝特区",
      "code": "520203"
    }, {
      "id": "2449",
      "name": "水城县",
      "code": "520221"
    }, {
      "id": "2450",
      "name": "盘县",
      "code": "520222"
    }]
  }, {
    "id": "263",
    "name": "遵义市",
    "code": "520300",
    "children": [{
      "id": "2451",
      "name": "市辖区",
      "code": "520301"
    }, {
      "id": "2452",
      "name": "红花岗区",
      "code": "520302"
    }, {
      "id": "2453",
      "name": "汇川区",
      "code": "520303"
    }, {
      "id": "2454",
      "name": "播州区",
      "code": "520304"
    }, {
      "id": "2455",
      "name": "桐梓县",
      "code": "520322"
    }, {
      "id": "2456",
      "name": "绥阳县",
      "code": "520323"
    }, {
      "id": "2457",
      "name": "正安县",
      "code": "520324"
    }, {
      "id": "2458",
      "name": "道真仡佬族苗族自治县",
      "code": "520325"
    }, {
      "id": "2459",
      "name": "务川仡佬族苗族自治县",
      "code": "520326"
    }, {
      "id": "2460",
      "name": "凤冈县",
      "code": "520327"
    }, {
      "id": "2461",
      "name": "湄潭县",
      "code": "520328"
    }, {
      "id": "2462",
      "name": "余庆县",
      "code": "520329"
    }, {
      "id": "2463",
      "name": "习水县",
      "code": "520330"
    }, {
      "id": "2464",
      "name": "赤水市",
      "code": "520381"
    }, {
      "id": "2465",
      "name": "仁怀市",
      "code": "520382"
    }]
  }, {
    "id": "264",
    "name": "安顺市",
    "code": "520400",
    "children": [{
      "id": "2466",
      "name": "市辖区",
      "code": "520401"
    }, {
      "id": "2467",
      "name": "西秀区",
      "code": "520402"
    }, {
      "id": "2468",
      "name": "平坝区",
      "code": "520403"
    }, {
      "id": "2469",
      "name": "普定县",
      "code": "520422"
    }, {
      "id": "2470",
      "name": "镇宁布依族苗族自治县",
      "code": "520423"
    }, {
      "id": "2471",
      "name": "关岭布依族苗族自治县",
      "code": "520424"
    }, {
      "id": "2472",
      "name": "紫云苗族布依族自治县",
      "code": "520425"
    }]
  }, {
    "id": "265",
    "name": "毕节市",
    "code": "520500",
    "children": [{
      "id": "2473",
      "name": "市辖区",
      "code": "520501"
    }, {
      "id": "2474",
      "name": "七星关区",
      "code": "520502"
    }, {
      "id": "2475",
      "name": "大方县",
      "code": "520521"
    }, {
      "id": "2476",
      "name": "黔西县",
      "code": "520522"
    }, {
      "id": "2477",
      "name": "金沙县",
      "code": "520523"
    }, {
      "id": "2478",
      "name": "织金县",
      "code": "520524"
    }, {
      "id": "2479",
      "name": "纳雍县",
      "code": "520525"
    }, {
      "id": "2480",
      "name": "威宁彝族回族苗族自治县",
      "code": "520526"
    }, {
      "id": "2481",
      "name": "赫章县",
      "code": "520527"
    }]
  }, {
    "id": "266",
    "name": "铜仁市",
    "code": "520600",
    "children": [{
      "id": "2482",
      "name": "市辖区",
      "code": "520601"
    }, {
      "id": "2483",
      "name": "碧江区",
      "code": "520602"
    }, {
      "id": "2484",
      "name": "万山区",
      "code": "520603"
    }, {
      "id": "2485",
      "name": "江口县",
      "code": "520621"
    }, {
      "id": "2486",
      "name": "玉屏侗族自治县",
      "code": "520622"
    }, {
      "id": "2487",
      "name": "石阡县",
      "code": "520623"
    }, {
      "id": "2488",
      "name": "思南县",
      "code": "520624"
    }, {
      "id": "2489",
      "name": "印江土家族苗族自治县",
      "code": "520625"
    }, {
      "id": "2490",
      "name": "德江县",
      "code": "520626"
    }, {
      "id": "2491",
      "name": "沿河土家族自治县",
      "code": "520627"
    }, {
      "id": "2492",
      "name": "松桃苗族自治县",
      "code": "520628"
    }]
  }, {
    "id": "267",
    "name": "黔西南布依族苗族自治州",
    "code": "522300",
    "children": [{
      "id": "2493",
      "name": "兴义市",
      "code": "522301"
    }, {
      "id": "2494",
      "name": "兴仁县",
      "code": "522322"
    }, {
      "id": "2495",
      "name": "普安县",
      "code": "522323"
    }, {
      "id": "2496",
      "name": "晴隆县",
      "code": "522324"
    }, {
      "id": "2497",
      "name": "贞丰县",
      "code": "522325"
    }, {
      "id": "2498",
      "name": "望谟县",
      "code": "522326"
    }, {
      "id": "2499",
      "name": "册亨县",
      "code": "522327"
    }, {
      "id": "2500",
      "name": "安龙县",
      "code": "522328"
    }]
  }, {
    "id": "268",
    "name": "黔东南苗族侗族自治州",
    "code": "522600",
    "children": [{
      "id": "2501",
      "name": "凯里市",
      "code": "522601"
    }, {
      "id": "2502",
      "name": "黄平县",
      "code": "522622"
    }, {
      "id": "2503",
      "name": "施秉县",
      "code": "522623"
    }, {
      "id": "2504",
      "name": "三穗县",
      "code": "522624"
    }, {
      "id": "2505",
      "name": "镇远县",
      "code": "522625"
    }, {
      "id": "2506",
      "name": "岑巩县",
      "code": "522626"
    }, {
      "id": "2507",
      "name": "天柱县",
      "code": "522627"
    }, {
      "id": "2508",
      "name": "锦屏县",
      "code": "522628"
    }, {
      "id": "2509",
      "name": "剑河县",
      "code": "522629"
    }, {
      "id": "2510",
      "name": "台江县",
      "code": "522630"
    }, {
      "id": "2511",
      "name": "黎平县",
      "code": "522631"
    }, {
      "id": "2512",
      "name": "榕江县",
      "code": "522632"
    }, {
      "id": "2513",
      "name": "从江县",
      "code": "522633"
    }, {
      "id": "2514",
      "name": "雷山县",
      "code": "522634"
    }, {
      "id": "2515",
      "name": "麻江县",
      "code": "522635"
    }, {
      "id": "2516",
      "name": "丹寨县",
      "code": "522636"
    }]
  }, {
    "id": "269",
    "name": "黔南布依族苗族自治州",
    "code": "522700",
    "children": [{
      "id": "2517",
      "name": "都匀市",
      "code": "522701"
    }, {
      "id": "2518",
      "name": "福泉市",
      "code": "522702"
    }, {
      "id": "2519",
      "name": "荔波县",
      "code": "522722"
    }, {
      "id": "2520",
      "name": "贵定县",
      "code": "522723"
    }, {
      "id": "2521",
      "name": "瓮安县",
      "code": "522725"
    }, {
      "id": "2522",
      "name": "独山县",
      "code": "522726"
    }, {
      "id": "2523",
      "name": "平塘县",
      "code": "522727"
    }, {
      "id": "2524",
      "name": "罗甸县",
      "code": "522728"
    }, {
      "id": "2525",
      "name": "长顺县",
      "code": "522729"
    }, {
      "id": "2526",
      "name": "龙里县",
      "code": "522730"
    }, {
      "id": "2527",
      "name": "惠水县",
      "code": "522731"
    }, {
      "id": "2528",
      "name": "三都水族自治县",
      "code": "522732"
    }]
  }]
}, {
  "id": "25",
  "name": "云南省",
  "code": "530000",
  "children": [{
    "id": "270",
    "name": "昆明市",
    "code": "530100",
    "children": [{
      "id": "2529",
      "name": "市辖区",
      "code": "530101"
    }, {
      "id": "2530",
      "name": "五华区",
      "code": "530102"
    }, {
      "id": "2531",
      "name": "盘龙区",
      "code": "530103"
    }, {
      "id": "2532",
      "name": "官渡区",
      "code": "530111"
    }, {
      "id": "2533",
      "name": "西山区",
      "code": "530112"
    }, {
      "id": "2534",
      "name": "东川区",
      "code": "530113"
    }, {
      "id": "2535",
      "name": "呈贡区",
      "code": "530114"
    }, {
      "id": "2536",
      "name": "晋宁县",
      "code": "530122"
    }, {
      "id": "2537",
      "name": "富民县",
      "code": "530124"
    }, {
      "id": "2538",
      "name": "宜良县",
      "code": "530125"
    }, {
      "id": "2539",
      "name": "石林彝族自治县",
      "code": "530126"
    }, {
      "id": "2540",
      "name": "嵩明县",
      "code": "530127"
    }, {
      "id": "2541",
      "name": "禄劝彝族苗族自治县",
      "code": "530128"
    }, {
      "id": "2542",
      "name": "寻甸回族彝族自治县",
      "code": "530129"
    }, {
      "id": "2543",
      "name": "安宁市",
      "code": "530181"
    }]
  }, {
    "id": "271",
    "name": "曲靖市",
    "code": "530300",
    "children": [{
      "id": "2544",
      "name": "市辖区",
      "code": "530301"
    }, {
      "id": "2545",
      "name": "麒麟区",
      "code": "530302"
    }, {
      "id": "2546",
      "name": "沾益区",
      "code": "530303"
    }, {
      "id": "2547",
      "name": "马龙县",
      "code": "530321"
    }, {
      "id": "2548",
      "name": "陆良县",
      "code": "530322"
    }, {
      "id": "2549",
      "name": "师宗县",
      "code": "530323"
    }, {
      "id": "2550",
      "name": "罗平县",
      "code": "530324"
    }, {
      "id": "2551",
      "name": "富源县",
      "code": "530325"
    }, {
      "id": "2552",
      "name": "会泽县",
      "code": "530326"
    }, {
      "id": "2553",
      "name": "宣威市",
      "code": "530381"
    }]
  }, {
    "id": "272",
    "name": "玉溪市",
    "code": "530400",
    "children": [{
      "id": "2554",
      "name": "市辖区",
      "code": "530401"
    }, {
      "id": "2555",
      "name": "红塔区",
      "code": "530402"
    }, {
      "id": "2556",
      "name": "江川区",
      "code": "530403"
    }, {
      "id": "2557",
      "name": "澄江县",
      "code": "530422"
    }, {
      "id": "2558",
      "name": "通海县",
      "code": "530423"
    }, {
      "id": "2559",
      "name": "华宁县",
      "code": "530424"
    }, {
      "id": "2560",
      "name": "易门县",
      "code": "530425"
    }, {
      "id": "2561",
      "name": "峨山彝族自治县",
      "code": "530426"
    }, {
      "id": "2562",
      "name": "新平彝族傣族自治县",
      "code": "530427"
    }, {
      "id": "2563",
      "name": "元江哈尼族彝族傣族自治县",
      "code": "530428"
    }]
  }, {
    "id": "273",
    "name": "保山市",
    "code": "530500",
    "children": [{
      "id": "2564",
      "name": "市辖区",
      "code": "530501"
    }, {
      "id": "2565",
      "name": "隆阳区",
      "code": "530502"
    }, {
      "id": "2566",
      "name": "施甸县",
      "code": "530521"
    }, {
      "id": "2567",
      "name": "龙陵县",
      "code": "530523"
    }, {
      "id": "2568",
      "name": "昌宁县",
      "code": "530524"
    }, {
      "id": "2569",
      "name": "腾冲市",
      "code": "530581"
    }]
  }, {
    "id": "274",
    "name": "昭通市",
    "code": "530600",
    "children": [{
      "id": "2570",
      "name": "市辖区",
      "code": "530601"
    }, {
      "id": "2571",
      "name": "昭阳区",
      "code": "530602"
    }, {
      "id": "2572",
      "name": "鲁甸县",
      "code": "530621"
    }, {
      "id": "2573",
      "name": "巧家县",
      "code": "530622"
    }, {
      "id": "2574",
      "name": "盐津县",
      "code": "530623"
    }, {
      "id": "2575",
      "name": "大关县",
      "code": "530624"
    }, {
      "id": "2576",
      "name": "永善县",
      "code": "530625"
    }, {
      "id": "2577",
      "name": "绥江县",
      "code": "530626"
    }, {
      "id": "2578",
      "name": "镇雄县",
      "code": "530627"
    }, {
      "id": "2579",
      "name": "彝良县",
      "code": "530628"
    }, {
      "id": "2580",
      "name": "威信县",
      "code": "530629"
    }, {
      "id": "2581",
      "name": "水富县",
      "code": "530630"
    }]
  }, {
    "id": "275",
    "name": "丽江市",
    "code": "530700",
    "children": [{
      "id": "2582",
      "name": "市辖区",
      "code": "530701"
    }, {
      "id": "2583",
      "name": "古城区",
      "code": "530702"
    }, {
      "id": "2584",
      "name": "玉龙纳西族自治县",
      "code": "530721"
    }, {
      "id": "2585",
      "name": "永胜县",
      "code": "530722"
    }, {
      "id": "2586",
      "name": "华坪县",
      "code": "530723"
    }, {
      "id": "2587",
      "name": "宁蒗彝族自治县",
      "code": "530724"
    }]
  }, {
    "id": "276",
    "name": "普洱市",
    "code": "530800",
    "children": [{
      "id": "2588",
      "name": "市辖区",
      "code": "530801"
    }, {
      "id": "2589",
      "name": "思茅区",
      "code": "530802"
    }, {
      "id": "2590",
      "name": "宁洱哈尼族彝族自治县",
      "code": "530821"
    }, {
      "id": "2591",
      "name": "墨江哈尼族自治县",
      "code": "530822"
    }, {
      "id": "2592",
      "name": "景东彝族自治县",
      "code": "530823"
    }, {
      "id": "2593",
      "name": "景谷傣族彝族自治县",
      "code": "530824"
    }, {
      "id": "2594",
      "name": "镇沅彝族哈尼族拉祜族自治县",
      "code": "530825"
    }, {
      "id": "2595",
      "name": "江城哈尼族彝族自治县",
      "code": "530826"
    }, {
      "id": "2596",
      "name": "孟连傣族拉祜族佤族自治县",
      "code": "530827"
    }, {
      "id": "2597",
      "name": "澜沧拉祜族自治县",
      "code": "530828"
    }, {
      "id": "2598",
      "name": "西盟佤族自治县",
      "code": "530829"
    }]
  }, {
    "id": "277",
    "name": "临沧市",
    "code": "530900",
    "children": [{
      "id": "2599",
      "name": "市辖区",
      "code": "530901"
    }, {
      "id": "2600",
      "name": "临翔区",
      "code": "530902"
    }, {
      "id": "2601",
      "name": "凤庆县",
      "code": "530921"
    }, {
      "id": "2602",
      "name": "云县",
      "code": "530922"
    }, {
      "id": "2603",
      "name": "永德县",
      "code": "530923"
    }, {
      "id": "2604",
      "name": "镇康县",
      "code": "530924"
    }, {
      "id": "2605",
      "name": "双江拉祜族佤族布朗族傣族自治县",
      "code": "530925"
    }, {
      "id": "2606",
      "name": "耿马傣族佤族自治县",
      "code": "530926"
    }, {
      "id": "2607",
      "name": "沧源佤族自治县",
      "code": "530927"
    }]
  }, {
    "id": "278",
    "name": "楚雄彝族自治州",
    "code": "532300",
    "children": [{
      "id": "2608",
      "name": "楚雄市",
      "code": "532301"
    }, {
      "id": "2609",
      "name": "双柏县",
      "code": "532322"
    }, {
      "id": "2610",
      "name": "牟定县",
      "code": "532323"
    }, {
      "id": "2611",
      "name": "南华县",
      "code": "532324"
    }, {
      "id": "2612",
      "name": "姚安县",
      "code": "532325"
    }, {
      "id": "2613",
      "name": "大姚县",
      "code": "532326"
    }, {
      "id": "2614",
      "name": "永仁县",
      "code": "532327"
    }, {
      "id": "2615",
      "name": "元谋县",
      "code": "532328"
    }, {
      "id": "2616",
      "name": "武定县",
      "code": "532329"
    }, {
      "id": "2617",
      "name": "禄丰县",
      "code": "532331"
    }]
  }, {
    "id": "279",
    "name": "红河哈尼族彝族自治州",
    "code": "532500",
    "children": [{
      "id": "2618",
      "name": "个旧市",
      "code": "532501"
    }, {
      "id": "2619",
      "name": "开远市",
      "code": "532502"
    }, {
      "id": "2620",
      "name": "蒙自市",
      "code": "532503"
    }, {
      "id": "2621",
      "name": "弥勒市",
      "code": "532504"
    }, {
      "id": "2622",
      "name": "屏边苗族自治县",
      "code": "532523"
    }, {
      "id": "2623",
      "name": "建水县",
      "code": "532524"
    }, {
      "id": "2624",
      "name": "石屏县",
      "code": "532525"
    }, {
      "id": "2625",
      "name": "泸西县",
      "code": "532527"
    }, {
      "id": "2626",
      "name": "元阳县",
      "code": "532528"
    }, {
      "id": "2627",
      "name": "红河县",
      "code": "532529"
    }, {
      "id": "2628",
      "name": "金平苗族瑶族傣族自治县",
      "code": "532530"
    }, {
      "id": "2629",
      "name": "绿春县",
      "code": "532531"
    }, {
      "id": "2630",
      "name": "河口瑶族自治县",
      "code": "532532"
    }]
  }, {
    "id": "280",
    "name": "文山壮族苗族自治州",
    "code": "532600",
    "children": [{
      "id": "2631",
      "name": "文山市",
      "code": "532601"
    }, {
      "id": "2632",
      "name": "砚山县",
      "code": "532622"
    }, {
      "id": "2633",
      "name": "西畴县",
      "code": "532623"
    }, {
      "id": "2634",
      "name": "麻栗坡县",
      "code": "532624"
    }, {
      "id": "2635",
      "name": "马关县",
      "code": "532625"
    }, {
      "id": "2636",
      "name": "丘北县",
      "code": "532626"
    }, {
      "id": "2637",
      "name": "广南县",
      "code": "532627"
    }, {
      "id": "2638",
      "name": "富宁县",
      "code": "532628"
    }]
  }, {
    "id": "281",
    "name": "西双版纳傣族自治州",
    "code": "532800",
    "children": [{
      "id": "2639",
      "name": "景洪市",
      "code": "532801"
    }, {
      "id": "2640",
      "name": "勐海县",
      "code": "532822"
    }, {
      "id": "2641",
      "name": "勐腊县",
      "code": "532823"
    }]
  }, {
    "id": "282",
    "name": "大理白族自治州",
    "code": "532900",
    "children": [{
      "id": "2642",
      "name": "大理市",
      "code": "532901"
    }, {
      "id": "2643",
      "name": "漾濞彝族自治县",
      "code": "532922"
    }, {
      "id": "2644",
      "name": "祥云县",
      "code": "532923"
    }, {
      "id": "2645",
      "name": "宾川县",
      "code": "532924"
    }, {
      "id": "2646",
      "name": "弥渡县",
      "code": "532925"
    }, {
      "id": "2647",
      "name": "南涧彝族自治县",
      "code": "532926"
    }, {
      "id": "2648",
      "name": "巍山彝族回族自治县",
      "code": "532927"
    }, {
      "id": "2649",
      "name": "永平县",
      "code": "532928"
    }, {
      "id": "2650",
      "name": "云龙县",
      "code": "532929"
    }, {
      "id": "2651",
      "name": "洱源县",
      "code": "532930"
    }, {
      "id": "2652",
      "name": "剑川县",
      "code": "532931"
    }, {
      "id": "2653",
      "name": "鹤庆县",
      "code": "532932"
    }]
  }, {
    "id": "283",
    "name": "德宏傣族景颇族自治州",
    "code": "533100",
    "children": [{
      "id": "2654",
      "name": "瑞丽市",
      "code": "533102"
    }, {
      "id": "2655",
      "name": "芒市",
      "code": "533103"
    }, {
      "id": "2656",
      "name": "梁河县",
      "code": "533122"
    }, {
      "id": "2657",
      "name": "盈江县",
      "code": "533123"
    }, {
      "id": "2658",
      "name": "陇川县",
      "code": "533124"
    }]
  }, {
    "id": "284",
    "name": "怒江傈僳族自治州",
    "code": "533300",
    "children": [{
      "id": "2659",
      "name": "泸水市",
      "code": "533301"
    }, {
      "id": "2660",
      "name": "福贡县",
      "code": "533323"
    }, {
      "id": "2661",
      "name": "贡山独龙族怒族自治县",
      "code": "533324"
    }, {
      "id": "2662",
      "name": "兰坪白族普米族自治县",
      "code": "533325"
    }]
  }, {
    "id": "285",
    "name": "迪庆藏族自治州",
    "code": "533400",
    "children": [{
      "id": "2663",
      "name": "香格里拉市",
      "code": "533401"
    }, {
      "id": "2664",
      "name": "德钦县",
      "code": "533422"
    }, {
      "id": "2665",
      "name": "维西傈僳族自治县",
      "code": "533423"
    }]
  }]
}, {
  "id": "26",
  "name": "西藏自治区",
  "code": "540000",
  "children": [{
    "id": "286",
    "name": "拉萨市",
    "code": "540100",
    "children": [{
      "id": "2666",
      "name": "市辖区",
      "code": "540101"
    }, {
      "id": "2667",
      "name": "城关区",
      "code": "540102"
    }, {
      "id": "2668",
      "name": "堆龙德庆区",
      "code": "540103"
    }, {
      "id": "2669",
      "name": "林周县",
      "code": "540121"
    }, {
      "id": "2670",
      "name": "当雄县",
      "code": "540122"
    }, {
      "id": "2671",
      "name": "尼木县",
      "code": "540123"
    }, {
      "id": "2672",
      "name": "曲水县",
      "code": "540124"
    }, {
      "id": "2673",
      "name": "达孜县",
      "code": "540126"
    }, {
      "id": "2674",
      "name": "墨竹工卡县",
      "code": "540127"
    }]
  }, {
    "id": "287",
    "name": "日喀则市",
    "code": "540200",
    "children": [{
      "id": "2675",
      "name": "桑珠孜区",
      "code": "540202"
    }, {
      "id": "2676",
      "name": "南木林县",
      "code": "540221"
    }, {
      "id": "2677",
      "name": "江孜县",
      "code": "540222"
    }, {
      "id": "2678",
      "name": "定日县",
      "code": "540223"
    }, {
      "id": "2679",
      "name": "萨迦县",
      "code": "540224"
    }, {
      "id": "2680",
      "name": "拉孜县",
      "code": "540225"
    }, {
      "id": "2681",
      "name": "昂仁县",
      "code": "540226"
    }, {
      "id": "2682",
      "name": "谢通门县",
      "code": "540227"
    }, {
      "id": "2683",
      "name": "白朗县",
      "code": "540228"
    }, {
      "id": "2684",
      "name": "仁布县",
      "code": "540229"
    }, {
      "id": "2685",
      "name": "康马县",
      "code": "540230"
    }, {
      "id": "2686",
      "name": "定结县",
      "code": "540231"
    }, {
      "id": "2687",
      "name": "仲巴县",
      "code": "540232"
    }, {
      "id": "2688",
      "name": "亚东县",
      "code": "540233"
    }, {
      "id": "2689",
      "name": "吉隆县",
      "code": "540234"
    }, {
      "id": "2690",
      "name": "聂拉木县",
      "code": "540235"
    }, {
      "id": "2691",
      "name": "萨嘎县",
      "code": "540236"
    }, {
      "id": "2692",
      "name": "岗巴县",
      "code": "540237"
    }]
  }, {
    "id": "288",
    "name": "昌都市",
    "code": "540300",
    "children": [{
      "id": "2693",
      "name": "卡若区",
      "code": "540302"
    }, {
      "id": "2694",
      "name": "江达县",
      "code": "540321"
    }, {
      "id": "2695",
      "name": "贡觉县",
      "code": "540322"
    }, {
      "id": "2696",
      "name": "类乌齐县",
      "code": "540323"
    }, {
      "id": "2697",
      "name": "丁青县",
      "code": "540324"
    }, {
      "id": "2698",
      "name": "察雅县",
      "code": "540325"
    }, {
      "id": "2699",
      "name": "八宿县",
      "code": "540326"
    }, {
      "id": "2700",
      "name": "左贡县",
      "code": "540327"
    }, {
      "id": "2701",
      "name": "芒康县",
      "code": "540328"
    }, {
      "id": "2702",
      "name": "洛隆县",
      "code": "540329"
    }, {
      "id": "2703",
      "name": "边坝县",
      "code": "540330"
    }]
  }, {
    "id": "289",
    "name": "林芝市",
    "code": "540400",
    "children": [{
      "id": "2704",
      "name": "巴宜区",
      "code": "540402"
    }, {
      "id": "2705",
      "name": "工布江达县",
      "code": "540421"
    }, {
      "id": "2706",
      "name": "米林县",
      "code": "540422"
    }, {
      "id": "2707",
      "name": "墨脱县",
      "code": "540423"
    }, {
      "id": "2708",
      "name": "波密县",
      "code": "540424"
    }, {
      "id": "2709",
      "name": "察隅县",
      "code": "540425"
    }, {
      "id": "2710",
      "name": "朗县",
      "code": "540426"
    }]
  }, {
    "id": "290",
    "name": "山南市",
    "code": "540500",
    "children": [{
      "id": "2711",
      "name": "市辖区",
      "code": "540501"
    }, {
      "id": "2712",
      "name": "乃东区",
      "code": "540502"
    }, {
      "id": "2713",
      "name": "扎囊县",
      "code": "540521"
    }, {
      "id": "2714",
      "name": "贡嘎县",
      "code": "540522"
    }, {
      "id": "2715",
      "name": "桑日县",
      "code": "540523"
    }, {
      "id": "2716",
      "name": "琼结县",
      "code": "540524"
    }, {
      "id": "2717",
      "name": "曲松县",
      "code": "540525"
    }, {
      "id": "2718",
      "name": "措美县",
      "code": "540526"
    }, {
      "id": "2719",
      "name": "洛扎县",
      "code": "540527"
    }, {
      "id": "2720",
      "name": "加查县",
      "code": "540528"
    }, {
      "id": "2721",
      "name": "隆子县",
      "code": "540529"
    }, {
      "id": "2722",
      "name": "错那县",
      "code": "540530"
    }, {
      "id": "2723",
      "name": "浪卡子县",
      "code": "540531"
    }]
  }, {
    "id": "291",
    "name": "那曲地区",
    "code": "542400",
    "children": [{
      "id": "2724",
      "name": "那曲县",
      "code": "542421"
    }, {
      "id": "2725",
      "name": "嘉黎县",
      "code": "542422"
    }, {
      "id": "2726",
      "name": "比如县",
      "code": "542423"
    }, {
      "id": "2727",
      "name": "聂荣县",
      "code": "542424"
    }, {
      "id": "2728",
      "name": "安多县",
      "code": "542425"
    }, {
      "id": "2729",
      "name": "申扎县",
      "code": "542426"
    }, {
      "id": "2730",
      "name": "索县",
      "code": "542427"
    }, {
      "id": "2731",
      "name": "班戈县",
      "code": "542428"
    }, {
      "id": "2732",
      "name": "巴青县",
      "code": "542429"
    }, {
      "id": "2733",
      "name": "尼玛县",
      "code": "542430"
    }, {
      "id": "2734",
      "name": "双湖县",
      "code": "542431"
    }]
  }, {
    "id": "292",
    "name": "阿里地区",
    "code": "542500",
    "children": [{
      "id": "2735",
      "name": "普兰县",
      "code": "542521"
    }, {
      "id": "2736",
      "name": "札达县",
      "code": "542522"
    }, {
      "id": "2737",
      "name": "噶尔县",
      "code": "542523"
    }, {
      "id": "2738",
      "name": "日土县",
      "code": "542524"
    }, {
      "id": "2739",
      "name": "革吉县",
      "code": "542525"
    }, {
      "id": "2740",
      "name": "改则县",
      "code": "542526"
    }, {
      "id": "2741",
      "name": "措勤县",
      "code": "542527"
    }]
  }]
}, {
  "id": "27",
  "name": "陕西省",
  "code": "610000",
  "children": [{
    "id": "293",
    "name": "西安市",
    "code": "610100",
    "children": [{
      "id": "2742",
      "name": "市辖区",
      "code": "610101"
    }, {
      "id": "2743",
      "name": "新城区",
      "code": "610102"
    }, {
      "id": "2744",
      "name": "碑林区",
      "code": "610103"
    }, {
      "id": "2745",
      "name": "莲湖区",
      "code": "610104"
    }, {
      "id": "2746",
      "name": "灞桥区",
      "code": "610111"
    }, {
      "id": "2747",
      "name": "未央区",
      "code": "610112"
    }, {
      "id": "2748",
      "name": "雁塔区",
      "code": "610113"
    }, {
      "id": "2749",
      "name": "阎良区",
      "code": "610114"
    }, {
      "id": "2750",
      "name": "临潼区",
      "code": "610115"
    }, {
      "id": "2751",
      "name": "长安区",
      "code": "610116"
    }, {
      "id": "2752",
      "name": "高陵区",
      "code": "610117"
    }, {
      "id": "2753",
      "name": "蓝田县",
      "code": "610122"
    }, {
      "id": "2754",
      "name": "周至县",
      "code": "610124"
    }, {
      "id": "2755",
      "name": "户县",
      "code": "610125"
    }]
  }, {
    "id": "294",
    "name": "铜川市",
    "code": "610200",
    "children": [{
      "id": "2756",
      "name": "市辖区",
      "code": "610201"
    }, {
      "id": "2757",
      "name": "王益区",
      "code": "610202"
    }, {
      "id": "2758",
      "name": "印台区",
      "code": "610203"
    }, {
      "id": "2759",
      "name": "耀州区",
      "code": "610204"
    }, {
      "id": "2760",
      "name": "宜君县",
      "code": "610222"
    }]
  }, {
    "id": "295",
    "name": "宝鸡市",
    "code": "610300",
    "children": [{
      "id": "2761",
      "name": "市辖区",
      "code": "610301"
    }, {
      "id": "2762",
      "name": "渭滨区",
      "code": "610302"
    }, {
      "id": "2763",
      "name": "金台区",
      "code": "610303"
    }, {
      "id": "2764",
      "name": "陈仓区",
      "code": "610304"
    }, {
      "id": "2765",
      "name": "凤翔县",
      "code": "610322"
    }, {
      "id": "2766",
      "name": "岐山县",
      "code": "610323"
    }, {
      "id": "2767",
      "name": "扶风县",
      "code": "610324"
    }, {
      "id": "2768",
      "name": "眉县",
      "code": "610326"
    }, {
      "id": "2769",
      "name": "陇县",
      "code": "610327"
    }, {
      "id": "2770",
      "name": "千阳县",
      "code": "610328"
    }, {
      "id": "2771",
      "name": "麟游县",
      "code": "610329"
    }, {
      "id": "2772",
      "name": "凤县",
      "code": "610330"
    }, {
      "id": "2773",
      "name": "太白县",
      "code": "610331"
    }]
  }, {
    "id": "296",
    "name": "咸阳市",
    "code": "610400",
    "children": [{
      "id": "2774",
      "name": "市辖区",
      "code": "610401"
    }, {
      "id": "2775",
      "name": "秦都区",
      "code": "610402"
    }, {
      "id": "2776",
      "name": "杨陵区",
      "code": "610403"
    }, {
      "id": "2777",
      "name": "渭城区",
      "code": "610404"
    }, {
      "id": "2778",
      "name": "三原县",
      "code": "610422"
    }, {
      "id": "2779",
      "name": "泾阳县",
      "code": "610423"
    }, {
      "id": "2780",
      "name": "乾县",
      "code": "610424"
    }, {
      "id": "2781",
      "name": "礼泉县",
      "code": "610425"
    }, {
      "id": "2782",
      "name": "永寿县",
      "code": "610426"
    }, {
      "id": "2783",
      "name": "彬县",
      "code": "610427"
    }, {
      "id": "2784",
      "name": "长武县",
      "code": "610428"
    }, {
      "id": "2785",
      "name": "旬邑县",
      "code": "610429"
    }, {
      "id": "2786",
      "name": "淳化县",
      "code": "610430"
    }, {
      "id": "2787",
      "name": "武功县",
      "code": "610431"
    }, {
      "id": "2788",
      "name": "兴平市",
      "code": "610481"
    }]
  }, {
    "id": "297",
    "name": "渭南市",
    "code": "610500",
    "children": [{
      "id": "2789",
      "name": "市辖区",
      "code": "610501"
    }, {
      "id": "2790",
      "name": "临渭区",
      "code": "610502"
    }, {
      "id": "2791",
      "name": "华州区",
      "code": "610503"
    }, {
      "id": "2792",
      "name": "潼关县",
      "code": "610522"
    }, {
      "id": "2793",
      "name": "大荔县",
      "code": "610523"
    }, {
      "id": "2794",
      "name": "合阳县",
      "code": "610524"
    }, {
      "id": "2795",
      "name": "澄城县",
      "code": "610525"
    }, {
      "id": "2796",
      "name": "蒲城县",
      "code": "610526"
    }, {
      "id": "2797",
      "name": "白水县",
      "code": "610527"
    }, {
      "id": "2798",
      "name": "富平县",
      "code": "610528"
    }, {
      "id": "2799",
      "name": "韩城市",
      "code": "610581"
    }, {
      "id": "2800",
      "name": "华阴市",
      "code": "610582"
    }]
  }, {
    "id": "298",
    "name": "延安市",
    "code": "610600",
    "children": [{
      "id": "2801",
      "name": "市辖区",
      "code": "610601"
    }, {
      "id": "2802",
      "name": "宝塔区",
      "code": "610602"
    }, {
      "id": "2803",
      "name": "安塞区",
      "code": "610603"
    }, {
      "id": "2804",
      "name": "延长县",
      "code": "610621"
    }, {
      "id": "2805",
      "name": "延川县",
      "code": "610622"
    }, {
      "id": "2806",
      "name": "子长县",
      "code": "610623"
    }, {
      "id": "2807",
      "name": "志丹县",
      "code": "610625"
    }, {
      "id": "2808",
      "name": "吴起县",
      "code": "610626"
    }, {
      "id": "2809",
      "name": "甘泉县",
      "code": "610627"
    }, {
      "id": "2810",
      "name": "富县",
      "code": "610628"
    }, {
      "id": "2811",
      "name": "洛川县",
      "code": "610629"
    }, {
      "id": "2812",
      "name": "宜川县",
      "code": "610630"
    }, {
      "id": "2813",
      "name": "黄龙县",
      "code": "610631"
    }, {
      "id": "2814",
      "name": "黄陵县",
      "code": "610632"
    }]
  }, {
    "id": "299",
    "name": "汉中市",
    "code": "610700",
    "children": [{
      "id": "2815",
      "name": "市辖区",
      "code": "610701"
    }, {
      "id": "2816",
      "name": "汉台区",
      "code": "610702"
    }, {
      "id": "2817",
      "name": "南郑县",
      "code": "610721"
    }, {
      "id": "2818",
      "name": "城固县",
      "code": "610722"
    }, {
      "id": "2819",
      "name": "洋县",
      "code": "610723"
    }, {
      "id": "2820",
      "name": "西乡县",
      "code": "610724"
    }, {
      "id": "2821",
      "name": "勉县",
      "code": "610725"
    }, {
      "id": "2822",
      "name": "宁强县",
      "code": "610726"
    }, {
      "id": "2823",
      "name": "略阳县",
      "code": "610727"
    }, {
      "id": "2824",
      "name": "镇巴县",
      "code": "610728"
    }, {
      "id": "2825",
      "name": "留坝县",
      "code": "610729"
    }, {
      "id": "2826",
      "name": "佛坪县",
      "code": "610730"
    }]
  }, {
    "id": "300",
    "name": "榆林市",
    "code": "610800",
    "children": [{
      "id": "2827",
      "name": "市辖区",
      "code": "610801"
    }, {
      "id": "2828",
      "name": "榆阳区",
      "code": "610802"
    }, {
      "id": "2829",
      "name": "横山区",
      "code": "610803"
    }, {
      "id": "2830",
      "name": "神木县",
      "code": "610821"
    }, {
      "id": "2831",
      "name": "府谷县",
      "code": "610822"
    }, {
      "id": "2832",
      "name": "靖边县",
      "code": "610824"
    }, {
      "id": "2833",
      "name": "定边县",
      "code": "610825"
    }, {
      "id": "2834",
      "name": "绥德县",
      "code": "610826"
    }, {
      "id": "2835",
      "name": "米脂县",
      "code": "610827"
    }, {
      "id": "2836",
      "name": "佳县",
      "code": "610828"
    }, {
      "id": "2837",
      "name": "吴堡县",
      "code": "610829"
    }, {
      "id": "2838",
      "name": "清涧县",
      "code": "610830"
    }, {
      "id": "2839",
      "name": "子洲县",
      "code": "610831"
    }]
  }, {
    "id": "301",
    "name": "安康市",
    "code": "610900",
    "children": [{
      "id": "2840",
      "name": "市辖区",
      "code": "610901"
    }, {
      "id": "2841",
      "name": "汉滨区",
      "code": "610902"
    }, {
      "id": "2842",
      "name": "汉阴县",
      "code": "610921"
    }, {
      "id": "2843",
      "name": "石泉县",
      "code": "610922"
    }, {
      "id": "2844",
      "name": "宁陕县",
      "code": "610923"
    }, {
      "id": "2845",
      "name": "紫阳县",
      "code": "610924"
    }, {
      "id": "2846",
      "name": "岚皋县",
      "code": "610925"
    }, {
      "id": "2847",
      "name": "平利县",
      "code": "610926"
    }, {
      "id": "2848",
      "name": "镇坪县",
      "code": "610927"
    }, {
      "id": "2849",
      "name": "旬阳县",
      "code": "610928"
    }, {
      "id": "2850",
      "name": "白河县",
      "code": "610929"
    }]
  }, {
    "id": "302",
    "name": "商洛市",
    "code": "611000",
    "children": [{
      "id": "2851",
      "name": "市辖区",
      "code": "611001"
    }, {
      "id": "2852",
      "name": "商州区",
      "code": "611002"
    }, {
      "id": "2853",
      "name": "洛南县",
      "code": "611021"
    }, {
      "id": "2854",
      "name": "丹凤县",
      "code": "611022"
    }, {
      "id": "2855",
      "name": "商南县",
      "code": "611023"
    }, {
      "id": "2856",
      "name": "山阳县",
      "code": "611024"
    }, {
      "id": "2857",
      "name": "镇安县",
      "code": "611025"
    }, {
      "id": "2858",
      "name": "柞水县",
      "code": "611026"
    }]
  }]
}, {
  "id": "28",
  "name": "甘肃省",
  "code": "620000",
  "children": [{
    "id": "303",
    "name": "兰州市",
    "code": "620100",
    "children": [{
      "id": "2859",
      "name": "市辖区",
      "code": "620101"
    }, {
      "id": "2860",
      "name": "城关区",
      "code": "620102"
    }, {
      "id": "2861",
      "name": "七里河区",
      "code": "620103"
    }, {
      "id": "2862",
      "name": "西固区",
      "code": "620104"
    }, {
      "id": "2863",
      "name": "安宁区",
      "code": "620105"
    }, {
      "id": "2864",
      "name": "红古区",
      "code": "620111"
    }, {
      "id": "2865",
      "name": "永登县",
      "code": "620121"
    }, {
      "id": "2866",
      "name": "皋兰县",
      "code": "620122"
    }, {
      "id": "2867",
      "name": "榆中县",
      "code": "620123"
    }]
  }, {
    "id": "304",
    "name": "嘉峪关市",
    "code": "620200",
    "children": [{
      "id": "2868",
      "name": "市辖区",
      "code": "620201"
    }]
  }, {
    "id": "305",
    "name": "金昌市",
    "code": "620300",
    "children": [{
      "id": "2869",
      "name": "市辖区",
      "code": "620301"
    }, {
      "id": "2870",
      "name": "金川区",
      "code": "620302"
    }, {
      "id": "2871",
      "name": "永昌县",
      "code": "620321"
    }]
  }, {
    "id": "306",
    "name": "白银市",
    "code": "620400",
    "children": [{
      "id": "2872",
      "name": "市辖区",
      "code": "620401"
    }, {
      "id": "2873",
      "name": "白银区",
      "code": "620402"
    }, {
      "id": "2874",
      "name": "平川区",
      "code": "620403"
    }, {
      "id": "2875",
      "name": "靖远县",
      "code": "620421"
    }, {
      "id": "2876",
      "name": "会宁县",
      "code": "620422"
    }, {
      "id": "2877",
      "name": "景泰县",
      "code": "620423"
    }]
  }, {
    "id": "307",
    "name": "天水市",
    "code": "620500",
    "children": [{
      "id": "2878",
      "name": "市辖区",
      "code": "620501"
    }, {
      "id": "2879",
      "name": "秦州区",
      "code": "620502"
    }, {
      "id": "2880",
      "name": "麦积区",
      "code": "620503"
    }, {
      "id": "2881",
      "name": "清水县",
      "code": "620521"
    }, {
      "id": "2882",
      "name": "秦安县",
      "code": "620522"
    }, {
      "id": "2883",
      "name": "甘谷县",
      "code": "620523"
    }, {
      "id": "2884",
      "name": "武山县",
      "code": "620524"
    }, {
      "id": "2885",
      "name": "张家川回族自治县",
      "code": "620525"
    }]
  }, {
    "id": "308",
    "name": "武威市",
    "code": "620600",
    "children": [{
      "id": "2886",
      "name": "市辖区",
      "code": "620601"
    }, {
      "id": "2887",
      "name": "凉州区",
      "code": "620602"
    }, {
      "id": "2888",
      "name": "民勤县",
      "code": "620621"
    }, {
      "id": "2889",
      "name": "古浪县",
      "code": "620622"
    }, {
      "id": "2890",
      "name": "天祝藏族自治县",
      "code": "620623"
    }]
  }, {
    "id": "309",
    "name": "张掖市",
    "code": "620700",
    "children": [{
      "id": "2891",
      "name": "市辖区",
      "code": "620701"
    }, {
      "id": "2892",
      "name": "甘州区",
      "code": "620702"
    }, {
      "id": "2893",
      "name": "肃南裕固族自治县",
      "code": "620721"
    }, {
      "id": "2894",
      "name": "民乐县",
      "code": "620722"
    }, {
      "id": "2895",
      "name": "临泽县",
      "code": "620723"
    }, {
      "id": "2896",
      "name": "高台县",
      "code": "620724"
    }, {
      "id": "2897",
      "name": "山丹县",
      "code": "620725"
    }]
  }, {
    "id": "310",
    "name": "平凉市",
    "code": "620800",
    "children": [{
      "id": "2898",
      "name": "市辖区",
      "code": "620801"
    }, {
      "id": "2899",
      "name": "崆峒区",
      "code": "620802"
    }, {
      "id": "2900",
      "name": "泾川县",
      "code": "620821"
    }, {
      "id": "2901",
      "name": "灵台县",
      "code": "620822"
    }, {
      "id": "2902",
      "name": "崇信县",
      "code": "620823"
    }, {
      "id": "2903",
      "name": "华亭县",
      "code": "620824"
    }, {
      "id": "2904",
      "name": "庄浪县",
      "code": "620825"
    }, {
      "id": "2905",
      "name": "静宁县",
      "code": "620826"
    }]
  }, {
    "id": "311",
    "name": "酒泉市",
    "code": "620900",
    "children": [{
      "id": "2906",
      "name": "市辖区",
      "code": "620901"
    }, {
      "id": "2907",
      "name": "肃州区",
      "code": "620902"
    }, {
      "id": "2908",
      "name": "金塔县",
      "code": "620921"
    }, {
      "id": "2909",
      "name": "瓜州县",
      "code": "620922"
    }, {
      "id": "2910",
      "name": "肃北蒙古族自治县",
      "code": "620923"
    }, {
      "id": "2911",
      "name": "阿克塞哈萨克族自治县",
      "code": "620924"
    }, {
      "id": "2912",
      "name": "玉门市",
      "code": "620981"
    }, {
      "id": "2913",
      "name": "敦煌市",
      "code": "620982"
    }]
  }, {
    "id": "312",
    "name": "庆阳市",
    "code": "621000",
    "children": [{
      "id": "2914",
      "name": "市辖区",
      "code": "621001"
    }, {
      "id": "2915",
      "name": "西峰区",
      "code": "621002"
    }, {
      "id": "2916",
      "name": "庆城县",
      "code": "621021"
    }, {
      "id": "2917",
      "name": "环县",
      "code": "621022"
    }, {
      "id": "2918",
      "name": "华池县",
      "code": "621023"
    }, {
      "id": "2919",
      "name": "合水县",
      "code": "621024"
    }, {
      "id": "2920",
      "name": "正宁县",
      "code": "621025"
    }, {
      "id": "2921",
      "name": "宁县",
      "code": "621026"
    }, {
      "id": "2922",
      "name": "镇原县",
      "code": "621027"
    }]
  }, {
    "id": "313",
    "name": "定西市",
    "code": "621100",
    "children": [{
      "id": "2923",
      "name": "市辖区",
      "code": "621101"
    }, {
      "id": "2924",
      "name": "安定区",
      "code": "621102"
    }, {
      "id": "2925",
      "name": "通渭县",
      "code": "621121"
    }, {
      "id": "2926",
      "name": "陇西县",
      "code": "621122"
    }, {
      "id": "2927",
      "name": "渭源县",
      "code": "621123"
    }, {
      "id": "2928",
      "name": "临洮县",
      "code": "621124"
    }, {
      "id": "2929",
      "name": "漳县",
      "code": "621125"
    }, {
      "id": "2930",
      "name": "岷县",
      "code": "621126"
    }]
  }, {
    "id": "314",
    "name": "陇南市",
    "code": "621200",
    "children": [{
      "id": "2931",
      "name": "市辖区",
      "code": "621201"
    }, {
      "id": "2932",
      "name": "武都区",
      "code": "621202"
    }, {
      "id": "2933",
      "name": "成县",
      "code": "621221"
    }, {
      "id": "2934",
      "name": "文县",
      "code": "621222"
    }, {
      "id": "2935",
      "name": "宕昌县",
      "code": "621223"
    }, {
      "id": "2936",
      "name": "康县",
      "code": "621224"
    }, {
      "id": "2937",
      "name": "西和县",
      "code": "621225"
    }, {
      "id": "2938",
      "name": "礼县",
      "code": "621226"
    }, {
      "id": "2939",
      "name": "徽县",
      "code": "621227"
    }, {
      "id": "2940",
      "name": "两当县",
      "code": "621228"
    }]
  }, {
    "id": "315",
    "name": "临夏回族自治州",
    "code": "622900",
    "children": [{
      "id": "2941",
      "name": "临夏市",
      "code": "622901"
    }, {
      "id": "2942",
      "name": "临夏县",
      "code": "622921"
    }, {
      "id": "2943",
      "name": "康乐县",
      "code": "622922"
    }, {
      "id": "2944",
      "name": "永靖县",
      "code": "622923"
    }, {
      "id": "2945",
      "name": "广河县",
      "code": "622924"
    }, {
      "id": "2946",
      "name": "和政县",
      "code": "622925"
    }, {
      "id": "2947",
      "name": "东乡族自治县",
      "code": "622926"
    }, {
      "id": "2948",
      "name": "积石山保安族东乡族撒拉族自治县",
      "code": "622927"
    }]
  }, {
    "id": "316",
    "name": "甘南藏族自治州",
    "code": "623000",
    "children": [{
      "id": "2949",
      "name": "合作市",
      "code": "623001"
    }, {
      "id": "2950",
      "name": "临潭县",
      "code": "623021"
    }, {
      "id": "2951",
      "name": "卓尼县",
      "code": "623022"
    }, {
      "id": "2952",
      "name": "舟曲县",
      "code": "623023"
    }, {
      "id": "2953",
      "name": "迭部县",
      "code": "623024"
    }, {
      "id": "2954",
      "name": "玛曲县",
      "code": "623025"
    }, {
      "id": "2955",
      "name": "碌曲县",
      "code": "623026"
    }, {
      "id": "2956",
      "name": "夏河县",
      "code": "623027"
    }]
  }]
}, {
  "id": "29",
  "name": "青海省",
  "code": "630000",
  "children": [{
    "id": "317",
    "name": "西宁市",
    "code": "630100",
    "children": [{
      "id": "2957",
      "name": "市辖区",
      "code": "630101"
    }, {
      "id": "2958",
      "name": "城东区",
      "code": "630102"
    }, {
      "id": "2959",
      "name": "城中区",
      "code": "630103"
    }, {
      "id": "2960",
      "name": "城西区",
      "code": "630104"
    }, {
      "id": "2961",
      "name": "城北区",
      "code": "630105"
    }, {
      "id": "2962",
      "name": "大通回族土族自治县",
      "code": "630121"
    }, {
      "id": "2963",
      "name": "湟中县",
      "code": "630122"
    }, {
      "id": "2964",
      "name": "湟源县",
      "code": "630123"
    }]
  }, {
    "id": "318",
    "name": "海东市",
    "code": "630200",
    "children": [{
      "id": "2965",
      "name": "乐都区",
      "code": "630202"
    }, {
      "id": "2966",
      "name": "平安区",
      "code": "630203"
    }, {
      "id": "2967",
      "name": "民和回族土族自治县",
      "code": "630222"
    }, {
      "id": "2968",
      "name": "互助土族自治县",
      "code": "630223"
    }, {
      "id": "2969",
      "name": "化隆回族自治县",
      "code": "630224"
    }, {
      "id": "2970",
      "name": "循化撒拉族自治县",
      "code": "630225"
    }]
  }, {
    "id": "319",
    "name": "海北藏族自治州",
    "code": "632200",
    "children": [{
      "id": "2971",
      "name": "门源回族自治县",
      "code": "632221"
    }, {
      "id": "2972",
      "name": "祁连县",
      "code": "632222"
    }, {
      "id": "2973",
      "name": "海晏县",
      "code": "632223"
    }, {
      "id": "2974",
      "name": "刚察县",
      "code": "632224"
    }]
  }, {
    "id": "320",
    "name": "黄南藏族自治州",
    "code": "632300",
    "children": [{
      "id": "2975",
      "name": "同仁县",
      "code": "632321"
    }, {
      "id": "2976",
      "name": "尖扎县",
      "code": "632322"
    }, {
      "id": "2977",
      "name": "泽库县",
      "code": "632323"
    }, {
      "id": "2978",
      "name": "河南蒙古族自治县",
      "code": "632324"
    }]
  }, {
    "id": "321",
    "name": "海南藏族自治州",
    "code": "632500",
    "children": [{
      "id": "2979",
      "name": "共和县",
      "code": "632521"
    }, {
      "id": "2980",
      "name": "同德县",
      "code": "632522"
    }, {
      "id": "2981",
      "name": "贵德县",
      "code": "632523"
    }, {
      "id": "2982",
      "name": "兴海县",
      "code": "632524"
    }, {
      "id": "2983",
      "name": "贵南县",
      "code": "632525"
    }]
  }, {
    "id": "322",
    "name": "果洛藏族自治州",
    "code": "632600",
    "children": [{
      "id": "2984",
      "name": "玛沁县",
      "code": "632621"
    }, {
      "id": "2985",
      "name": "班玛县",
      "code": "632622"
    }, {
      "id": "2986",
      "name": "甘德县",
      "code": "632623"
    }, {
      "id": "2987",
      "name": "达日县",
      "code": "632624"
    }, {
      "id": "2988",
      "name": "久治县",
      "code": "632625"
    }, {
      "id": "2989",
      "name": "玛多县",
      "code": "632626"
    }]
  }, {
    "id": "323",
    "name": "玉树藏族自治州",
    "code": "632700",
    "children": [{
      "id": "2990",
      "name": "玉树市",
      "code": "632701"
    }, {
      "id": "2991",
      "name": "杂多县",
      "code": "632722"
    }, {
      "id": "2992",
      "name": "称多县",
      "code": "632723"
    }, {
      "id": "2993",
      "name": "治多县",
      "code": "632724"
    }, {
      "id": "2994",
      "name": "囊谦县",
      "code": "632725"
    }, {
      "id": "2995",
      "name": "曲麻莱县",
      "code": "632726"
    }]
  }, {
    "id": "324",
    "name": "海西蒙古族藏族自治州",
    "code": "632800",
    "children": [{
      "id": "2996",
      "name": "格尔木市",
      "code": "632801"
    }, {
      "id": "2997",
      "name": "德令哈市",
      "code": "632802"
    }, {
      "id": "2998",
      "name": "乌兰县",
      "code": "632821"
    }, {
      "id": "2999",
      "name": "都兰县",
      "code": "632822"
    }, {
      "id": "3000",
      "name": "天峻县",
      "code": "632823"
    }]
  }]
}, {
  "id": "30",
  "name": "宁夏回族自治区",
  "code": "640000",
  "children": [{
    "id": "325",
    "name": "银川市",
    "code": "640100",
    "children": [{
      "id": "3001",
      "name": "市辖区",
      "code": "640101"
    }, {
      "id": "3002",
      "name": "兴庆区",
      "code": "640104"
    }, {
      "id": "3003",
      "name": "西夏区",
      "code": "640105"
    }, {
      "id": "3004",
      "name": "金凤区",
      "code": "640106"
    }, {
      "id": "3005",
      "name": "永宁县",
      "code": "640121"
    }, {
      "id": "3006",
      "name": "贺兰县",
      "code": "640122"
    }, {
      "id": "3007",
      "name": "灵武市",
      "code": "640181"
    }]
  }, {
    "id": "326",
    "name": "石嘴山市",
    "code": "640200",
    "children": [{
      "id": "3008",
      "name": "市辖区",
      "code": "640201"
    }, {
      "id": "3009",
      "name": "大武口区",
      "code": "640202"
    }, {
      "id": "3010",
      "name": "惠农区",
      "code": "640205"
    }, {
      "id": "3011",
      "name": "平罗县",
      "code": "640221"
    }]
  }, {
    "id": "327",
    "name": "吴忠市",
    "code": "640300",
    "children": [{
      "id": "3012",
      "name": "市辖区",
      "code": "640301"
    }, {
      "id": "3013",
      "name": "利通区",
      "code": "640302"
    }, {
      "id": "3014",
      "name": "红寺堡区",
      "code": "640303"
    }, {
      "id": "3015",
      "name": "盐池县",
      "code": "640323"
    }, {
      "id": "3016",
      "name": "同心县",
      "code": "640324"
    }, {
      "id": "3017",
      "name": "青铜峡市",
      "code": "640381"
    }]
  }, {
    "id": "328",
    "name": "固原市",
    "code": "640400",
    "children": [{
      "id": "3018",
      "name": "市辖区",
      "code": "640401"
    }, {
      "id": "3019",
      "name": "原州区",
      "code": "640402"
    }, {
      "id": "3020",
      "name": "西吉县",
      "code": "640422"
    }, {
      "id": "3021",
      "name": "隆德县",
      "code": "640423"
    }, {
      "id": "3022",
      "name": "泾源县",
      "code": "640424"
    }, {
      "id": "3023",
      "name": "彭阳县",
      "code": "640425"
    }]
  }, {
    "id": "329",
    "name": "中卫市",
    "code": "640500",
    "children": [{
      "id": "3024",
      "name": "市辖区",
      "code": "640501"
    }, {
      "id": "3025",
      "name": "沙坡头区",
      "code": "640502"
    }, {
      "id": "3026",
      "name": "中宁县",
      "code": "640521"
    }, {
      "id": "3027",
      "name": "海原县",
      "code": "640522"
    }]
  }]
}, {
  "id": "31",
  "name": "新疆维吾尔自治区",
  "code": "650000",
  "children": [{
    "id": "330",
    "name": "乌鲁木齐市",
    "code": "650100",
    "children": [{
      "id": "3028",
      "name": "市辖区",
      "code": "650101"
    }, {
      "id": "3029",
      "name": "天山区",
      "code": "650102"
    }, {
      "id": "3030",
      "name": "沙依巴克区",
      "code": "650103"
    }, {
      "id": "3031",
      "name": "新市区",
      "code": "650104"
    }, {
      "id": "3032",
      "name": "水磨沟区",
      "code": "650105"
    }, {
      "id": "3033",
      "name": "头屯河区",
      "code": "650106"
    }, {
      "id": "3034",
      "name": "达坂城区",
      "code": "650107"
    }, {
      "id": "3035",
      "name": "米东区",
      "code": "650109"
    }, {
      "id": "3036",
      "name": "乌鲁木齐县",
      "code": "650121"
    }]
  }, {
    "id": "331",
    "name": "克拉玛依市",
    "code": "650200",
    "children": [{
      "id": "3037",
      "name": "市辖区",
      "code": "650201"
    }, {
      "id": "3038",
      "name": "独山子区",
      "code": "650202"
    }, {
      "id": "3039",
      "name": "克拉玛依区",
      "code": "650203"
    }, {
      "id": "3040",
      "name": "白碱滩区",
      "code": "650204"
    }, {
      "id": "3041",
      "name": "乌尔禾区",
      "code": "650205"
    }]
  }, {
    "id": "332",
    "name": "吐鲁番市",
    "code": "650400",
    "children": [{
      "id": "3042",
      "name": "高昌区",
      "code": "650402"
    }, {
      "id": "3043",
      "name": "鄯善县",
      "code": "650421"
    }, {
      "id": "3044",
      "name": "托克逊县",
      "code": "650422"
    }]
  }, {
    "id": "333",
    "name": "哈密市",
    "code": "650500",
    "children": [{
      "id": "3045",
      "name": "伊州区",
      "code": "650502"
    }, {
      "id": "3046",
      "name": "巴里坤哈萨克自治县",
      "code": "650521"
    }, {
      "id": "3047",
      "name": "伊吾县",
      "code": "650522"
    }]
  }, {
    "id": "334",
    "name": "昌吉回族自治州",
    "code": "652300",
    "children": [{
      "id": "3048",
      "name": "昌吉市",
      "code": "652301"
    }, {
      "id": "3049",
      "name": "阜康市",
      "code": "652302"
    }, {
      "id": "3050",
      "name": "呼图壁县",
      "code": "652323"
    }, {
      "id": "3051",
      "name": "玛纳斯县",
      "code": "652324"
    }, {
      "id": "3052",
      "name": "奇台县",
      "code": "652325"
    }, {
      "id": "3053",
      "name": "吉木萨尔县",
      "code": "652327"
    }, {
      "id": "3054",
      "name": "木垒哈萨克自治县",
      "code": "652328"
    }]
  }, {
    "id": "335",
    "name": "博尔塔拉蒙古自治州",
    "code": "652700",
    "children": [{
      "id": "3055",
      "name": "博乐市",
      "code": "652701"
    }, {
      "id": "3056",
      "name": "阿拉山口市",
      "code": "652702"
    }, {
      "id": "3057",
      "name": "精河县",
      "code": "652722"
    }, {
      "id": "3058",
      "name": "温泉县",
      "code": "652723"
    }]
  }, {
    "id": "336",
    "name": "巴音郭楞蒙古自治州",
    "code": "652800",
    "children": [{
      "id": "3059",
      "name": "库尔勒市",
      "code": "652801"
    }, {
      "id": "3060",
      "name": "轮台县",
      "code": "652822"
    }, {
      "id": "3061",
      "name": "尉犁县",
      "code": "652823"
    }, {
      "id": "3062",
      "name": "若羌县",
      "code": "652824"
    }, {
      "id": "3063",
      "name": "且末县",
      "code": "652825"
    }, {
      "id": "3064",
      "name": "焉耆回族自治县",
      "code": "652826"
    }, {
      "id": "3065",
      "name": "和静县",
      "code": "652827"
    }, {
      "id": "3066",
      "name": "和硕县",
      "code": "652828"
    }, {
      "id": "3067",
      "name": "博湖县",
      "code": "652829"
    }]
  }, {
    "id": "337",
    "name": "阿克苏地区",
    "code": "652900",
    "children": [{
      "id": "3068",
      "name": "阿克苏市",
      "code": "652901"
    }, {
      "id": "3069",
      "name": "温宿县",
      "code": "652922"
    }, {
      "id": "3070",
      "name": "库车县",
      "code": "652923"
    }, {
      "id": "3071",
      "name": "沙雅县",
      "code": "652924"
    }, {
      "id": "3072",
      "name": "新和县",
      "code": "652925"
    }, {
      "id": "3073",
      "name": "拜城县",
      "code": "652926"
    }, {
      "id": "3074",
      "name": "乌什县",
      "code": "652927"
    }, {
      "id": "3075",
      "name": "阿瓦提县",
      "code": "652928"
    }, {
      "id": "3076",
      "name": "柯坪县",
      "code": "652929"
    }]
  }, {
    "id": "338",
    "name": "克孜勒苏柯尔克孜自治州",
    "code": "653000",
    "children": [{
      "id": "3077",
      "name": "阿图什市",
      "code": "653001"
    }, {
      "id": "3078",
      "name": "阿克陶县",
      "code": "653022"
    }, {
      "id": "3079",
      "name": "阿合奇县",
      "code": "653023"
    }, {
      "id": "3080",
      "name": "乌恰县",
      "code": "653024"
    }]
  }, {
    "id": "339",
    "name": "喀什地区",
    "code": "653100",
    "children": [{
      "id": "3081",
      "name": "喀什市",
      "code": "653101"
    }, {
      "id": "3082",
      "name": "疏附县",
      "code": "653121"
    }, {
      "id": "3083",
      "name": "疏勒县",
      "code": "653122"
    }, {
      "id": "3084",
      "name": "英吉沙县",
      "code": "653123"
    }, {
      "id": "3085",
      "name": "泽普县",
      "code": "653124"
    }, {
      "id": "3086",
      "name": "莎车县",
      "code": "653125"
    }, {
      "id": "3087",
      "name": "叶城县",
      "code": "653126"
    }, {
      "id": "3088",
      "name": "麦盖提县",
      "code": "653127"
    }, {
      "id": "3089",
      "name": "岳普湖县",
      "code": "653128"
    }, {
      "id": "3090",
      "name": "伽师县",
      "code": "653129"
    }, {
      "id": "3091",
      "name": "巴楚县",
      "code": "653130"
    }, {
      "id": "3092",
      "name": "塔什库尔干塔吉克自治县",
      "code": "653131"
    }]
  }, {
    "id": "340",
    "name": "和田地区",
    "code": "653200",
    "children": [{
      "id": "3093",
      "name": "和田市",
      "code": "653201"
    }, {
      "id": "3094",
      "name": "和田县",
      "code": "653221"
    }, {
      "id": "3095",
      "name": "墨玉县",
      "code": "653222"
    }, {
      "id": "3096",
      "name": "皮山县",
      "code": "653223"
    }, {
      "id": "3097",
      "name": "洛浦县",
      "code": "653224"
    }, {
      "id": "3098",
      "name": "策勒县",
      "code": "653225"
    }, {
      "id": "3099",
      "name": "于田县",
      "code": "653226"
    }, {
      "id": "3100",
      "name": "民丰县",
      "code": "653227"
    }]
  }, {
    "id": "341",
    "name": "伊犁哈萨克自治州",
    "code": "654000",
    "children": [{
      "id": "3101",
      "name": "伊宁市",
      "code": "654002"
    }, {
      "id": "3102",
      "name": "奎屯市",
      "code": "654003"
    }, {
      "id": "3103",
      "name": "霍尔果斯市",
      "code": "654004"
    }, {
      "id": "3104",
      "name": "伊宁县",
      "code": "654021"
    }, {
      "id": "3105",
      "name": "察布查尔锡伯自治县",
      "code": "654022"
    }, {
      "id": "3106",
      "name": "霍城县",
      "code": "654023"
    }, {
      "id": "3107",
      "name": "巩留县",
      "code": "654024"
    }, {
      "id": "3108",
      "name": "新源县",
      "code": "654025"
    }, {
      "id": "3109",
      "name": "昭苏县",
      "code": "654026"
    }, {
      "id": "3110",
      "name": "特克斯县",
      "code": "654027"
    }, {
      "id": "3111",
      "name": "尼勒克县",
      "code": "654028"
    }]
  }, {
    "id": "342",
    "name": "塔城地区",
    "code": "654200",
    "children": [{
      "id": "3112",
      "name": "塔城市",
      "code": "654201"
    }, {
      "id": "3113",
      "name": "乌苏市",
      "code": "654202"
    }, {
      "id": "3114",
      "name": "额敏县",
      "code": "654221"
    }, {
      "id": "3115",
      "name": "沙湾县",
      "code": "654223"
    }, {
      "id": "3116",
      "name": "托里县",
      "code": "654224"
    }, {
      "id": "3117",
      "name": "裕民县",
      "code": "654225"
    }, {
      "id": "3118",
      "name": "和布克赛尔蒙古自治县",
      "code": "654226"
    }]
  }, {
    "id": "343",
    "name": "阿勒泰地区",
    "code": "654300",
    "children": [{
      "id": "3119",
      "name": "阿勒泰市",
      "code": "654301"
    }, {
      "id": "3120",
      "name": "布尔津县",
      "code": "654321"
    }, {
      "id": "3121",
      "name": "富蕴县",
      "code": "654322"
    }, {
      "id": "3122",
      "name": "福海县",
      "code": "654323"
    }, {
      "id": "3123",
      "name": "哈巴河县",
      "code": "654324"
    }, {
      "id": "3124",
      "name": "青河县",
      "code": "654325"
    }, {
      "id": "3125",
      "name": "吉木乃县",
      "code": "654326"
    }]
  }, {
    "id": "344",
    "name": "自治区直辖县级行政区划",
    "code": "659000",
    "children": [{
      "id": "3126",
      "name": "石河子市",
      "code": "659001"
    }, {
      "id": "3127",
      "name": "阿拉尔市",
      "code": "659002"
    }, {
      "id": "3128",
      "name": "图木舒克市",
      "code": "659003"
    }, {
      "id": "3129",
      "name": "五家渠市",
      "code": "659004"
    }, {
      "id": "3130",
      "name": "铁门关市",
      "code": "659006"
    }]
  }]
}, {
  "id": "32",
  "name": "台湾省",
  "code": "710000",
  "children": [{
    "id": "345",
    "name": "台湾",
    "code": "710000",
    "children": [{
      "id": "3131",
      "name": "台湾",
      "code": "710000"
    }]
  }]
}, {
  "id": "33",
  "name": "香港特别行政区",
  "code": "810000",
  "children": [{
    "id": "346",
    "name": "香港",
    "code": "810000",
    "children": [{
      "id": "3132",
      "name": "香港",
      "code": "810000"
    }]
  }]
}, {
  "id": "34",
  "name": "澳门特别行政区",
  "code": "820000",
  "children": [{
    "id": "347",
    "name": "澳门",
    "code": "820000",
    "children": [{
      "id": "3133",
      "name": "澳门",
      "code": "820000"
    }]
  }]
}];
module.exports = {
  zones_tree: zones_tree
};

/***/ }),

/***/ 9:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 91:
/*!***************************************************************************************************!*\
  !*** C:/Users/liuxingyu/Desktop/TurboTrainning-main/yueke/yueke_uniapp/comm/behavior/about_bh.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 28);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 31);
var pageHelper = __webpack_require__(/*! ../../helper/page_helper.js */ 64);
var cloudHelper = __webpack_require__(/*! ../../helper/cloud_helper.js */ 68);
module.exports = {
  data: function data() {
    return {
      isLoad: false
    };
  },
  methods: {
    _loadDetail: function () {
      var _loadDetail2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, items) {
        var options,
          title,
          k,
          opts,
          params,
          about,
          _args = arguments;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;
                title = '';
                if (!(options && options.title)) {
                  _context.next = 7;
                  break;
                }
                title = decodeURIComponent(options.title);
                uni.setNavigationBarTitle({
                  title: title
                });
                _context.next = 17;
                break;
              case 7:
                k = 0;
              case 8:
                if (!(k < items.length)) {
                  _context.next = 17;
                  break;
                }
                if (!(items[k].key == key)) {
                  _context.next = 14;
                  break;
                }
                title = items[k].title;
                uni.setNavigationBarTitle({
                  title: title
                });
                if (key == 'SETUP_CONTENT_ABOUT') {
                  this.setData({
                    accountInfo: uni.getAccountInfoSync()
                  });
                }
                return _context.abrupt("break", 17);
              case 14:
                k++;
                _context.next = 8;
                break;
              case 17:
                opts = {
                  title: 'bar'
                };
                params = {
                  key: key
                };
                _context.next = 21;
                return cloudHelper.callCloudData('home/setup_get', params, opts);
              case 21:
                about = _context.sent;
                if (!about) {
                  about = [{
                    type: 'text',
                    val: title
                  }];
                }
                if (about) {
                  this.setData({
                    about: about,
                    isLoad: true
                  });
                }
              case 24:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function _loadDetail(_x, _x2) {
        return _loadDetail2.apply(this, arguments);
      }
      return _loadDetail;
    }(),
    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function onReady() {},
    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function onShow() {},
    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function onHide() {},
    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function onUnload() {},
    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function onPullDownRefresh() {
      this._loadDetail();
      uni.stopPullDownRefresh();
    },
    /**
     * 用户点击右上角分享
     */
    onShareAppMessage: function onShareAppMessage() {},
    url: function url(e) {
      pageHelper.url(e, this);
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map